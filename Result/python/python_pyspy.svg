<?xml version="1.0" standalone="no"?><!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd"><svg version="1.1" width="1200" height="3034" onload="init(evt)" viewBox="0 0 1200 3034" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" xmlns:fg="http://github.com/jonhoo/inferno"><!--Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples.--><!--NOTES: --><defs><linearGradient id="background" y1="0" y2="1" x1="0" x2="0"><stop stop-color="#eeeeee" offset="5%"/><stop stop-color="#eeeeb0" offset="95%"/></linearGradient></defs><style type="text/css">
text { font-family:monospace; font-size:12px }
#title { text-anchor:middle; font-size:17px; }
#matched { text-anchor:end; }
#search { text-anchor:end; opacity:0.1; cursor:pointer; }
#search:hover, #search.show { opacity:1; }
#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
#unzoom { cursor:pointer; }
#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
.hide { display:none; }
.parent { opacity:0.5; }
</style><script type="text/ecmascript"><![CDATA[
        var nametype = 'Function:';
        var fontsize = 12;
        var fontwidth = 0.59;
        var xpad = 10;
        var inverted = true;
        var searchcolor = 'rgb(230,0,230)';
        var fluiddrawing = true;
        var truncate_text_right = false;
    ]]><![CDATA["use strict";
var details, searchbtn, unzoombtn, matchedtxt, svg, searching, frames, known_font_width;
function init(evt) {
    details = document.getElementById("details").firstChild;
    searchbtn = document.getElementById("search");
    unzoombtn = document.getElementById("unzoom");
    matchedtxt = document.getElementById("matched");
    svg = document.getElementsByTagName("svg")[0];
    frames = document.getElementById("frames");
    known_font_width = get_monospace_width(frames);
    total_samples = parseInt(frames.attributes.total_samples.value);
    searching = 0;

    // Use GET parameters to restore a flamegraph's state.
    var restore_state = function() {
        var params = get_params();
        if (params.x && params.y)
            zoom(find_group(document.querySelector('[*|x="' + params.x + '"][y="' + params.y + '"]')));
        if (params.s)
            search(params.s);
    };

    if (fluiddrawing) {
        // Make width dynamic so the SVG fits its parent's width.
        svg.removeAttribute("width");
        // Edge requires us to have a viewBox that gets updated with size changes.
        var isEdge = /Edge\/\d./i.test(navigator.userAgent);
        if (!isEdge) {
            svg.removeAttribute("viewBox");
        }
        var update_for_width_change = function() {
            if (isEdge) {
                svg.attributes.viewBox.value = "0 0 " + svg.width.baseVal.value + " " + svg.height.baseVal.value;
            }

            // Keep consistent padding on left and right of frames container.
            frames.attributes.width.value = svg.width.baseVal.value - xpad * 2;

            // Text truncation needs to be adjusted for the current width.
            update_text_for_elements(frames.children);

            // Keep search elements at a fixed distance from right edge.
            var svgWidth = svg.width.baseVal.value;
            searchbtn.attributes.x.value = svgWidth - xpad;
            matchedtxt.attributes.x.value = svgWidth - xpad;
        };
        window.addEventListener('resize', function() {
            update_for_width_change();
        });
        // This needs to be done asynchronously for Safari to work.
        setTimeout(function() {
            unzoom();
            update_for_width_change();
            restore_state();
        }, 0);
    } else {
        restore_state();
    }
}
// event listeners
window.addEventListener("click", function(e) {
    var target = find_group(e.target);
    if (target) {
        if (target.nodeName == "a") {
            if (e.ctrlKey === false) return;
            e.preventDefault();
        }
        if (target.classList.contains("parent")) unzoom();
        zoom(target);

        // set parameters for zoom state
        var el = target.querySelector("rect");
        if (el && el.attributes && el.attributes.y && el.attributes["fg:x"]) {
            var params = get_params()
            params.x = el.attributes["fg:x"].value;
            params.y = el.attributes.y.value;
            history.replaceState(null, null, parse_params(params));
        }
    }
    else if (e.target.id == "unzoom") {
        unzoom();

        // remove zoom state
        var params = get_params();
        if (params.x) delete params.x;
        if (params.y) delete params.y;
        history.replaceState(null, null, parse_params(params));
    }
    else if (e.target.id == "search") search_prompt();
}, false)
// mouse-over for info
// show
window.addEventListener("mouseover", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = nametype + " " + g_to_text(target);
}, false)
// clear
window.addEventListener("mouseout", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = ' ';
}, false)
// ctrl-F for search
window.addEventListener("keydown",function (e) {
    if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
        e.preventDefault();
        search_prompt();
    }
}, false)
// functions
function get_params() {
    var params = {};
    var paramsarr = window.location.search.substr(1).split('&');
    for (var i = 0; i < paramsarr.length; ++i) {
        var tmp = paramsarr[i].split("=");
        if (!tmp[0] || !tmp[1]) continue;
        params[tmp[0]]  = decodeURIComponent(tmp[1]);
    }
    return params;
}
function parse_params(params) {
    var uri = "?";
    for (var key in params) {
        uri += key + '=' + encodeURIComponent(params[key]) + '&';
    }
    if (uri.slice(-1) == "&")
        uri = uri.substring(0, uri.length - 1);
    if (uri == '?')
        uri = window.location.href.split('?')[0];
    return uri;
}
function find_child(node, selector) {
    var children = node.querySelectorAll(selector);
    if (children.length) return children[0];
    return;
}
function find_group(node) {
    var parent = node.parentElement;
    if (!parent) return;
    if (parent.id == "frames") return node;
    return find_group(parent);
}
function orig_save(e, attr, val) {
    if (e.attributes["fg:orig_" + attr] != undefined) return;
    if (e.attributes[attr] == undefined) return;
    if (val == undefined) val = e.attributes[attr].value;
    e.setAttribute("fg:orig_" + attr, val);
}
function orig_load(e, attr) {
    if (e.attributes["fg:orig_"+attr] == undefined) return;
    e.attributes[attr].value = e.attributes["fg:orig_" + attr].value;
    e.removeAttribute("fg:orig_" + attr);
}
function g_to_text(e) {
    var text = find_child(e, "title").firstChild.nodeValue;
    return (text)
}
function g_to_func(e) {
    var func = g_to_text(e);
    // if there's any manipulation we want to do to the function
    // name before it's searched, do it here before returning.
    return (func);
}
function get_monospace_width(frames) {
    // Given the id="frames" element, return the width of text characters if
    // this is a monospace font, otherwise return 0.
    text = find_child(frames.children[0], "text");
    originalContent = text.textContent;
    text.textContent = "!";
    bangWidth = text.getComputedTextLength();
    text.textContent = "W";
    wWidth = text.getComputedTextLength();
    text.textContent = originalContent;
    if (bangWidth === wWidth) {
        return bangWidth;
    } else {
        return 0;
    }
}
function update_text_for_elements(elements) {
    // In order to render quickly in the browser, you want to do one pass of
    // reading attributes, and one pass of mutating attributes. See
    // https://web.dev/avoid-large-complex-layouts-and-layout-thrashing/ for details.

    // Fall back to inefficient calculation, if we're variable-width font.
    // TODO This should be optimized somehow too.
    if (known_font_width === 0) {
        for (var i = 0; i < elements.length; i++) {
            update_text(elements[i]);
        }
        return;
    }

    var textElemNewAttributes = [];
    for (var i = 0; i < elements.length; i++) {
        var e = elements[i];
        var r = find_child(e, "rect");
        var t = find_child(e, "text");
        var w = parseFloat(r.attributes.width.value) * frames.attributes.width.value / 100 - 3;
        var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
        var newX = format_percent((parseFloat(r.attributes.x.value) + (100 * 3 / frames.attributes.width.value)));

        // Smaller than this size won't fit anything
        if (w < 2 * known_font_width) {
            textElemNewAttributes.push([newX, ""]);
            continue;
        }

        // Fit in full text width
        if (txt.length * known_font_width < w) {
            textElemNewAttributes.push([newX, txt]);
            continue;
        }

        var substringLength = Math.floor(w / known_font_width) - 2;
        if (truncate_text_right) {
            // Truncate the right side of the text.
            textElemNewAttributes.push([newX, txt.substring(0, substringLength) + ".."]);
            continue;
        } else {
            // Truncate the left side of the text.
            textElemNewAttributes.push([newX, ".." + txt.substring(txt.length - substringLength, txt.length)]);
            continue;
        }
    }

    console.assert(textElemNewAttributes.length === elements.length, "Resize failed, please file a bug at https://github.com/jonhoo/inferno/");

    // Now that we know new textContent, set it all in one go so we don't refresh a bazillion times.
    for (var i = 0; i < elements.length; i++) {
        var e = elements[i];
        var values = textElemNewAttributes[i];
        var t = find_child(e, "text");
        t.attributes.x.value = values[0];
        t.textContent = values[1];
    }
}

function update_text(e) {
    var r = find_child(e, "rect");
    var t = find_child(e, "text");
    var w = parseFloat(r.attributes.width.value) * frames.attributes.width.value / 100 - 3;
    var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
    t.attributes.x.value = format_percent((parseFloat(r.attributes.x.value) + (100 * 3 / frames.attributes.width.value)));

    // Smaller than this size won't fit anything
    if (w < 2 * fontsize * fontwidth) {
        t.textContent = "";
        return;
    }
    t.textContent = txt;
    // Fit in full text width
    if (t.getComputedTextLength() < w)
        return;
    if (truncate_text_right) {
        // Truncate the right side of the text.
        for (var x = txt.length - 2; x > 0; x--) {
            if (t.getSubStringLength(0, x + 2) <= w) {
                t.textContent = txt.substring(0, x) + "..";
                return;
            }
        }
    } else {
        // Truncate the left side of the text.
        for (var x = 2; x < txt.length; x++) {
            if (t.getSubStringLength(x - 2, txt.length) <= w) {
                t.textContent = ".." + txt.substring(x, txt.length);
                return;
            }
        }
    }
    t.textContent = "";
}
// zoom
function zoom_reset(e) {
    if (e.tagName == "rect") {
        e.attributes.x.value = format_percent(100 * parseInt(e.attributes["fg:x"].value) / total_samples);
        e.attributes.width.value = format_percent(100 * parseInt(e.attributes["fg:w"].value) / total_samples);
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_reset(c[i]);
    }
}
function zoom_child(e, x, zoomed_width_samples) {
    if (e.tagName == "text") {
        var parent_x = parseFloat(find_child(e.parentNode, "rect[x]").attributes.x.value);
        e.attributes.x.value = format_percent(parent_x + (100 * 3 / frames.attributes.width.value));
    } else if (e.tagName == "rect") {
        e.attributes.x.value = format_percent(100 * (parseInt(e.attributes["fg:x"].value) - x) / zoomed_width_samples);
        e.attributes.width.value = format_percent(100 * parseInt(e.attributes["fg:w"].value) / zoomed_width_samples);
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_child(c[i], x, zoomed_width_samples);
    }
}
function zoom_parent(e) {
    if (e.attributes) {
        if (e.attributes.x != undefined) {
            e.attributes.x.value = "0.0%";
        }
        if (e.attributes.width != undefined) {
            e.attributes.width.value = "100.0%";
        }
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_parent(c[i]);
    }
}
function zoom(node) {
    var attr = find_child(node, "rect").attributes;
    var width = parseInt(attr["fg:w"].value);
    var xmin = parseInt(attr["fg:x"].value);
    var xmax = xmin + width;
    var ymin = parseFloat(attr.y.value);
    unzoombtn.classList.remove("hide");
    var el = frames.children;
    var to_update_text = [];
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        var a = find_child(e, "rect").attributes;
        var ex = parseInt(a["fg:x"].value);
        var ew = parseInt(a["fg:w"].value);
        // Is it an ancestor
        if (!inverted) {
            var upstack = parseFloat(a.y.value) > ymin;
        } else {
            var upstack = parseFloat(a.y.value) < ymin;
        }
        if (upstack) {
            // Direct ancestor
            if (ex <= xmin && (ex+ew) >= xmax) {
                e.classList.add("parent");
                zoom_parent(e);
                to_update_text.push(e);
            }
            // not in current path
            else
                e.classList.add("hide");
        }
        // Children maybe
        else {
            // no common path
            if (ex < xmin || ex >= xmax) {
                e.classList.add("hide");
            }
            else {
                zoom_child(e, xmin, width);
                to_update_text.push(e);
            }
        }
    }
    update_text_for_elements(to_update_text);
}
function unzoom() {
    unzoombtn.classList.add("hide");
    var el = frames.children;
    for(var i = 0; i < el.length; i++) {
        el[i].classList.remove("parent");
        el[i].classList.remove("hide");
        zoom_reset(el[i]);
    }
    update_text_for_elements(el);
}
// search
function reset_search() {
    var el = document.querySelectorAll("#frames rect");
    for (var i = 0; i < el.length; i++) {
        orig_load(el[i], "fill")
    }
    var params = get_params();
    delete params.s;
    history.replaceState(null, null, parse_params(params));
}
function search_prompt() {
    if (!searching) {
        var term = prompt("Enter a search term (regexp " +
            "allowed, eg: ^ext4_)", "");
        if (term != null) {
            search(term)
        }
    } else {
        reset_search();
        searching = 0;
        searchbtn.classList.remove("show");
        searchbtn.firstChild.nodeValue = "Search"
        matchedtxt.classList.add("hide");
        matchedtxt.firstChild.nodeValue = ""
    }
}
function search(term) {
    var re = new RegExp(term);
    var el = frames.children;
    var matches = new Object();
    var maxwidth = 0;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        // Skip over frames which are either not visible, or below the zoomed-to frame
        if (e.classList.contains("hide") || e.classList.contains("parent")) {
            continue;
        }
        var func = g_to_func(e);
        var rect = find_child(e, "rect");
        if (func == null || rect == null)
            continue;
        // Save max width. Only works as we have a root frame
        var w = parseInt(rect.attributes["fg:w"].value);
        if (w > maxwidth)
            maxwidth = w;
        if (func.match(re)) {
            // highlight
            var x = parseInt(rect.attributes["fg:x"].value);
            orig_save(rect, "fill");
            rect.attributes.fill.value = searchcolor;
            // remember matches
            if (matches[x] == undefined) {
                matches[x] = w;
            } else {
                if (w > matches[x]) {
                    // overwrite with parent
                    matches[x] = w;
                }
            }
            searching = 1;
        }
    }
    if (!searching)
        return;
    var params = get_params();
    params.s = term;
    history.replaceState(null, null, parse_params(params));

    searchbtn.classList.add("show");
    searchbtn.firstChild.nodeValue = "Reset Search";
    // calculate percent matched, excluding vertical overlap
    var count = 0;
    var lastx = -1;
    var lastw = 0;
    var keys = Array();
    for (k in matches) {
        if (matches.hasOwnProperty(k))
            keys.push(k);
    }
    // sort the matched frames by their x location
    // ascending, then width descending
    keys.sort(function(a, b){
        return a - b;
    });
    // Step through frames saving only the biggest bottom-up frames
    // thanks to the sort order. This relies on the tree property
    // where children are always smaller than their parents.
    for (var k in keys) {
        var x = parseInt(keys[k]);
        var w = matches[keys[k]];
        if (x >= lastx + lastw) {
            count += w;
            lastx = x;
            lastw = w;
        }
    }
    // display matched percent
    matchedtxt.classList.remove("hide");
    var pct = 100 * count / maxwidth;
    if (pct != 100) pct = pct.toFixed(1);
    matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
}
function format_percent(n) {
    return n.toFixed(4) + "%";
}
]]></script><rect x="0" y="0" width="100%" height="3034" fill="url(#background)"/><text id="title" fill="rgb(0,0,0)" x="50.0000%" y="24.00">/home/prathamesh/.cargo/bin/py-spy record --pid 41003 --native --output ./Result/python/python_pyspy.svg</text><text id="details" fill="rgb(0,0,0)" x="10" y="40.00"> </text><text id="unzoom" class="hide" fill="rgb(0,0,0)" x="10" y="24.00">Reset Zoom</text><text id="search" fill="rgb(0,0,0)" x="1190" y="24.00">Search</text><text id="matched" fill="rgb(0,0,0)" x="1190" y="3023.00"> </text><svg id="frames" x="10" width="1180" total_samples="6460"><g><title>&lt;module&gt; (torch/nn/modules/__init__.py:1) (10 samples, 0.15%)</title><rect x="1.4861%" y="548" width="0.1548%" height="15" fill="rgb(227,0,7)" fg:x="96" fg:w="10"/><text x="1.7361%" y="558.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:1360) (10 samples, 0.15%)</title><rect x="1.4861%" y="564" width="0.1548%" height="15" fill="rgb(217,0,24)" fg:x="96" fg:w="10"/><text x="1.7361%" y="574.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:1331) (10 samples, 0.15%)</title><rect x="1.4861%" y="580" width="0.1548%" height="15" fill="rgb(221,193,54)" fg:x="96" fg:w="10"/><text x="1.7361%" y="590.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:935) (10 samples, 0.15%)</title><rect x="1.4861%" y="596" width="0.1548%" height="15" fill="rgb(248,212,6)" fg:x="96" fg:w="10"/><text x="1.7361%" y="606.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:995) (10 samples, 0.15%)</title><rect x="1.4861%" y="612" width="0.1548%" height="15" fill="rgb(208,68,35)" fg:x="96" fg:w="10"/><text x="1.7361%" y="622.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:488) (10 samples, 0.15%)</title><rect x="1.4861%" y="628" width="0.1548%" height="15" fill="rgb(232,128,0)" fg:x="96" fg:w="10"/><text x="1.7361%" y="638.50"></text></g><g><title>&lt;module&gt; (torch/nn/modules/module.py:17) (10 samples, 0.15%)</title><rect x="1.4861%" y="644" width="0.1548%" height="15" fill="rgb(207,160,47)" fg:x="96" fg:w="10"/><text x="1.7361%" y="654.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:1360) (10 samples, 0.15%)</title><rect x="1.4861%" y="660" width="0.1548%" height="15" fill="rgb(228,23,34)" fg:x="96" fg:w="10"/><text x="1.7361%" y="670.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:1331) (7 samples, 0.11%)</title><rect x="1.5325%" y="676" width="0.1084%" height="15" fill="rgb(218,30,26)" fg:x="99" fg:w="7"/><text x="1.7825%" y="686.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:935) (7 samples, 0.11%)</title><rect x="1.5325%" y="692" width="0.1084%" height="15" fill="rgb(220,122,19)" fg:x="99" fg:w="7"/><text x="1.7825%" y="702.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:995) (7 samples, 0.11%)</title><rect x="1.5325%" y="708" width="0.1084%" height="15" fill="rgb(250,228,42)" fg:x="99" fg:w="7"/><text x="1.7825%" y="718.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:488) (7 samples, 0.11%)</title><rect x="1.5325%" y="724" width="0.1084%" height="15" fill="rgb(240,193,28)" fg:x="99" fg:w="7"/><text x="1.7825%" y="734.50"></text></g><g><title>&lt;module&gt; (torch/utils/_python_dispatch.py:13) (7 samples, 0.11%)</title><rect x="1.5325%" y="740" width="0.1084%" height="15" fill="rgb(216,20,37)" fg:x="99" fg:w="7"/><text x="1.7825%" y="750.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:1360) (7 samples, 0.11%)</title><rect x="1.5325%" y="756" width="0.1084%" height="15" fill="rgb(206,188,39)" fg:x="99" fg:w="7"/><text x="1.7825%" y="766.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:1331) (7 samples, 0.11%)</title><rect x="1.5325%" y="772" width="0.1084%" height="15" fill="rgb(217,207,13)" fg:x="99" fg:w="7"/><text x="1.7825%" y="782.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:935) (7 samples, 0.11%)</title><rect x="1.5325%" y="788" width="0.1084%" height="15" fill="rgb(231,73,38)" fg:x="99" fg:w="7"/><text x="1.7825%" y="798.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:995) (7 samples, 0.11%)</title><rect x="1.5325%" y="804" width="0.1084%" height="15" fill="rgb(225,20,46)" fg:x="99" fg:w="7"/><text x="1.7825%" y="814.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:488) (7 samples, 0.11%)</title><rect x="1.5325%" y="820" width="0.1084%" height="15" fill="rgb(210,31,41)" fg:x="99" fg:w="7"/><text x="1.7825%" y="830.50"></text></g><g><title>&lt;module&gt; (email/utils.py:33) (9 samples, 0.14%)</title><rect x="1.7957%" y="1876" width="0.1393%" height="15" fill="rgb(221,200,47)" fg:x="116" fg:w="9"/><text x="2.0457%" y="1886.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:1360) (9 samples, 0.14%)</title><rect x="1.7957%" y="1892" width="0.1393%" height="15" fill="rgb(226,26,5)" fg:x="116" fg:w="9"/><text x="2.0457%" y="1902.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:1331) (9 samples, 0.14%)</title><rect x="1.7957%" y="1908" width="0.1393%" height="15" fill="rgb(249,33,26)" fg:x="116" fg:w="9"/><text x="2.0457%" y="1918.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:935) (9 samples, 0.14%)</title><rect x="1.7957%" y="1924" width="0.1393%" height="15" fill="rgb(235,183,28)" fg:x="116" fg:w="9"/><text x="2.0457%" y="1934.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:995) (9 samples, 0.14%)</title><rect x="1.7957%" y="1940" width="0.1393%" height="15" fill="rgb(221,5,38)" fg:x="116" fg:w="9"/><text x="2.0457%" y="1950.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:488) (9 samples, 0.14%)</title><rect x="1.7957%" y="1956" width="0.1393%" height="15" fill="rgb(247,18,42)" fg:x="116" fg:w="9"/><text x="2.0457%" y="1966.50"></text></g><g><title>&lt;module&gt; (email/_parseaddr.py:16) (9 samples, 0.14%)</title><rect x="1.7957%" y="1972" width="0.1393%" height="15" fill="rgb(241,131,45)" fg:x="116" fg:w="9"/><text x="2.0457%" y="1982.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:1360) (9 samples, 0.14%)</title><rect x="1.7957%" y="1988" width="0.1393%" height="15" fill="rgb(249,31,29)" fg:x="116" fg:w="9"/><text x="2.0457%" y="1998.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:1331) (9 samples, 0.14%)</title><rect x="1.7957%" y="2004" width="0.1393%" height="15" fill="rgb(225,111,53)" fg:x="116" fg:w="9"/><text x="2.0457%" y="2014.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:935) (9 samples, 0.14%)</title><rect x="1.7957%" y="2020" width="0.1393%" height="15" fill="rgb(238,160,17)" fg:x="116" fg:w="9"/><text x="2.0457%" y="2030.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:995) (7 samples, 0.11%)</title><rect x="1.8266%" y="2036" width="0.1084%" height="15" fill="rgb(214,148,48)" fg:x="118" fg:w="7"/><text x="2.0766%" y="2046.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:488) (7 samples, 0.11%)</title><rect x="1.8266%" y="2052" width="0.1084%" height="15" fill="rgb(232,36,49)" fg:x="118" fg:w="7"/><text x="2.0766%" y="2062.50"></text></g><g><title>&lt;module&gt; (importlib/metadata/_adapters.py:5) (10 samples, 0.15%)</title><rect x="1.7957%" y="1652" width="0.1548%" height="15" fill="rgb(209,103,24)" fg:x="116" fg:w="10"/><text x="2.0457%" y="1662.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:1360) (10 samples, 0.15%)</title><rect x="1.7957%" y="1668" width="0.1548%" height="15" fill="rgb(229,88,8)" fg:x="116" fg:w="10"/><text x="2.0457%" y="1678.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:1331) (10 samples, 0.15%)</title><rect x="1.7957%" y="1684" width="0.1548%" height="15" fill="rgb(213,181,19)" fg:x="116" fg:w="10"/><text x="2.0457%" y="1694.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:935) (10 samples, 0.15%)</title><rect x="1.7957%" y="1700" width="0.1548%" height="15" fill="rgb(254,191,54)" fg:x="116" fg:w="10"/><text x="2.0457%" y="1710.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:995) (10 samples, 0.15%)</title><rect x="1.7957%" y="1716" width="0.1548%" height="15" fill="rgb(241,83,37)" fg:x="116" fg:w="10"/><text x="2.0457%" y="1726.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:488) (10 samples, 0.15%)</title><rect x="1.7957%" y="1732" width="0.1548%" height="15" fill="rgb(233,36,39)" fg:x="116" fg:w="10"/><text x="2.0457%" y="1742.50"></text></g><g><title>&lt;module&gt; (email/message.py:15) (10 samples, 0.15%)</title><rect x="1.7957%" y="1748" width="0.1548%" height="15" fill="rgb(226,3,54)" fg:x="116" fg:w="10"/><text x="2.0457%" y="1758.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;:1415) (10 samples, 0.15%)</title><rect x="1.7957%" y="1764" width="0.1548%" height="15" fill="rgb(245,192,40)" fg:x="116" fg:w="10"/><text x="2.0457%" y="1774.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:488) (10 samples, 0.15%)</title><rect x="1.7957%" y="1780" width="0.1548%" height="15" fill="rgb(238,167,29)" fg:x="116" fg:w="10"/><text x="2.0457%" y="1790.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:1360) (10 samples, 0.15%)</title><rect x="1.7957%" y="1796" width="0.1548%" height="15" fill="rgb(232,182,51)" fg:x="116" fg:w="10"/><text x="2.0457%" y="1806.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:1331) (10 samples, 0.15%)</title><rect x="1.7957%" y="1812" width="0.1548%" height="15" fill="rgb(231,60,39)" fg:x="116" fg:w="10"/><text x="2.0457%" y="1822.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:935) (10 samples, 0.15%)</title><rect x="1.7957%" y="1828" width="0.1548%" height="15" fill="rgb(208,69,12)" fg:x="116" fg:w="10"/><text x="2.0457%" y="1838.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:995) (10 samples, 0.15%)</title><rect x="1.7957%" y="1844" width="0.1548%" height="15" fill="rgb(235,93,37)" fg:x="116" fg:w="10"/><text x="2.0457%" y="1854.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:488) (10 samples, 0.15%)</title><rect x="1.7957%" y="1860" width="0.1548%" height="15" fill="rgb(213,116,39)" fg:x="116" fg:w="10"/><text x="2.0457%" y="1870.50"></text></g><g><title>&lt;module&gt; (importlib/metadata/__init__.py:19) (14 samples, 0.22%)</title><rect x="1.7492%" y="1524" width="0.2167%" height="15" fill="rgb(222,207,29)" fg:x="113" fg:w="14"/><text x="1.9992%" y="1534.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;:1415) (14 samples, 0.22%)</title><rect x="1.7492%" y="1540" width="0.2167%" height="15" fill="rgb(206,96,30)" fg:x="113" fg:w="14"/><text x="1.9992%" y="1550.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:488) (14 samples, 0.22%)</title><rect x="1.7492%" y="1556" width="0.2167%" height="15" fill="rgb(218,138,4)" fg:x="113" fg:w="14"/><text x="1.9992%" y="1566.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:1360) (14 samples, 0.22%)</title><rect x="1.7492%" y="1572" width="0.2167%" height="15" fill="rgb(250,191,14)" fg:x="113" fg:w="14"/><text x="1.9992%" y="1582.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:1331) (13 samples, 0.20%)</title><rect x="1.7647%" y="1588" width="0.2012%" height="15" fill="rgb(239,60,40)" fg:x="114" fg:w="13"/><text x="2.0147%" y="1598.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:935) (11 samples, 0.17%)</title><rect x="1.7957%" y="1604" width="0.1703%" height="15" fill="rgb(206,27,48)" fg:x="116" fg:w="11"/><text x="2.0457%" y="1614.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:995) (11 samples, 0.17%)</title><rect x="1.7957%" y="1620" width="0.1703%" height="15" fill="rgb(225,35,8)" fg:x="116" fg:w="11"/><text x="2.0457%" y="1630.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:488) (11 samples, 0.17%)</title><rect x="1.7957%" y="1636" width="0.1703%" height="15" fill="rgb(250,213,24)" fg:x="116" fg:w="11"/><text x="2.0457%" y="1646.50"></text></g><g><title>&lt;module&gt; (importlib/metadata/__init__.py:8) (9 samples, 0.14%)</title><rect x="1.9814%" y="1524" width="0.1393%" height="15" fill="rgb(247,123,22)" fg:x="128" fg:w="9"/><text x="2.2314%" y="1534.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:1360) (9 samples, 0.14%)</title><rect x="1.9814%" y="1540" width="0.1393%" height="15" fill="rgb(231,138,38)" fg:x="128" fg:w="9"/><text x="2.2314%" y="1550.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:1331) (9 samples, 0.14%)</title><rect x="1.9814%" y="1556" width="0.1393%" height="15" fill="rgb(231,145,46)" fg:x="128" fg:w="9"/><text x="2.2314%" y="1566.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:935) (9 samples, 0.14%)</title><rect x="1.9814%" y="1572" width="0.1393%" height="15" fill="rgb(251,118,11)" fg:x="128" fg:w="9"/><text x="2.2314%" y="1582.50"></text></g><g><title>&lt;module&gt; (torch/utils/_pytree.py:21) (26 samples, 0.40%)</title><rect x="1.7492%" y="1428" width="0.4025%" height="15" fill="rgb(217,147,25)" fg:x="113" fg:w="26"/><text x="1.9992%" y="1438.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:1360) (26 samples, 0.40%)</title><rect x="1.7492%" y="1444" width="0.4025%" height="15" fill="rgb(247,81,37)" fg:x="113" fg:w="26"/><text x="1.9992%" y="1454.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:1331) (26 samples, 0.40%)</title><rect x="1.7492%" y="1460" width="0.4025%" height="15" fill="rgb(209,12,38)" fg:x="113" fg:w="26"/><text x="1.9992%" y="1470.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:935) (26 samples, 0.40%)</title><rect x="1.7492%" y="1476" width="0.4025%" height="15" fill="rgb(227,1,9)" fg:x="113" fg:w="26"/><text x="1.9992%" y="1486.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:995) (26 samples, 0.40%)</title><rect x="1.7492%" y="1492" width="0.4025%" height="15" fill="rgb(248,47,43)" fg:x="113" fg:w="26"/><text x="1.9992%" y="1502.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:488) (26 samples, 0.40%)</title><rect x="1.7492%" y="1508" width="0.4025%" height="15" fill="rgb(221,10,30)" fg:x="113" fg:w="26"/><text x="1.9992%" y="1518.50"></text></g><g><title>&lt;module&gt; (torch/autograd/__init__.py:16) (31 samples, 0.48%)</title><rect x="1.7028%" y="1204" width="0.4799%" height="15" fill="rgb(210,229,1)" fg:x="110" fg:w="31"/><text x="1.9528%" y="1214.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;:1415) (31 samples, 0.48%)</title><rect x="1.7028%" y="1220" width="0.4799%" height="15" fill="rgb(222,148,37)" fg:x="110" fg:w="31"/><text x="1.9528%" y="1230.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:488) (31 samples, 0.48%)</title><rect x="1.7028%" y="1236" width="0.4799%" height="15" fill="rgb(234,67,33)" fg:x="110" fg:w="31"/><text x="1.9528%" y="1246.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:1360) (31 samples, 0.48%)</title><rect x="1.7028%" y="1252" width="0.4799%" height="15" fill="rgb(247,98,35)" fg:x="110" fg:w="31"/><text x="1.9528%" y="1262.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:1331) (31 samples, 0.48%)</title><rect x="1.7028%" y="1268" width="0.4799%" height="15" fill="rgb(247,138,52)" fg:x="110" fg:w="31"/><text x="1.9528%" y="1278.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:935) (31 samples, 0.48%)</title><rect x="1.7028%" y="1284" width="0.4799%" height="15" fill="rgb(213,79,30)" fg:x="110" fg:w="31"/><text x="1.9528%" y="1294.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:995) (31 samples, 0.48%)</title><rect x="1.7028%" y="1300" width="0.4799%" height="15" fill="rgb(246,177,23)" fg:x="110" fg:w="31"/><text x="1.9528%" y="1310.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:488) (31 samples, 0.48%)</title><rect x="1.7028%" y="1316" width="0.4799%" height="15" fill="rgb(230,62,27)" fg:x="110" fg:w="31"/><text x="1.9528%" y="1326.50"></text></g><g><title>&lt;module&gt; (torch/_vmap_internals.py:8) (31 samples, 0.48%)</title><rect x="1.7028%" y="1332" width="0.4799%" height="15" fill="rgb(216,154,8)" fg:x="110" fg:w="31"/><text x="1.9528%" y="1342.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:1360) (31 samples, 0.48%)</title><rect x="1.7028%" y="1348" width="0.4799%" height="15" fill="rgb(244,35,45)" fg:x="110" fg:w="31"/><text x="1.9528%" y="1358.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:1331) (31 samples, 0.48%)</title><rect x="1.7028%" y="1364" width="0.4799%" height="15" fill="rgb(251,115,12)" fg:x="110" fg:w="31"/><text x="1.9528%" y="1374.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:935) (31 samples, 0.48%)</title><rect x="1.7028%" y="1380" width="0.4799%" height="15" fill="rgb(240,54,50)" fg:x="110" fg:w="31"/><text x="1.9528%" y="1390.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:995) (31 samples, 0.48%)</title><rect x="1.7028%" y="1396" width="0.4799%" height="15" fill="rgb(233,84,52)" fg:x="110" fg:w="31"/><text x="1.9528%" y="1406.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:488) (31 samples, 0.48%)</title><rect x="1.7028%" y="1412" width="0.4799%" height="15" fill="rgb(207,117,47)" fg:x="110" fg:w="31"/><text x="1.9528%" y="1422.50"></text></g><g><title>&lt;module&gt; (torch/_jit_internal.py:42) (39 samples, 0.60%)</title><rect x="1.6563%" y="868" width="0.6037%" height="15" fill="rgb(249,43,39)" fg:x="107" fg:w="39"/><text x="1.9063%" y="878.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:1360) (38 samples, 0.59%)</title><rect x="1.6718%" y="884" width="0.5882%" height="15" fill="rgb(209,38,44)" fg:x="108" fg:w="38"/><text x="1.9218%" y="894.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:1331) (38 samples, 0.59%)</title><rect x="1.6718%" y="900" width="0.5882%" height="15" fill="rgb(236,212,23)" fg:x="108" fg:w="38"/><text x="1.9218%" y="910.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:935) (38 samples, 0.59%)</title><rect x="1.6718%" y="916" width="0.5882%" height="15" fill="rgb(242,79,21)" fg:x="108" fg:w="38"/><text x="1.9218%" y="926.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:995) (37 samples, 0.57%)</title><rect x="1.6873%" y="932" width="0.5728%" height="15" fill="rgb(211,96,35)" fg:x="109" fg:w="37"/><text x="1.9373%" y="942.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:488) (37 samples, 0.57%)</title><rect x="1.6873%" y="948" width="0.5728%" height="15" fill="rgb(253,215,40)" fg:x="109" fg:w="37"/><text x="1.9373%" y="958.50"></text></g><g><title>&lt;module&gt; (torch/distributed/rpc/__init__.py:77) (37 samples, 0.57%)</title><rect x="1.6873%" y="964" width="0.5728%" height="15" fill="rgb(211,81,21)" fg:x="109" fg:w="37"/><text x="1.9373%" y="974.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:1360) (37 samples, 0.57%)</title><rect x="1.6873%" y="980" width="0.5728%" height="15" fill="rgb(208,190,38)" fg:x="109" fg:w="37"/><text x="1.9373%" y="990.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:1331) (37 samples, 0.57%)</title><rect x="1.6873%" y="996" width="0.5728%" height="15" fill="rgb(235,213,38)" fg:x="109" fg:w="37"/><text x="1.9373%" y="1006.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:935) (37 samples, 0.57%)</title><rect x="1.6873%" y="1012" width="0.5728%" height="15" fill="rgb(237,122,38)" fg:x="109" fg:w="37"/><text x="1.9373%" y="1022.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:995) (37 samples, 0.57%)</title><rect x="1.6873%" y="1028" width="0.5728%" height="15" fill="rgb(244,218,35)" fg:x="109" fg:w="37"/><text x="1.9373%" y="1038.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:488) (37 samples, 0.57%)</title><rect x="1.6873%" y="1044" width="0.5728%" height="15" fill="rgb(240,68,47)" fg:x="109" fg:w="37"/><text x="1.9373%" y="1054.50"></text></g><g><title>&lt;module&gt; (torch/distributed/rpc/server_process_global_profiler.py:7) (36 samples, 0.56%)</title><rect x="1.7028%" y="1060" width="0.5573%" height="15" fill="rgb(210,16,53)" fg:x="110" fg:w="36"/><text x="1.9528%" y="1070.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:1360) (36 samples, 0.56%)</title><rect x="1.7028%" y="1076" width="0.5573%" height="15" fill="rgb(235,124,12)" fg:x="110" fg:w="36"/><text x="1.9528%" y="1086.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:1310) (36 samples, 0.56%)</title><rect x="1.7028%" y="1092" width="0.5573%" height="15" fill="rgb(224,169,11)" fg:x="110" fg:w="36"/><text x="1.9528%" y="1102.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:488) (36 samples, 0.56%)</title><rect x="1.7028%" y="1108" width="0.5573%" height="15" fill="rgb(250,166,2)" fg:x="110" fg:w="36"/><text x="1.9528%" y="1118.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:1360) (36 samples, 0.56%)</title><rect x="1.7028%" y="1124" width="0.5573%" height="15" fill="rgb(242,216,29)" fg:x="110" fg:w="36"/><text x="1.9528%" y="1134.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:1331) (36 samples, 0.56%)</title><rect x="1.7028%" y="1140" width="0.5573%" height="15" fill="rgb(230,116,27)" fg:x="110" fg:w="36"/><text x="1.9528%" y="1150.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:935) (36 samples, 0.56%)</title><rect x="1.7028%" y="1156" width="0.5573%" height="15" fill="rgb(228,99,48)" fg:x="110" fg:w="36"/><text x="1.9528%" y="1166.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:995) (36 samples, 0.56%)</title><rect x="1.7028%" y="1172" width="0.5573%" height="15" fill="rgb(253,11,6)" fg:x="110" fg:w="36"/><text x="1.9528%" y="1182.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:488) (36 samples, 0.56%)</title><rect x="1.7028%" y="1188" width="0.5573%" height="15" fill="rgb(247,143,39)" fg:x="110" fg:w="36"/><text x="1.9528%" y="1198.50"></text></g><g><title>&lt;module&gt; (torch/nn/functional.py:11) (43 samples, 0.67%)</title><rect x="1.6563%" y="772" width="0.6656%" height="15" fill="rgb(236,97,10)" fg:x="107" fg:w="43"/><text x="1.9063%" y="782.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:1360) (43 samples, 0.67%)</title><rect x="1.6563%" y="788" width="0.6656%" height="15" fill="rgb(233,208,19)" fg:x="107" fg:w="43"/><text x="1.9063%" y="798.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:1331) (43 samples, 0.67%)</title><rect x="1.6563%" y="804" width="0.6656%" height="15" fill="rgb(216,164,2)" fg:x="107" fg:w="43"/><text x="1.9063%" y="814.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:935) (43 samples, 0.67%)</title><rect x="1.6563%" y="820" width="0.6656%" height="15" fill="rgb(220,129,5)" fg:x="107" fg:w="43"/><text x="1.9063%" y="830.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:995) (43 samples, 0.67%)</title><rect x="1.6563%" y="836" width="0.6656%" height="15" fill="rgb(242,17,10)" fg:x="107" fg:w="43"/><text x="1.9063%" y="846.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:488) (43 samples, 0.67%)</title><rect x="1.6563%" y="852" width="0.6656%" height="15" fill="rgb(242,107,0)" fg:x="107" fg:w="43"/><text x="1.9063%" y="862.50"></text></g><g><title>&lt;module&gt; (torch/nn/modules/__init__.py:2) (44 samples, 0.68%)</title><rect x="1.6563%" y="548" width="0.6811%" height="15" fill="rgb(251,28,31)" fg:x="107" fg:w="44"/><text x="1.9063%" y="558.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:1360) (44 samples, 0.68%)</title><rect x="1.6563%" y="564" width="0.6811%" height="15" fill="rgb(233,223,10)" fg:x="107" fg:w="44"/><text x="1.9063%" y="574.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:1331) (44 samples, 0.68%)</title><rect x="1.6563%" y="580" width="0.6811%" height="15" fill="rgb(215,21,27)" fg:x="107" fg:w="44"/><text x="1.9063%" y="590.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:935) (44 samples, 0.68%)</title><rect x="1.6563%" y="596" width="0.6811%" height="15" fill="rgb(232,23,21)" fg:x="107" fg:w="44"/><text x="1.9063%" y="606.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:995) (44 samples, 0.68%)</title><rect x="1.6563%" y="612" width="0.6811%" height="15" fill="rgb(244,5,23)" fg:x="107" fg:w="44"/><text x="1.9063%" y="622.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:488) (44 samples, 0.68%)</title><rect x="1.6563%" y="628" width="0.6811%" height="15" fill="rgb(226,81,46)" fg:x="107" fg:w="44"/><text x="1.9063%" y="638.50"></text></g><g><title>&lt;module&gt; (torch/nn/modules/linear.py:7) (44 samples, 0.68%)</title><rect x="1.6563%" y="644" width="0.6811%" height="15" fill="rgb(247,70,30)" fg:x="107" fg:w="44"/><text x="1.9063%" y="654.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;:1415) (44 samples, 0.68%)</title><rect x="1.6563%" y="660" width="0.6811%" height="15" fill="rgb(212,68,19)" fg:x="107" fg:w="44"/><text x="1.9063%" y="670.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:488) (44 samples, 0.68%)</title><rect x="1.6563%" y="676" width="0.6811%" height="15" fill="rgb(240,187,13)" fg:x="107" fg:w="44"/><text x="1.9063%" y="686.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:1360) (44 samples, 0.68%)</title><rect x="1.6563%" y="692" width="0.6811%" height="15" fill="rgb(223,113,26)" fg:x="107" fg:w="44"/><text x="1.9063%" y="702.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:1331) (44 samples, 0.68%)</title><rect x="1.6563%" y="708" width="0.6811%" height="15" fill="rgb(206,192,2)" fg:x="107" fg:w="44"/><text x="1.9063%" y="718.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:935) (44 samples, 0.68%)</title><rect x="1.6563%" y="724" width="0.6811%" height="15" fill="rgb(241,108,4)" fg:x="107" fg:w="44"/><text x="1.9063%" y="734.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:995) (44 samples, 0.68%)</title><rect x="1.6563%" y="740" width="0.6811%" height="15" fill="rgb(247,173,49)" fg:x="107" fg:w="44"/><text x="1.9063%" y="750.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:488) (44 samples, 0.68%)</title><rect x="1.6563%" y="756" width="0.6811%" height="15" fill="rgb(224,114,35)" fg:x="107" fg:w="44"/><text x="1.9063%" y="766.50"></text></g><g><title>&lt;module&gt; (torch/nn/__init__.py:8) (57 samples, 0.88%)</title><rect x="1.4861%" y="452" width="0.8824%" height="15" fill="rgb(245,159,27)" fg:x="96" fg:w="57"/><text x="1.7361%" y="462.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:1360) (57 samples, 0.88%)</title><rect x="1.4861%" y="468" width="0.8824%" height="15" fill="rgb(245,172,44)" fg:x="96" fg:w="57"/><text x="1.7361%" y="478.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:1331) (57 samples, 0.88%)</title><rect x="1.4861%" y="484" width="0.8824%" height="15" fill="rgb(236,23,11)" fg:x="96" fg:w="57"/><text x="1.7361%" y="494.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:935) (57 samples, 0.88%)</title><rect x="1.4861%" y="500" width="0.8824%" height="15" fill="rgb(205,117,38)" fg:x="96" fg:w="57"/><text x="1.7361%" y="510.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:995) (57 samples, 0.88%)</title><rect x="1.4861%" y="516" width="0.8824%" height="15" fill="rgb(237,72,25)" fg:x="96" fg:w="57"/><text x="1.7361%" y="526.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:488) (57 samples, 0.88%)</title><rect x="1.4861%" y="532" width="0.8824%" height="15" fill="rgb(244,70,9)" fg:x="96" fg:w="57"/><text x="1.7361%" y="542.50"></text></g><g><title>&lt;module&gt; (torch/__init__.py:2126) (63 samples, 0.98%)</title><rect x="1.4087%" y="180" width="0.9752%" height="15" fill="rgb(217,125,39)" fg:x="91" fg:w="63"/><text x="1.6587%" y="190.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;:1415) (63 samples, 0.98%)</title><rect x="1.4087%" y="196" width="0.9752%" height="15" fill="rgb(235,36,10)" fg:x="91" fg:w="63"/><text x="1.6587%" y="206.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:488) (63 samples, 0.98%)</title><rect x="1.4087%" y="212" width="0.9752%" height="15" fill="rgb(251,123,47)" fg:x="91" fg:w="63"/><text x="1.6587%" y="222.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:1360) (63 samples, 0.98%)</title><rect x="1.4087%" y="228" width="0.9752%" height="15" fill="rgb(221,13,13)" fg:x="91" fg:w="63"/><text x="1.6587%" y="238.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:1331) (63 samples, 0.98%)</title><rect x="1.4087%" y="244" width="0.9752%" height="15" fill="rgb(238,131,9)" fg:x="91" fg:w="63"/><text x="1.6587%" y="254.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:935) (63 samples, 0.98%)</title><rect x="1.4087%" y="260" width="0.9752%" height="15" fill="rgb(211,50,8)" fg:x="91" fg:w="63"/><text x="1.6587%" y="270.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:995) (63 samples, 0.98%)</title><rect x="1.4087%" y="276" width="0.9752%" height="15" fill="rgb(245,182,24)" fg:x="91" fg:w="63"/><text x="1.6587%" y="286.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:488) (63 samples, 0.98%)</title><rect x="1.4087%" y="292" width="0.9752%" height="15" fill="rgb(242,14,37)" fg:x="91" fg:w="63"/><text x="1.6587%" y="302.50"></text></g><g><title>&lt;module&gt; (torch/functional.py:8) (58 samples, 0.90%)</title><rect x="1.4861%" y="308" width="0.8978%" height="15" fill="rgb(246,228,12)" fg:x="96" fg:w="58"/><text x="1.7361%" y="318.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:1360) (58 samples, 0.90%)</title><rect x="1.4861%" y="324" width="0.8978%" height="15" fill="rgb(213,55,15)" fg:x="96" fg:w="58"/><text x="1.7361%" y="334.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:1310) (58 samples, 0.90%)</title><rect x="1.4861%" y="340" width="0.8978%" height="15" fill="rgb(209,9,3)" fg:x="96" fg:w="58"/><text x="1.7361%" y="350.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:488) (58 samples, 0.90%)</title><rect x="1.4861%" y="356" width="0.8978%" height="15" fill="rgb(230,59,30)" fg:x="96" fg:w="58"/><text x="1.7361%" y="366.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:1360) (58 samples, 0.90%)</title><rect x="1.4861%" y="372" width="0.8978%" height="15" fill="rgb(209,121,21)" fg:x="96" fg:w="58"/><text x="1.7361%" y="382.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:1331) (58 samples, 0.90%)</title><rect x="1.4861%" y="388" width="0.8978%" height="15" fill="rgb(220,109,13)" fg:x="96" fg:w="58"/><text x="1.7361%" y="398.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:935) (58 samples, 0.90%)</title><rect x="1.4861%" y="404" width="0.8978%" height="15" fill="rgb(232,18,1)" fg:x="96" fg:w="58"/><text x="1.7361%" y="414.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:995) (58 samples, 0.90%)</title><rect x="1.4861%" y="420" width="0.8978%" height="15" fill="rgb(215,41,42)" fg:x="96" fg:w="58"/><text x="1.7361%" y="430.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:488) (58 samples, 0.90%)</title><rect x="1.4861%" y="436" width="0.8978%" height="15" fill="rgb(224,123,36)" fg:x="96" fg:w="58"/><text x="1.7361%" y="446.50"></text></g><g><title>&lt;module&gt; (torch/nested/__init__.py:21) (7 samples, 0.11%)</title><rect x="2.5232%" y="308" width="0.1084%" height="15" fill="rgb(240,125,3)" fg:x="163" fg:w="7"/><text x="2.7732%" y="318.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:1360) (7 samples, 0.11%)</title><rect x="2.5232%" y="324" width="0.1084%" height="15" fill="rgb(205,98,50)" fg:x="163" fg:w="7"/><text x="2.7732%" y="334.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:1331) (7 samples, 0.11%)</title><rect x="2.5232%" y="340" width="0.1084%" height="15" fill="rgb(205,185,37)" fg:x="163" fg:w="7"/><text x="2.7732%" y="350.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:935) (7 samples, 0.11%)</title><rect x="2.5232%" y="356" width="0.1084%" height="15" fill="rgb(238,207,15)" fg:x="163" fg:w="7"/><text x="2.7732%" y="366.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:995) (7 samples, 0.11%)</title><rect x="2.5232%" y="372" width="0.1084%" height="15" fill="rgb(213,199,42)" fg:x="163" fg:w="7"/><text x="2.7732%" y="382.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:488) (7 samples, 0.11%)</title><rect x="2.5232%" y="388" width="0.1084%" height="15" fill="rgb(235,201,11)" fg:x="163" fg:w="7"/><text x="2.7732%" y="398.50"></text></g><g><title>&lt;module&gt; (torch/nested/_internal/nested_tensor.py:7) (7 samples, 0.11%)</title><rect x="2.5232%" y="404" width="0.1084%" height="15" fill="rgb(207,46,11)" fg:x="163" fg:w="7"/><text x="2.7732%" y="414.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:1360) (7 samples, 0.11%)</title><rect x="2.5232%" y="420" width="0.1084%" height="15" fill="rgb(241,35,35)" fg:x="163" fg:w="7"/><text x="2.7732%" y="430.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:1331) (7 samples, 0.11%)</title><rect x="2.5232%" y="436" width="0.1084%" height="15" fill="rgb(243,32,47)" fg:x="163" fg:w="7"/><text x="2.7732%" y="446.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:935) (7 samples, 0.11%)</title><rect x="2.5232%" y="452" width="0.1084%" height="15" fill="rgb(247,202,23)" fg:x="163" fg:w="7"/><text x="2.7732%" y="462.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:995) (7 samples, 0.11%)</title><rect x="2.5232%" y="468" width="0.1084%" height="15" fill="rgb(219,102,11)" fg:x="163" fg:w="7"/><text x="2.7732%" y="478.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:488) (7 samples, 0.11%)</title><rect x="2.5232%" y="484" width="0.1084%" height="15" fill="rgb(243,110,44)" fg:x="163" fg:w="7"/><text x="2.7732%" y="494.50"></text></g><g><title>&lt;module&gt; (torch/nested/_internal/nested_int.py:4) (7 samples, 0.11%)</title><rect x="2.5232%" y="500" width="0.1084%" height="15" fill="rgb(222,74,54)" fg:x="163" fg:w="7"/><text x="2.7732%" y="510.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:1360) (7 samples, 0.11%)</title><rect x="2.5232%" y="516" width="0.1084%" height="15" fill="rgb(216,99,12)" fg:x="163" fg:w="7"/><text x="2.7732%" y="526.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:1310) (7 samples, 0.11%)</title><rect x="2.5232%" y="532" width="0.1084%" height="15" fill="rgb(226,22,26)" fg:x="163" fg:w="7"/><text x="2.7732%" y="542.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:488) (7 samples, 0.11%)</title><rect x="2.5232%" y="548" width="0.1084%" height="15" fill="rgb(217,163,10)" fg:x="163" fg:w="7"/><text x="2.7732%" y="558.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:1360) (7 samples, 0.11%)</title><rect x="2.5232%" y="564" width="0.1084%" height="15" fill="rgb(213,25,53)" fg:x="163" fg:w="7"/><text x="2.7732%" y="574.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:1310) (7 samples, 0.11%)</title><rect x="2.5232%" y="580" width="0.1084%" height="15" fill="rgb(252,105,26)" fg:x="163" fg:w="7"/><text x="2.7732%" y="590.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:488) (7 samples, 0.11%)</title><rect x="2.5232%" y="596" width="0.1084%" height="15" fill="rgb(220,39,43)" fg:x="163" fg:w="7"/><text x="2.7732%" y="606.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:1360) (7 samples, 0.11%)</title><rect x="2.5232%" y="612" width="0.1084%" height="15" fill="rgb(229,68,48)" fg:x="163" fg:w="7"/><text x="2.7732%" y="622.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:1331) (7 samples, 0.11%)</title><rect x="2.5232%" y="628" width="0.1084%" height="15" fill="rgb(252,8,32)" fg:x="163" fg:w="7"/><text x="2.7732%" y="638.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:935) (7 samples, 0.11%)</title><rect x="2.5232%" y="644" width="0.1084%" height="15" fill="rgb(223,20,43)" fg:x="163" fg:w="7"/><text x="2.7732%" y="654.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:995) (7 samples, 0.11%)</title><rect x="2.5232%" y="660" width="0.1084%" height="15" fill="rgb(229,81,49)" fg:x="163" fg:w="7"/><text x="2.7732%" y="670.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:488) (7 samples, 0.11%)</title><rect x="2.5232%" y="676" width="0.1084%" height="15" fill="rgb(236,28,36)" fg:x="163" fg:w="7"/><text x="2.7732%" y="686.50"></text></g><g><title>&lt;module&gt; (torch/profiler/__init__.py:19) (10 samples, 0.15%)</title><rect x="2.6780%" y="308" width="0.1548%" height="15" fill="rgb(249,185,26)" fg:x="173" fg:w="10"/><text x="2.9280%" y="318.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:1360) (10 samples, 0.15%)</title><rect x="2.6780%" y="324" width="0.1548%" height="15" fill="rgb(249,174,33)" fg:x="173" fg:w="10"/><text x="2.9280%" y="334.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:1331) (10 samples, 0.15%)</title><rect x="2.6780%" y="340" width="0.1548%" height="15" fill="rgb(233,201,37)" fg:x="173" fg:w="10"/><text x="2.9280%" y="350.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:935) (10 samples, 0.15%)</title><rect x="2.6780%" y="356" width="0.1548%" height="15" fill="rgb(221,78,26)" fg:x="173" fg:w="10"/><text x="2.9280%" y="366.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:995) (10 samples, 0.15%)</title><rect x="2.6780%" y="372" width="0.1548%" height="15" fill="rgb(250,127,30)" fg:x="173" fg:w="10"/><text x="2.9280%" y="382.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:488) (10 samples, 0.15%)</title><rect x="2.6780%" y="388" width="0.1548%" height="15" fill="rgb(230,49,44)" fg:x="173" fg:w="10"/><text x="2.9280%" y="398.50"></text></g><g><title>&lt;module&gt; (torch/profiler/profiler.py:27) (10 samples, 0.15%)</title><rect x="2.6780%" y="404" width="0.1548%" height="15" fill="rgb(229,67,23)" fg:x="173" fg:w="10"/><text x="2.9280%" y="414.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:1360) (10 samples, 0.15%)</title><rect x="2.6780%" y="420" width="0.1548%" height="15" fill="rgb(249,83,47)" fg:x="173" fg:w="10"/><text x="2.9280%" y="430.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:1331) (10 samples, 0.15%)</title><rect x="2.6780%" y="436" width="0.1548%" height="15" fill="rgb(215,43,3)" fg:x="173" fg:w="10"/><text x="2.9280%" y="446.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:935) (10 samples, 0.15%)</title><rect x="2.6780%" y="452" width="0.1548%" height="15" fill="rgb(238,154,13)" fg:x="173" fg:w="10"/><text x="2.9280%" y="462.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:995) (10 samples, 0.15%)</title><rect x="2.6780%" y="468" width="0.1548%" height="15" fill="rgb(219,56,2)" fg:x="173" fg:w="10"/><text x="2.9280%" y="478.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:488) (10 samples, 0.15%)</title><rect x="2.6780%" y="484" width="0.1548%" height="15" fill="rgb(233,0,4)" fg:x="173" fg:w="10"/><text x="2.9280%" y="494.50"></text></g><g><title>&lt;module&gt; (torch/__init__.py:2169) (30 samples, 0.46%)</title><rect x="2.3839%" y="180" width="0.4644%" height="15" fill="rgb(235,30,7)" fg:x="154" fg:w="30"/><text x="2.6339%" y="190.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;:1415) (30 samples, 0.46%)</title><rect x="2.3839%" y="196" width="0.4644%" height="15" fill="rgb(250,79,13)" fg:x="154" fg:w="30"/><text x="2.6339%" y="206.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:488) (30 samples, 0.46%)</title><rect x="2.3839%" y="212" width="0.4644%" height="15" fill="rgb(211,146,34)" fg:x="154" fg:w="30"/><text x="2.6339%" y="222.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:1360) (29 samples, 0.45%)</title><rect x="2.3994%" y="228" width="0.4489%" height="15" fill="rgb(228,22,38)" fg:x="155" fg:w="29"/><text x="2.6494%" y="238.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:1331) (28 samples, 0.43%)</title><rect x="2.4149%" y="244" width="0.4334%" height="15" fill="rgb(235,168,5)" fg:x="156" fg:w="28"/><text x="2.6649%" y="254.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:935) (28 samples, 0.43%)</title><rect x="2.4149%" y="260" width="0.4334%" height="15" fill="rgb(221,155,16)" fg:x="156" fg:w="28"/><text x="2.6649%" y="270.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:995) (27 samples, 0.42%)</title><rect x="2.4303%" y="276" width="0.4180%" height="15" fill="rgb(215,215,53)" fg:x="157" fg:w="27"/><text x="2.6803%" y="286.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:488) (27 samples, 0.42%)</title><rect x="2.4303%" y="292" width="0.4180%" height="15" fill="rgb(223,4,10)" fg:x="157" fg:w="27"/><text x="2.6803%" y="302.50"></text></g><g><title>&lt;module&gt; (torch/ao/nn/quantized/functional.py:11) (19 samples, 0.29%)</title><rect x="2.9876%" y="1284" width="0.2941%" height="15" fill="rgb(234,103,6)" fg:x="193" fg:w="19"/><text x="3.2376%" y="1294.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:1360) (19 samples, 0.29%)</title><rect x="2.9876%" y="1300" width="0.2941%" height="15" fill="rgb(227,97,0)" fg:x="193" fg:w="19"/><text x="3.2376%" y="1310.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:1310) (19 samples, 0.29%)</title><rect x="2.9876%" y="1316" width="0.2941%" height="15" fill="rgb(234,150,53)" fg:x="193" fg:w="19"/><text x="3.2376%" y="1326.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:488) (19 samples, 0.29%)</title><rect x="2.9876%" y="1332" width="0.2941%" height="15" fill="rgb(228,201,54)" fg:x="193" fg:w="19"/><text x="3.2376%" y="1342.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:1360) (19 samples, 0.29%)</title><rect x="2.9876%" y="1348" width="0.2941%" height="15" fill="rgb(222,22,37)" fg:x="193" fg:w="19"/><text x="3.2376%" y="1358.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:1331) (19 samples, 0.29%)</title><rect x="2.9876%" y="1364" width="0.2941%" height="15" fill="rgb(237,53,32)" fg:x="193" fg:w="19"/><text x="3.2376%" y="1374.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:935) (19 samples, 0.29%)</title><rect x="2.9876%" y="1380" width="0.2941%" height="15" fill="rgb(233,25,53)" fg:x="193" fg:w="19"/><text x="3.2376%" y="1390.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:995) (19 samples, 0.29%)</title><rect x="2.9876%" y="1396" width="0.2941%" height="15" fill="rgb(210,40,34)" fg:x="193" fg:w="19"/><text x="3.2376%" y="1406.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:488) (19 samples, 0.29%)</title><rect x="2.9876%" y="1412" width="0.2941%" height="15" fill="rgb(241,220,44)" fg:x="193" fg:w="19"/><text x="3.2376%" y="1422.50"></text></g><g><title>&lt;module&gt; (torch/ao/nn/quantized/__init__.py:1) (21 samples, 0.33%)</title><rect x="2.9721%" y="1156" width="0.3251%" height="15" fill="rgb(235,28,35)" fg:x="192" fg:w="21"/><text x="3.2221%" y="1166.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;:1415) (21 samples, 0.33%)</title><rect x="2.9721%" y="1172" width="0.3251%" height="15" fill="rgb(210,56,17)" fg:x="192" fg:w="21"/><text x="3.2221%" y="1182.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:488) (21 samples, 0.33%)</title><rect x="2.9721%" y="1188" width="0.3251%" height="15" fill="rgb(224,130,29)" fg:x="192" fg:w="21"/><text x="3.2221%" y="1198.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:1360) (21 samples, 0.33%)</title><rect x="2.9721%" y="1204" width="0.3251%" height="15" fill="rgb(235,212,8)" fg:x="192" fg:w="21"/><text x="3.2221%" y="1214.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:1331) (20 samples, 0.31%)</title><rect x="2.9876%" y="1220" width="0.3096%" height="15" fill="rgb(223,33,50)" fg:x="193" fg:w="20"/><text x="3.2376%" y="1230.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:935) (20 samples, 0.31%)</title><rect x="2.9876%" y="1236" width="0.3096%" height="15" fill="rgb(219,149,13)" fg:x="193" fg:w="20"/><text x="3.2376%" y="1246.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:995) (20 samples, 0.31%)</title><rect x="2.9876%" y="1252" width="0.3096%" height="15" fill="rgb(250,156,29)" fg:x="193" fg:w="20"/><text x="3.2376%" y="1262.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:488) (20 samples, 0.31%)</title><rect x="2.9876%" y="1268" width="0.3096%" height="15" fill="rgb(216,193,19)" fg:x="193" fg:w="20"/><text x="3.2376%" y="1278.50"></text></g><g><title>&lt;module&gt; (torch/ao/nn/intrinsic/quantized/modules/__init__.py:1) (26 samples, 0.40%)</title><rect x="2.9102%" y="964" width="0.4025%" height="15" fill="rgb(216,135,14)" fg:x="188" fg:w="26"/><text x="3.1602%" y="974.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:1360) (26 samples, 0.40%)</title><rect x="2.9102%" y="980" width="0.4025%" height="15" fill="rgb(241,47,5)" fg:x="188" fg:w="26"/><text x="3.1602%" y="990.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:1331) (25 samples, 0.39%)</title><rect x="2.9257%" y="996" width="0.3870%" height="15" fill="rgb(233,42,35)" fg:x="189" fg:w="25"/><text x="3.1757%" y="1006.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:935) (25 samples, 0.39%)</title><rect x="2.9257%" y="1012" width="0.3870%" height="15" fill="rgb(231,13,6)" fg:x="189" fg:w="25"/><text x="3.1757%" y="1022.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:995) (24 samples, 0.37%)</title><rect x="2.9412%" y="1028" width="0.3715%" height="15" fill="rgb(207,181,40)" fg:x="190" fg:w="24"/><text x="3.1912%" y="1038.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:488) (24 samples, 0.37%)</title><rect x="2.9412%" y="1044" width="0.3715%" height="15" fill="rgb(254,173,49)" fg:x="190" fg:w="24"/><text x="3.1912%" y="1054.50"></text></g><g><title>&lt;module&gt; (torch/ao/nn/intrinsic/quantized/modules/bn_relu.py:6) (23 samples, 0.36%)</title><rect x="2.9567%" y="1060" width="0.3560%" height="15" fill="rgb(221,1,38)" fg:x="191" fg:w="23"/><text x="3.2067%" y="1070.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:1360) (23 samples, 0.36%)</title><rect x="2.9567%" y="1076" width="0.3560%" height="15" fill="rgb(206,124,46)" fg:x="191" fg:w="23"/><text x="3.2067%" y="1086.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:1331) (23 samples, 0.36%)</title><rect x="2.9567%" y="1092" width="0.3560%" height="15" fill="rgb(249,21,11)" fg:x="191" fg:w="23"/><text x="3.2067%" y="1102.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:935) (22 samples, 0.34%)</title><rect x="2.9721%" y="1108" width="0.3406%" height="15" fill="rgb(222,201,40)" fg:x="192" fg:w="22"/><text x="3.2221%" y="1118.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:995) (22 samples, 0.34%)</title><rect x="2.9721%" y="1124" width="0.3406%" height="15" fill="rgb(235,61,29)" fg:x="192" fg:w="22"/><text x="3.2221%" y="1134.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:488) (22 samples, 0.34%)</title><rect x="2.9721%" y="1140" width="0.3406%" height="15" fill="rgb(219,207,3)" fg:x="192" fg:w="22"/><text x="3.2221%" y="1150.50"></text></g><g><title>&lt;module&gt; (torch/__init__.py:2208) (42 samples, 0.65%)</title><rect x="2.8638%" y="180" width="0.6502%" height="15" fill="rgb(222,56,46)" fg:x="185" fg:w="42"/><text x="3.1138%" y="190.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:1360) (42 samples, 0.65%)</title><rect x="2.8638%" y="196" width="0.6502%" height="15" fill="rgb(239,76,54)" fg:x="185" fg:w="42"/><text x="3.1138%" y="206.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:1331) (42 samples, 0.65%)</title><rect x="2.8638%" y="212" width="0.6502%" height="15" fill="rgb(231,124,27)" fg:x="185" fg:w="42"/><text x="3.1138%" y="222.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:935) (42 samples, 0.65%)</title><rect x="2.8638%" y="228" width="0.6502%" height="15" fill="rgb(249,195,6)" fg:x="185" fg:w="42"/><text x="3.1138%" y="238.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:995) (42 samples, 0.65%)</title><rect x="2.8638%" y="244" width="0.6502%" height="15" fill="rgb(237,174,47)" fg:x="185" fg:w="42"/><text x="3.1138%" y="254.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:488) (42 samples, 0.65%)</title><rect x="2.8638%" y="260" width="0.6502%" height="15" fill="rgb(206,201,31)" fg:x="185" fg:w="42"/><text x="3.1138%" y="270.50"></text></g><g><title>&lt;module&gt; (torch/nn/intrinsic/__init__.py:19) (42 samples, 0.65%)</title><rect x="2.8638%" y="276" width="0.6502%" height="15" fill="rgb(231,57,52)" fg:x="185" fg:w="42"/><text x="3.1138%" y="286.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;:1415) (42 samples, 0.65%)</title><rect x="2.8638%" y="292" width="0.6502%" height="15" fill="rgb(248,177,22)" fg:x="185" fg:w="42"/><text x="3.1138%" y="302.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:488) (42 samples, 0.65%)</title><rect x="2.8638%" y="308" width="0.6502%" height="15" fill="rgb(215,211,37)" fg:x="185" fg:w="42"/><text x="3.1138%" y="318.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:1360) (42 samples, 0.65%)</title><rect x="2.8638%" y="324" width="0.6502%" height="15" fill="rgb(241,128,51)" fg:x="185" fg:w="42"/><text x="3.1138%" y="334.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:1331) (42 samples, 0.65%)</title><rect x="2.8638%" y="340" width="0.6502%" height="15" fill="rgb(227,165,31)" fg:x="185" fg:w="42"/><text x="3.1138%" y="350.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:935) (42 samples, 0.65%)</title><rect x="2.8638%" y="356" width="0.6502%" height="15" fill="rgb(228,167,24)" fg:x="185" fg:w="42"/><text x="3.1138%" y="366.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:995) (42 samples, 0.65%)</title><rect x="2.8638%" y="372" width="0.6502%" height="15" fill="rgb(228,143,12)" fg:x="185" fg:w="42"/><text x="3.1138%" y="382.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:488) (42 samples, 0.65%)</title><rect x="2.8638%" y="388" width="0.6502%" height="15" fill="rgb(249,149,8)" fg:x="185" fg:w="42"/><text x="3.1138%" y="398.50"></text></g><g><title>&lt;module&gt; (torch/nn/intrinsic/quantized/__init__.py:3) (42 samples, 0.65%)</title><rect x="2.8638%" y="404" width="0.6502%" height="15" fill="rgb(243,35,44)" fg:x="185" fg:w="42"/><text x="3.1138%" y="414.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;:1415) (42 samples, 0.65%)</title><rect x="2.8638%" y="420" width="0.6502%" height="15" fill="rgb(246,89,9)" fg:x="185" fg:w="42"/><text x="3.1138%" y="430.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:488) (42 samples, 0.65%)</title><rect x="2.8638%" y="436" width="0.6502%" height="15" fill="rgb(233,213,13)" fg:x="185" fg:w="42"/><text x="3.1138%" y="446.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:1360) (42 samples, 0.65%)</title><rect x="2.8638%" y="452" width="0.6502%" height="15" fill="rgb(233,141,41)" fg:x="185" fg:w="42"/><text x="3.1138%" y="462.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:1331) (42 samples, 0.65%)</title><rect x="2.8638%" y="468" width="0.6502%" height="15" fill="rgb(239,167,4)" fg:x="185" fg:w="42"/><text x="3.1138%" y="478.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:935) (42 samples, 0.65%)</title><rect x="2.8638%" y="484" width="0.6502%" height="15" fill="rgb(209,217,16)" fg:x="185" fg:w="42"/><text x="3.1138%" y="494.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:995) (42 samples, 0.65%)</title><rect x="2.8638%" y="500" width="0.6502%" height="15" fill="rgb(219,88,35)" fg:x="185" fg:w="42"/><text x="3.1138%" y="510.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:488) (42 samples, 0.65%)</title><rect x="2.8638%" y="516" width="0.6502%" height="15" fill="rgb(220,193,23)" fg:x="185" fg:w="42"/><text x="3.1138%" y="526.50"></text></g><g><title>&lt;module&gt; (torch/nn/intrinsic/quantized/dynamic/__init__.py:1) (42 samples, 0.65%)</title><rect x="2.8638%" y="532" width="0.6502%" height="15" fill="rgb(230,90,52)" fg:x="185" fg:w="42"/><text x="3.1138%" y="542.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:1360) (42 samples, 0.65%)</title><rect x="2.8638%" y="548" width="0.6502%" height="15" fill="rgb(252,106,19)" fg:x="185" fg:w="42"/><text x="3.1138%" y="558.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:1331) (42 samples, 0.65%)</title><rect x="2.8638%" y="564" width="0.6502%" height="15" fill="rgb(206,74,20)" fg:x="185" fg:w="42"/><text x="3.1138%" y="574.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:935) (42 samples, 0.65%)</title><rect x="2.8638%" y="580" width="0.6502%" height="15" fill="rgb(230,138,44)" fg:x="185" fg:w="42"/><text x="3.1138%" y="590.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:995) (42 samples, 0.65%)</title><rect x="2.8638%" y="596" width="0.6502%" height="15" fill="rgb(235,182,43)" fg:x="185" fg:w="42"/><text x="3.1138%" y="606.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:488) (42 samples, 0.65%)</title><rect x="2.8638%" y="612" width="0.6502%" height="15" fill="rgb(242,16,51)" fg:x="185" fg:w="42"/><text x="3.1138%" y="622.50"></text></g><g><title>&lt;module&gt; (torch/nn/intrinsic/quantized/dynamic/modules/__init__.py:1) (42 samples, 0.65%)</title><rect x="2.8638%" y="628" width="0.6502%" height="15" fill="rgb(248,9,4)" fg:x="185" fg:w="42"/><text x="3.1138%" y="638.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:1360) (42 samples, 0.65%)</title><rect x="2.8638%" y="644" width="0.6502%" height="15" fill="rgb(210,31,22)" fg:x="185" fg:w="42"/><text x="3.1138%" y="654.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:1331) (42 samples, 0.65%)</title><rect x="2.8638%" y="660" width="0.6502%" height="15" fill="rgb(239,54,39)" fg:x="185" fg:w="42"/><text x="3.1138%" y="670.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:935) (42 samples, 0.65%)</title><rect x="2.8638%" y="676" width="0.6502%" height="15" fill="rgb(230,99,41)" fg:x="185" fg:w="42"/><text x="3.1138%" y="686.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:995) (42 samples, 0.65%)</title><rect x="2.8638%" y="692" width="0.6502%" height="15" fill="rgb(253,106,12)" fg:x="185" fg:w="42"/><text x="3.1138%" y="702.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:488) (42 samples, 0.65%)</title><rect x="2.8638%" y="708" width="0.6502%" height="15" fill="rgb(213,46,41)" fg:x="185" fg:w="42"/><text x="3.1138%" y="718.50"></text></g><g><title>&lt;module&gt; (torch/nn/intrinsic/quantized/dynamic/modules/linear_relu.py:1) (42 samples, 0.65%)</title><rect x="2.8638%" y="724" width="0.6502%" height="15" fill="rgb(215,133,35)" fg:x="185" fg:w="42"/><text x="3.1138%" y="734.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:1360) (42 samples, 0.65%)</title><rect x="2.8638%" y="740" width="0.6502%" height="15" fill="rgb(213,28,5)" fg:x="185" fg:w="42"/><text x="3.1138%" y="750.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:1310) (42 samples, 0.65%)</title><rect x="2.8638%" y="756" width="0.6502%" height="15" fill="rgb(215,77,49)" fg:x="185" fg:w="42"/><text x="3.1138%" y="766.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:488) (42 samples, 0.65%)</title><rect x="2.8638%" y="772" width="0.6502%" height="15" fill="rgb(248,100,22)" fg:x="185" fg:w="42"/><text x="3.1138%" y="782.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:1360) (42 samples, 0.65%)</title><rect x="2.8638%" y="788" width="0.6502%" height="15" fill="rgb(208,67,9)" fg:x="185" fg:w="42"/><text x="3.1138%" y="798.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:1331) (42 samples, 0.65%)</title><rect x="2.8638%" y="804" width="0.6502%" height="15" fill="rgb(219,133,21)" fg:x="185" fg:w="42"/><text x="3.1138%" y="814.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:935) (42 samples, 0.65%)</title><rect x="2.8638%" y="820" width="0.6502%" height="15" fill="rgb(246,46,29)" fg:x="185" fg:w="42"/><text x="3.1138%" y="830.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:995) (42 samples, 0.65%)</title><rect x="2.8638%" y="836" width="0.6502%" height="15" fill="rgb(246,185,52)" fg:x="185" fg:w="42"/><text x="3.1138%" y="846.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:488) (42 samples, 0.65%)</title><rect x="2.8638%" y="852" width="0.6502%" height="15" fill="rgb(252,136,11)" fg:x="185" fg:w="42"/><text x="3.1138%" y="862.50"></text></g><g><title>&lt;module&gt; (torch/ao/nn/intrinsic/quantized/__init__.py:1) (42 samples, 0.65%)</title><rect x="2.8638%" y="868" width="0.6502%" height="15" fill="rgb(219,138,53)" fg:x="185" fg:w="42"/><text x="3.1138%" y="878.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:1360) (42 samples, 0.65%)</title><rect x="2.8638%" y="884" width="0.6502%" height="15" fill="rgb(211,51,23)" fg:x="185" fg:w="42"/><text x="3.1138%" y="894.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:1331) (39 samples, 0.60%)</title><rect x="2.9102%" y="900" width="0.6037%" height="15" fill="rgb(247,221,28)" fg:x="188" fg:w="39"/><text x="3.1602%" y="910.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:935) (39 samples, 0.60%)</title><rect x="2.9102%" y="916" width="0.6037%" height="15" fill="rgb(251,222,45)" fg:x="188" fg:w="39"/><text x="3.1602%" y="926.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:995) (39 samples, 0.60%)</title><rect x="2.9102%" y="932" width="0.6037%" height="15" fill="rgb(217,162,53)" fg:x="188" fg:w="39"/><text x="3.1602%" y="942.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:488) (39 samples, 0.60%)</title><rect x="2.9102%" y="948" width="0.6037%" height="15" fill="rgb(229,93,14)" fg:x="188" fg:w="39"/><text x="3.1602%" y="958.50"></text></g><g><title>&lt;module&gt; (torch/ao/nn/intrinsic/quantized/modules/__init__.py:3) (8 samples, 0.12%)</title><rect x="3.3901%" y="964" width="0.1238%" height="15" fill="rgb(209,67,49)" fg:x="219" fg:w="8"/><text x="3.6401%" y="974.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:1360) (7 samples, 0.11%)</title><rect x="3.4056%" y="980" width="0.1084%" height="15" fill="rgb(213,87,29)" fg:x="220" fg:w="7"/><text x="3.6556%" y="990.50"></text></g><g><title>&lt;module&gt; (torch/export/__init__.py:17) (8 samples, 0.12%)</title><rect x="3.5604%" y="836" width="0.1238%" height="15" fill="rgb(205,151,52)" fg:x="230" fg:w="8"/><text x="3.8104%" y="846.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:1360) (8 samples, 0.12%)</title><rect x="3.5604%" y="852" width="0.1238%" height="15" fill="rgb(253,215,39)" fg:x="230" fg:w="8"/><text x="3.8104%" y="862.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:1310) (8 samples, 0.12%)</title><rect x="3.5604%" y="868" width="0.1238%" height="15" fill="rgb(221,220,41)" fg:x="230" fg:w="8"/><text x="3.8104%" y="878.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:488) (8 samples, 0.12%)</title><rect x="3.5604%" y="884" width="0.1238%" height="15" fill="rgb(218,133,21)" fg:x="230" fg:w="8"/><text x="3.8104%" y="894.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:1360) (8 samples, 0.12%)</title><rect x="3.5604%" y="900" width="0.1238%" height="15" fill="rgb(221,193,43)" fg:x="230" fg:w="8"/><text x="3.8104%" y="910.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:1310) (8 samples, 0.12%)</title><rect x="3.5604%" y="916" width="0.1238%" height="15" fill="rgb(240,128,52)" fg:x="230" fg:w="8"/><text x="3.8104%" y="926.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:488) (8 samples, 0.12%)</title><rect x="3.5604%" y="932" width="0.1238%" height="15" fill="rgb(253,114,12)" fg:x="230" fg:w="8"/><text x="3.8104%" y="942.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:1360) (8 samples, 0.12%)</title><rect x="3.5604%" y="948" width="0.1238%" height="15" fill="rgb(215,223,47)" fg:x="230" fg:w="8"/><text x="3.8104%" y="958.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:1331) (8 samples, 0.12%)</title><rect x="3.5604%" y="964" width="0.1238%" height="15" fill="rgb(248,225,23)" fg:x="230" fg:w="8"/><text x="3.8104%" y="974.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:935) (8 samples, 0.12%)</title><rect x="3.5604%" y="980" width="0.1238%" height="15" fill="rgb(250,108,0)" fg:x="230" fg:w="8"/><text x="3.8104%" y="990.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:995) (8 samples, 0.12%)</title><rect x="3.5604%" y="996" width="0.1238%" height="15" fill="rgb(228,208,7)" fg:x="230" fg:w="8"/><text x="3.8104%" y="1006.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:488) (8 samples, 0.12%)</title><rect x="3.5604%" y="1012" width="0.1238%" height="15" fill="rgb(244,45,10)" fg:x="230" fg:w="8"/><text x="3.8104%" y="1022.50"></text></g><g><title>&lt;module&gt; (torch/fx/passes/__init__.py:1) (8 samples, 0.12%)</title><rect x="3.5604%" y="1028" width="0.1238%" height="15" fill="rgb(207,125,25)" fg:x="230" fg:w="8"/><text x="3.8104%" y="1038.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;:1415) (8 samples, 0.12%)</title><rect x="3.5604%" y="1044" width="0.1238%" height="15" fill="rgb(210,195,18)" fg:x="230" fg:w="8"/><text x="3.8104%" y="1054.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:488) (8 samples, 0.12%)</title><rect x="3.5604%" y="1060" width="0.1238%" height="15" fill="rgb(249,80,12)" fg:x="230" fg:w="8"/><text x="3.8104%" y="1070.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:1360) (8 samples, 0.12%)</title><rect x="3.5604%" y="1076" width="0.1238%" height="15" fill="rgb(221,65,9)" fg:x="230" fg:w="8"/><text x="3.8104%" y="1086.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:1331) (8 samples, 0.12%)</title><rect x="3.5604%" y="1092" width="0.1238%" height="15" fill="rgb(235,49,36)" fg:x="230" fg:w="8"/><text x="3.8104%" y="1102.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:935) (8 samples, 0.12%)</title><rect x="3.5604%" y="1108" width="0.1238%" height="15" fill="rgb(225,32,20)" fg:x="230" fg:w="8"/><text x="3.8104%" y="1118.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:995) (8 samples, 0.12%)</title><rect x="3.5604%" y="1124" width="0.1238%" height="15" fill="rgb(215,141,46)" fg:x="230" fg:w="8"/><text x="3.8104%" y="1134.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:488) (8 samples, 0.12%)</title><rect x="3.5604%" y="1140" width="0.1238%" height="15" fill="rgb(250,160,47)" fg:x="230" fg:w="8"/><text x="3.8104%" y="1150.50"></text></g><g><title>&lt;module&gt; (torch/fx/passes/graph_drawer.py:13) (8 samples, 0.12%)</title><rect x="3.5604%" y="1156" width="0.1238%" height="15" fill="rgb(216,222,40)" fg:x="230" fg:w="8"/><text x="3.8104%" y="1166.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:1360) (8 samples, 0.12%)</title><rect x="3.5604%" y="1172" width="0.1238%" height="15" fill="rgb(234,217,39)" fg:x="230" fg:w="8"/><text x="3.8104%" y="1182.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:1331) (8 samples, 0.12%)</title><rect x="3.5604%" y="1188" width="0.1238%" height="15" fill="rgb(207,178,40)" fg:x="230" fg:w="8"/><text x="3.8104%" y="1198.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:935) (8 samples, 0.12%)</title><rect x="3.5604%" y="1204" width="0.1238%" height="15" fill="rgb(221,136,13)" fg:x="230" fg:w="8"/><text x="3.8104%" y="1214.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:995) (8 samples, 0.12%)</title><rect x="3.5604%" y="1220" width="0.1238%" height="15" fill="rgb(249,199,10)" fg:x="230" fg:w="8"/><text x="3.8104%" y="1230.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:488) (8 samples, 0.12%)</title><rect x="3.5604%" y="1236" width="0.1238%" height="15" fill="rgb(249,222,13)" fg:x="230" fg:w="8"/><text x="3.8104%" y="1246.50"></text></g><g><title>&lt;module&gt; (torch/__init__.py:2240) (16 samples, 0.25%)</title><rect x="3.5139%" y="180" width="0.2477%" height="15" fill="rgb(244,185,38)" fg:x="227" fg:w="16"/><text x="3.7639%" y="190.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;:1415) (16 samples, 0.25%)</title><rect x="3.5139%" y="196" width="0.2477%" height="15" fill="rgb(236,202,9)" fg:x="227" fg:w="16"/><text x="3.7639%" y="206.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:488) (16 samples, 0.25%)</title><rect x="3.5139%" y="212" width="0.2477%" height="15" fill="rgb(250,229,37)" fg:x="227" fg:w="16"/><text x="3.7639%" y="222.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:1360) (16 samples, 0.25%)</title><rect x="3.5139%" y="228" width="0.2477%" height="15" fill="rgb(206,174,23)" fg:x="227" fg:w="16"/><text x="3.7639%" y="238.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:1331) (16 samples, 0.25%)</title><rect x="3.5139%" y="244" width="0.2477%" height="15" fill="rgb(211,33,43)" fg:x="227" fg:w="16"/><text x="3.7639%" y="254.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:935) (16 samples, 0.25%)</title><rect x="3.5139%" y="260" width="0.2477%" height="15" fill="rgb(245,58,50)" fg:x="227" fg:w="16"/><text x="3.7639%" y="270.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:995) (16 samples, 0.25%)</title><rect x="3.5139%" y="276" width="0.2477%" height="15" fill="rgb(244,68,36)" fg:x="227" fg:w="16"/><text x="3.7639%" y="286.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:488) (16 samples, 0.25%)</title><rect x="3.5139%" y="292" width="0.2477%" height="15" fill="rgb(232,229,15)" fg:x="227" fg:w="16"/><text x="3.7639%" y="302.50"></text></g><g><title>&lt;module&gt; (torch/quantization/__init__.py:2) (16 samples, 0.25%)</title><rect x="3.5139%" y="308" width="0.2477%" height="15" fill="rgb(254,30,23)" fg:x="227" fg:w="16"/><text x="3.7639%" y="318.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:1360) (16 samples, 0.25%)</title><rect x="3.5139%" y="324" width="0.2477%" height="15" fill="rgb(235,160,14)" fg:x="227" fg:w="16"/><text x="3.7639%" y="334.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:1331) (16 samples, 0.25%)</title><rect x="3.5139%" y="340" width="0.2477%" height="15" fill="rgb(212,155,44)" fg:x="227" fg:w="16"/><text x="3.7639%" y="350.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:935) (16 samples, 0.25%)</title><rect x="3.5139%" y="356" width="0.2477%" height="15" fill="rgb(226,2,50)" fg:x="227" fg:w="16"/><text x="3.7639%" y="366.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:995) (16 samples, 0.25%)</title><rect x="3.5139%" y="372" width="0.2477%" height="15" fill="rgb(234,177,6)" fg:x="227" fg:w="16"/><text x="3.7639%" y="382.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:488) (16 samples, 0.25%)</title><rect x="3.5139%" y="388" width="0.2477%" height="15" fill="rgb(217,24,9)" fg:x="227" fg:w="16"/><text x="3.7639%" y="398.50"></text></g><g><title>&lt;module&gt; (torch/quantization/fake_quantize.py:10) (16 samples, 0.25%)</title><rect x="3.5139%" y="404" width="0.2477%" height="15" fill="rgb(220,13,46)" fg:x="227" fg:w="16"/><text x="3.7639%" y="414.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:1360) (16 samples, 0.25%)</title><rect x="3.5139%" y="420" width="0.2477%" height="15" fill="rgb(239,221,27)" fg:x="227" fg:w="16"/><text x="3.7639%" y="430.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:1310) (16 samples, 0.25%)</title><rect x="3.5139%" y="436" width="0.2477%" height="15" fill="rgb(222,198,25)" fg:x="227" fg:w="16"/><text x="3.7639%" y="446.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:488) (16 samples, 0.25%)</title><rect x="3.5139%" y="452" width="0.2477%" height="15" fill="rgb(211,99,13)" fg:x="227" fg:w="16"/><text x="3.7639%" y="462.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:1360) (16 samples, 0.25%)</title><rect x="3.5139%" y="468" width="0.2477%" height="15" fill="rgb(232,111,31)" fg:x="227" fg:w="16"/><text x="3.7639%" y="478.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:1331) (16 samples, 0.25%)</title><rect x="3.5139%" y="484" width="0.2477%" height="15" fill="rgb(245,82,37)" fg:x="227" fg:w="16"/><text x="3.7639%" y="494.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:935) (16 samples, 0.25%)</title><rect x="3.5139%" y="500" width="0.2477%" height="15" fill="rgb(227,149,46)" fg:x="227" fg:w="16"/><text x="3.7639%" y="510.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:995) (16 samples, 0.25%)</title><rect x="3.5139%" y="516" width="0.2477%" height="15" fill="rgb(218,36,50)" fg:x="227" fg:w="16"/><text x="3.7639%" y="526.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:488) (16 samples, 0.25%)</title><rect x="3.5139%" y="532" width="0.2477%" height="15" fill="rgb(226,80,48)" fg:x="227" fg:w="16"/><text x="3.7639%" y="542.50"></text></g><g><title>&lt;module&gt; (torch/ao/quantization/__init__.py:12) (16 samples, 0.25%)</title><rect x="3.5139%" y="548" width="0.2477%" height="15" fill="rgb(238,224,15)" fg:x="227" fg:w="16"/><text x="3.7639%" y="558.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:1360) (16 samples, 0.25%)</title><rect x="3.5139%" y="564" width="0.2477%" height="15" fill="rgb(241,136,10)" fg:x="227" fg:w="16"/><text x="3.7639%" y="574.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:1331) (16 samples, 0.25%)</title><rect x="3.5139%" y="580" width="0.2477%" height="15" fill="rgb(208,32,45)" fg:x="227" fg:w="16"/><text x="3.7639%" y="590.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:935) (16 samples, 0.25%)</title><rect x="3.5139%" y="596" width="0.2477%" height="15" fill="rgb(207,135,9)" fg:x="227" fg:w="16"/><text x="3.7639%" y="606.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:995) (16 samples, 0.25%)</title><rect x="3.5139%" y="612" width="0.2477%" height="15" fill="rgb(206,86,44)" fg:x="227" fg:w="16"/><text x="3.7639%" y="622.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:488) (16 samples, 0.25%)</title><rect x="3.5139%" y="628" width="0.2477%" height="15" fill="rgb(245,177,15)" fg:x="227" fg:w="16"/><text x="3.7639%" y="638.50"></text></g><g><title>&lt;module&gt; (torch/ao/quantization/pt2e/_numeric_debugger.py:9) (16 samples, 0.25%)</title><rect x="3.5139%" y="644" width="0.2477%" height="15" fill="rgb(206,64,50)" fg:x="227" fg:w="16"/><text x="3.7639%" y="654.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:1360) (16 samples, 0.25%)</title><rect x="3.5139%" y="660" width="0.2477%" height="15" fill="rgb(234,36,40)" fg:x="227" fg:w="16"/><text x="3.7639%" y="670.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:1331) (16 samples, 0.25%)</title><rect x="3.5139%" y="676" width="0.2477%" height="15" fill="rgb(213,64,8)" fg:x="227" fg:w="16"/><text x="3.7639%" y="686.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:935) (16 samples, 0.25%)</title><rect x="3.5139%" y="692" width="0.2477%" height="15" fill="rgb(210,75,36)" fg:x="227" fg:w="16"/><text x="3.7639%" y="702.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:995) (16 samples, 0.25%)</title><rect x="3.5139%" y="708" width="0.2477%" height="15" fill="rgb(229,88,21)" fg:x="227" fg:w="16"/><text x="3.7639%" y="718.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:488) (16 samples, 0.25%)</title><rect x="3.5139%" y="724" width="0.2477%" height="15" fill="rgb(252,204,47)" fg:x="227" fg:w="16"/><text x="3.7639%" y="734.50"></text></g><g><title>&lt;module&gt; (torch/ao/quantization/pt2e/graph_utils.py:9) (14 samples, 0.22%)</title><rect x="3.5449%" y="740" width="0.2167%" height="15" fill="rgb(208,77,27)" fg:x="229" fg:w="14"/><text x="3.7949%" y="750.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:1360) (14 samples, 0.22%)</title><rect x="3.5449%" y="756" width="0.2167%" height="15" fill="rgb(221,76,26)" fg:x="229" fg:w="14"/><text x="3.7949%" y="766.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:1331) (13 samples, 0.20%)</title><rect x="3.5604%" y="772" width="0.2012%" height="15" fill="rgb(225,139,18)" fg:x="230" fg:w="13"/><text x="3.8104%" y="782.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:935) (13 samples, 0.20%)</title><rect x="3.5604%" y="788" width="0.2012%" height="15" fill="rgb(230,137,11)" fg:x="230" fg:w="13"/><text x="3.8104%" y="798.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:995) (13 samples, 0.20%)</title><rect x="3.5604%" y="804" width="0.2012%" height="15" fill="rgb(212,28,1)" fg:x="230" fg:w="13"/><text x="3.8104%" y="814.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:488) (13 samples, 0.20%)</title><rect x="3.5604%" y="820" width="0.2012%" height="15" fill="rgb(248,164,17)" fg:x="230" fg:w="13"/><text x="3.8104%" y="830.50"></text></g><g><title>&lt;module&gt; (torch/__init__.py:24) (7 samples, 0.11%)</title><rect x="3.8545%" y="180" width="0.1084%" height="15" fill="rgb(222,171,42)" fg:x="249" fg:w="7"/><text x="4.1045%" y="190.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:1360) (7 samples, 0.11%)</title><rect x="3.8545%" y="196" width="0.1084%" height="15" fill="rgb(243,84,45)" fg:x="249" fg:w="7"/><text x="4.1045%" y="206.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:1331) (7 samples, 0.11%)</title><rect x="3.8545%" y="212" width="0.1084%" height="15" fill="rgb(252,49,23)" fg:x="249" fg:w="7"/><text x="4.1045%" y="222.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:935) (7 samples, 0.11%)</title><rect x="3.8545%" y="228" width="0.1084%" height="15" fill="rgb(215,19,7)" fg:x="249" fg:w="7"/><text x="4.1045%" y="238.50"></text></g><g><title>fstatat64 (libc.so.6) (9 samples, 0.14%)</title><rect x="4.3808%" y="820" width="0.1393%" height="15" fill="rgb(238,81,41)" fg:x="283" fg:w="9"/><text x="4.6308%" y="830.50"></text></g><g><title>_register_fake (torch/library.py:193) (18 samples, 0.28%)</title><rect x="4.2724%" y="708" width="0.2786%" height="15" fill="rgb(210,199,37)" fg:x="276" fg:w="18"/><text x="4.5224%" y="718.50"></text></g><g><title>get_source (torch/_library/utils.py:54) (18 samples, 0.28%)</title><rect x="4.2724%" y="724" width="0.2786%" height="15" fill="rgb(244,192,49)" fg:x="276" fg:w="18"/><text x="4.5224%" y="734.50"></text></g><g><title>getframeinfo (inspect.py:1707) (18 samples, 0.28%)</title><rect x="4.2724%" y="740" width="0.2786%" height="15" fill="rgb(226,211,11)" fg:x="276" fg:w="18"/><text x="4.5224%" y="750.50"></text></g><g><title>findsource (inspect.py:1083) (18 samples, 0.28%)</title><rect x="4.2724%" y="756" width="0.2786%" height="15" fill="rgb(236,162,54)" fg:x="276" fg:w="18"/><text x="4.5224%" y="766.50"></text></g><g><title>getmodule (inspect.py:1009) (18 samples, 0.28%)</title><rect x="4.2724%" y="772" width="0.2786%" height="15" fill="rgb(220,229,9)" fg:x="276" fg:w="18"/><text x="4.5224%" y="782.50"></text></g><g><title>realpath (&lt;frozen posixpath&gt;:435) (18 samples, 0.28%)</title><rect x="4.2724%" y="788" width="0.2786%" height="15" fill="rgb(250,87,22)" fg:x="276" fg:w="18"/><text x="4.5224%" y="798.50"></text></g><g><title>_joinrealpath (&lt;frozen posixpath&gt;:470) (14 samples, 0.22%)</title><rect x="4.3344%" y="804" width="0.2167%" height="15" fill="rgb(239,43,17)" fg:x="280" fg:w="14"/><text x="4.5844%" y="814.50"></text></g><g><title>&lt;module&gt; (torch/_prims/__init__.py:525) (20 samples, 0.31%)</title><rect x="4.2724%" y="596" width="0.3096%" height="15" fill="rgb(231,177,25)" fg:x="276" fg:w="20"/><text x="4.5224%" y="606.50"></text></g><g><title>_make_elementwise_unary_prim (torch/_prims/__init__.py:493) (20 samples, 0.31%)</title><rect x="4.2724%" y="612" width="0.3096%" height="15" fill="rgb(219,179,1)" fg:x="276" fg:w="20"/><text x="4.5224%" y="622.50"></text></g><g><title>_make_prim (torch/_prims/__init__.py:321) (20 samples, 0.31%)</title><rect x="4.2724%" y="628" width="0.3096%" height="15" fill="rgb(238,219,53)" fg:x="276" fg:w="20"/><text x="4.5224%" y="638.50"></text></g><g><title>custom_op (torch/_library/custom_ops.py:173) (20 samples, 0.31%)</title><rect x="4.2724%" y="644" width="0.3096%" height="15" fill="rgb(232,167,36)" fg:x="276" fg:w="20"/><text x="4.5224%" y="654.50"></text></g><g><title>inner (torch/_library/custom_ops.py:154) (20 samples, 0.31%)</title><rect x="4.2724%" y="660" width="0.3096%" height="15" fill="rgb(244,19,51)" fg:x="276" fg:w="20"/><text x="4.5224%" y="670.50"></text></g><g><title>__init__ (torch/_library/custom_ops.py:204) (20 samples, 0.31%)</title><rect x="4.2724%" y="676" width="0.3096%" height="15" fill="rgb(224,6,22)" fg:x="276" fg:w="20"/><text x="4.5224%" y="686.50"></text></g><g><title>_register_to_dispatcher (torch/_library/custom_ops.py:624) (20 samples, 0.31%)</title><rect x="4.2724%" y="692" width="0.3096%" height="15" fill="rgb(224,145,5)" fg:x="276" fg:w="20"/><text x="4.5224%" y="702.50"></text></g><g><title>&lt;module&gt; (torch/_decomp/decompositions.py:16) (52 samples, 0.80%)</title><rect x="3.9938%" y="500" width="0.8050%" height="15" fill="rgb(234,130,49)" fg:x="258" fg:w="52"/><text x="4.2438%" y="510.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:1360) (52 samples, 0.80%)</title><rect x="3.9938%" y="516" width="0.8050%" height="15" fill="rgb(254,6,2)" fg:x="258" fg:w="52"/><text x="4.2438%" y="526.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:1331) (52 samples, 0.80%)</title><rect x="3.9938%" y="532" width="0.8050%" height="15" fill="rgb(208,96,46)" fg:x="258" fg:w="52"/><text x="4.2438%" y="542.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:935) (52 samples, 0.80%)</title><rect x="3.9938%" y="548" width="0.8050%" height="15" fill="rgb(239,3,39)" fg:x="258" fg:w="52"/><text x="4.2438%" y="558.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:995) (52 samples, 0.80%)</title><rect x="3.9938%" y="564" width="0.8050%" height="15" fill="rgb(233,210,1)" fg:x="258" fg:w="52"/><text x="4.2438%" y="574.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:488) (52 samples, 0.80%)</title><rect x="3.9938%" y="580" width="0.8050%" height="15" fill="rgb(244,137,37)" fg:x="258" fg:w="52"/><text x="4.2438%" y="590.50"></text></g><g><title>&lt;module&gt; (torch/_decomp/__init__.py:276) (57 samples, 0.88%)</title><rect x="3.9938%" y="404" width="0.8824%" height="15" fill="rgb(240,136,2)" fg:x="258" fg:w="57"/><text x="4.2438%" y="414.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:1360) (57 samples, 0.88%)</title><rect x="3.9938%" y="420" width="0.8824%" height="15" fill="rgb(239,18,37)" fg:x="258" fg:w="57"/><text x="4.2438%" y="430.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:1331) (57 samples, 0.88%)</title><rect x="3.9938%" y="436" width="0.8824%" height="15" fill="rgb(218,185,22)" fg:x="258" fg:w="57"/><text x="4.2438%" y="446.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:935) (57 samples, 0.88%)</title><rect x="3.9938%" y="452" width="0.8824%" height="15" fill="rgb(225,218,4)" fg:x="258" fg:w="57"/><text x="4.2438%" y="462.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:995) (57 samples, 0.88%)</title><rect x="3.9938%" y="468" width="0.8824%" height="15" fill="rgb(230,182,32)" fg:x="258" fg:w="57"/><text x="4.2438%" y="478.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:488) (57 samples, 0.88%)</title><rect x="3.9938%" y="484" width="0.8824%" height="15" fill="rgb(242,56,43)" fg:x="258" fg:w="57"/><text x="4.2438%" y="494.50"></text></g><g><title>&lt;module&gt; (torch/_meta_registrations.py:12) (75 samples, 1.16%)</title><rect x="3.9938%" y="308" width="1.1610%" height="15" fill="rgb(233,99,24)" fg:x="258" fg:w="75"/><text x="4.2438%" y="318.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:1360) (75 samples, 1.16%)</title><rect x="3.9938%" y="324" width="1.1610%" height="15" fill="rgb(234,209,42)" fg:x="258" fg:w="75"/><text x="4.2438%" y="334.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:1331) (75 samples, 1.16%)</title><rect x="3.9938%" y="340" width="1.1610%" height="15" fill="rgb(227,7,12)" fg:x="258" fg:w="75"/><text x="4.2438%" y="350.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:935) (75 samples, 1.16%)</title><rect x="3.9938%" y="356" width="1.1610%" height="15" fill="rgb(245,203,43)" fg:x="258" fg:w="75"/><text x="4.2438%" y="366.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:995) (75 samples, 1.16%)</title><rect x="3.9938%" y="372" width="1.1610%" height="15" fill="rgb(238,205,33)" fg:x="258" fg:w="75"/><text x="4.2438%" y="382.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:488) (75 samples, 1.16%)</title><rect x="3.9938%" y="388" width="1.1610%" height="15" fill="rgb(231,56,7)" fg:x="258" fg:w="75"/><text x="4.2438%" y="398.50"></text></g><g><title>&lt;module&gt; (torch/_decomp/__init__.py:277) (18 samples, 0.28%)</title><rect x="4.8762%" y="404" width="0.2786%" height="15" fill="rgb(244,186,29)" fg:x="315" fg:w="18"/><text x="5.1262%" y="414.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:1360) (18 samples, 0.28%)</title><rect x="4.8762%" y="420" width="0.2786%" height="15" fill="rgb(234,111,31)" fg:x="315" fg:w="18"/><text x="5.1262%" y="430.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:1331) (18 samples, 0.28%)</title><rect x="4.8762%" y="436" width="0.2786%" height="15" fill="rgb(241,149,10)" fg:x="315" fg:w="18"/><text x="5.1262%" y="446.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:935) (18 samples, 0.28%)</title><rect x="4.8762%" y="452" width="0.2786%" height="15" fill="rgb(249,206,44)" fg:x="315" fg:w="18"/><text x="5.1262%" y="462.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:995) (18 samples, 0.28%)</title><rect x="4.8762%" y="468" width="0.2786%" height="15" fill="rgb(251,153,30)" fg:x="315" fg:w="18"/><text x="5.1262%" y="478.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:488) (18 samples, 0.28%)</title><rect x="4.8762%" y="484" width="0.2786%" height="15" fill="rgb(239,152,38)" fg:x="315" fg:w="18"/><text x="5.1262%" y="494.50"></text></g><g><title>_lock_unlock_module (&lt;frozen importlib._bootstrap&gt;:471) (7 samples, 0.11%)</title><rect x="5.5573%" y="404" width="0.1084%" height="15" fill="rgb(249,139,47)" fg:x="359" fg:w="7"/><text x="5.8073%" y="414.50"></text></g><g><title>pybind11::cpp_function::initialize&lt;torch::impl::dispatch::initDispatchBindings(_object*)::{lambda(pybind11::object const&amp;, char const*, c10::DispatchKey, pybind11::object, bool)#9}, void, pybind11::object const&amp;, char const*, c10::DispatchKey, pybind11::object, bool, pybind11::name, pybind11::is_method, pybind11::sibling, char [1], pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v&gt;(torch::impl::dispatch::initDispatchBindings(_object*)::{lambda(pybind11::object const&amp;, char const*, c10::DispatchKey, pybind11::object, bool)#9}, void (*)(pybind11::object const&amp;, char const*, c10::DispatchKey, pybind11::object, bool), pybind11::name const, pybind11::is_method&amp;, pybind11::sibling, char [1], pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v)::{lambda(pybind11::detail::function_call&amp;)#3}::_FUN (libtorch_python.so) (18 samples, 0.28%)</title><rect x="5.5108%" y="372" width="0.2786%" height="15" fill="rgb(244,64,35)" fg:x="356" fg:w="18"/><text x="5.7608%" y="382.50"></text></g><g><title>torch::impl::dispatch::initDispatchBindings(_object*)::{lambda(pybind11::object const&amp;, char const*, c10::DispatchKey, pybind11::object, bool)#9}::operator() const (libtorch_python.so) (18 samples, 0.28%)</title><rect x="5.5108%" y="388" width="0.2786%" height="15" fill="rgb(216,46,15)" fg:x="356" fg:w="18"/><text x="5.7608%" y="398.50"></text></g><g><title>&lt;module&gt; (torch/_meta_registrations.py:7356) (33 samples, 0.51%)</title><rect x="5.2941%" y="308" width="0.5108%" height="15" fill="rgb(250,74,19)" fg:x="342" fg:w="33"/><text x="5.5441%" y="318.50"></text></g><g><title>activate_meta (torch/_meta_registrations.py:7353) (25 samples, 0.39%)</title><rect x="5.4180%" y="324" width="0.3870%" height="15" fill="rgb(249,42,33)" fg:x="350" fg:w="25"/><text x="5.6680%" y="334.50"></text></g><g><title>impl (torch/library.py:369) (21 samples, 0.33%)</title><rect x="5.4799%" y="340" width="0.3251%" height="15" fill="rgb(242,149,17)" fg:x="354" fg:w="21"/><text x="5.7299%" y="350.50"></text></g><g><title>pybind11::cpp_function::dispatcher (libtorch_python.so) (19 samples, 0.29%)</title><rect x="5.5108%" y="356" width="0.2941%" height="15" fill="rgb(244,29,21)" fg:x="356" fg:w="19"/><text x="5.7608%" y="366.50"></text></g><g><title>&lt;module&gt; (torch/__init__.py:2611) (120 samples, 1.86%)</title><rect x="3.9628%" y="180" width="1.8576%" height="15" fill="rgb(220,130,37)" fg:x="256" fg:w="120"/><text x="4.2128%" y="190.50">&lt;..</text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;:1415) (120 samples, 1.86%)</title><rect x="3.9628%" y="196" width="1.8576%" height="15" fill="rgb(211,67,2)" fg:x="256" fg:w="120"/><text x="4.2128%" y="206.50">_..</text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:488) (120 samples, 1.86%)</title><rect x="3.9628%" y="212" width="1.8576%" height="15" fill="rgb(235,68,52)" fg:x="256" fg:w="120"/><text x="4.2128%" y="222.50">_..</text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:1360) (120 samples, 1.86%)</title><rect x="3.9628%" y="228" width="1.8576%" height="15" fill="rgb(246,142,3)" fg:x="256" fg:w="120"/><text x="4.2128%" y="238.50">_..</text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:1331) (120 samples, 1.86%)</title><rect x="3.9628%" y="244" width="1.8576%" height="15" fill="rgb(241,25,7)" fg:x="256" fg:w="120"/><text x="4.2128%" y="254.50">_..</text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:935) (120 samples, 1.86%)</title><rect x="3.9628%" y="260" width="1.8576%" height="15" fill="rgb(242,119,39)" fg:x="256" fg:w="120"/><text x="4.2128%" y="270.50">_..</text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:995) (118 samples, 1.83%)</title><rect x="3.9938%" y="276" width="1.8266%" height="15" fill="rgb(241,98,45)" fg:x="258" fg:w="118"/><text x="4.2438%" y="286.50">e..</text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:488) (118 samples, 1.83%)</title><rect x="3.9938%" y="292" width="1.8266%" height="15" fill="rgb(254,28,30)" fg:x="258" fg:w="118"/><text x="4.2438%" y="302.50">_..</text></g><g><title>&lt;module&gt; (torch/__init__.py:408) (7 samples, 0.11%)</title><rect x="5.8359%" y="180" width="0.1084%" height="15" fill="rgb(241,142,54)" fg:x="377" fg:w="7"/><text x="6.0859%" y="190.50"></text></g><g><title>_load_global_deps (torch/__init__.py:328) (7 samples, 0.11%)</title><rect x="5.8359%" y="196" width="0.1084%" height="15" fill="rgb(222,85,15)" fg:x="377" fg:w="7"/><text x="6.0859%" y="206.50"></text></g><g><title>_preload_cuda_deps (torch/__init__.py:297) (7 samples, 0.11%)</title><rect x="5.8359%" y="212" width="0.1084%" height="15" fill="rgb(210,85,47)" fg:x="377" fg:w="7"/><text x="6.0859%" y="222.50"></text></g><g><title>__init__ (ctypes/__init__.py:379) (7 samples, 0.11%)</title><rect x="5.8359%" y="228" width="0.1084%" height="15" fill="rgb(224,206,25)" fg:x="377" fg:w="7"/><text x="6.0859%" y="238.50"></text></g><g><title>0x77d252a7790a (_ctypes.cpython-312-x86_64-linux-gnu.so) (7 samples, 0.11%)</title><rect x="5.8359%" y="244" width="0.1084%" height="15" fill="rgb(243,201,19)" fg:x="377" fg:w="7"/><text x="6.0859%" y="254.50"></text></g><g><title>dlopen (libc.so.6) (7 samples, 0.11%)</title><rect x="5.8359%" y="260" width="0.1084%" height="15" fill="rgb(236,59,4)" fg:x="377" fg:w="7"/><text x="6.0859%" y="270.50"></text></g><g><title>0x77d252897c83 (libc.so.6) (7 samples, 0.11%)</title><rect x="5.8359%" y="276" width="0.1084%" height="15" fill="rgb(254,179,45)" fg:x="377" fg:w="7"/><text x="6.0859%" y="286.50"></text></g><g><title>0x77d252c32669 (ld-linux-x86-64.so.2) (7 samples, 0.11%)</title><rect x="5.8359%" y="292" width="0.1084%" height="15" fill="rgb(226,14,10)" fg:x="377" fg:w="7"/><text x="6.0859%" y="302.50"></text></g><g><title>_dl_catch_exception (ld-linux-x86-64.so.2) (7 samples, 0.11%)</title><rect x="5.8359%" y="308" width="0.1084%" height="15" fill="rgb(244,27,41)" fg:x="377" fg:w="7"/><text x="6.0859%" y="318.50"></text></g><g><title>0x77d2528981a4 (libc.so.6) (7 samples, 0.11%)</title><rect x="5.8359%" y="324" width="0.1084%" height="15" fill="rgb(235,35,32)" fg:x="377" fg:w="7"/><text x="6.0859%" y="334.50"></text></g><g><title>0x77d252c3e164 (ld-linux-x86-64.so.2) (7 samples, 0.11%)</title><rect x="5.8359%" y="340" width="0.1084%" height="15" fill="rgb(218,68,31)" fg:x="377" fg:w="7"/><text x="6.0859%" y="350.50"></text></g><g><title>_dl_catch_exception (ld-linux-x86-64.so.2) (7 samples, 0.11%)</title><rect x="5.8359%" y="356" width="0.1084%" height="15" fill="rgb(207,120,37)" fg:x="377" fg:w="7"/><text x="6.0859%" y="366.50"></text></g><g><title>0x77d252c3dd7c (ld-linux-x86-64.so.2) (7 samples, 0.11%)</title><rect x="5.8359%" y="372" width="0.1084%" height="15" fill="rgb(227,98,0)" fg:x="377" fg:w="7"/><text x="6.0859%" y="382.50"></text></g><g><title>_dl_catch_exception (ld-linux-x86-64.so.2) (7 samples, 0.11%)</title><rect x="5.8359%" y="388" width="0.1084%" height="15" fill="rgb(207,7,3)" fg:x="377" fg:w="7"/><text x="6.0859%" y="398.50"></text></g><g><title>0x77d252c36824 (ld-linux-x86-64.so.2) (7 samples, 0.11%)</title><rect x="5.8359%" y="404" width="0.1084%" height="15" fill="rgb(206,98,19)" fg:x="377" fg:w="7"/><text x="6.0859%" y="414.50"></text></g><g><title>0x77d252c3e945 (ld-linux-x86-64.so.2) (12 samples, 0.19%)</title><rect x="5.9907%" y="436" width="0.1858%" height="15" fill="rgb(217,5,26)" fg:x="387" fg:w="12"/><text x="6.2407%" y="446.50"></text></g><g><title>0x77d252c33e67 (ld-linux-x86-64.so.2) (11 samples, 0.17%)</title><rect x="6.0062%" y="452" width="0.1703%" height="15" fill="rgb(235,190,38)" fg:x="388" fg:w="11"/><text x="6.2562%" y="462.50"></text></g><g><title>_dl_catch_exception (ld-linux-x86-64.so.2) (11 samples, 0.17%)</title><rect x="6.0062%" y="468" width="0.1703%" height="15" fill="rgb(247,86,24)" fg:x="388" fg:w="11"/><text x="6.2562%" y="478.50"></text></g><g><title>0x77d252c33a2d (ld-linux-x86-64.so.2) (11 samples, 0.17%)</title><rect x="6.0062%" y="484" width="0.1703%" height="15" fill="rgb(205,101,16)" fg:x="388" fg:w="11"/><text x="6.2562%" y="494.50"></text></g><g><title>0x77d252c3c1fc (ld-linux-x86-64.so.2) (7 samples, 0.11%)</title><rect x="6.3313%" y="468" width="0.1084%" height="15" fill="rgb(246,168,33)" fg:x="409" fg:w="7"/><text x="6.5813%" y="478.50"></text></g><g><title>0x77d252c40ae3 (ld-linux-x86-64.so.2) (16 samples, 0.25%)</title><rect x="6.2074%" y="452" width="0.2477%" height="15" fill="rgb(231,114,1)" fg:x="401" fg:w="16"/><text x="6.4574%" y="462.50"></text></g><g><title>0x77d252c3dd20 (ld-linux-x86-64.so.2) (33 samples, 0.51%)</title><rect x="5.9907%" y="404" width="0.5108%" height="15" fill="rgb(207,184,53)" fg:x="387" fg:w="33"/><text x="6.2407%" y="414.50"></text></g><g><title>_dl_catch_exception (ld-linux-x86-64.so.2) (33 samples, 0.51%)</title><rect x="5.9907%" y="420" width="0.5108%" height="15" fill="rgb(224,95,51)" fg:x="387" fg:w="33"/><text x="6.2407%" y="430.50"></text></g><g><title>0x77d252c3eb16 (ld-linux-x86-64.so.2) (21 samples, 0.33%)</title><rect x="6.1765%" y="436" width="0.3251%" height="15" fill="rgb(212,188,45)" fg:x="399" fg:w="21"/><text x="6.4265%" y="446.50"></text></g><g><title>0x77d1953bbff9 (nvidia/cublas/lib/libcublasLt.so.12) (8 samples, 0.12%)</title><rect x="6.5325%" y="468" width="0.1238%" height="15" fill="rgb(223,154,38)" fg:x="422" fg:w="8"/><text x="6.7825%" y="478.50"></text></g><g><title>0x77d1953ee4d9 (nvidia/cublas/lib/libcublasLt.so.12) (10 samples, 0.15%)</title><rect x="6.6718%" y="468" width="0.1548%" height="15" fill="rgb(251,22,52)" fg:x="431" fg:w="10"/><text x="6.9218%" y="478.50"></text></g><g><title>_GLOBAL__sub_I_RegisterSchema.cpp (libtorch_cpu.so) (9 samples, 0.14%)</title><rect x="7.1517%" y="468" width="0.1393%" height="15" fill="rgb(229,209,22)" fg:x="462" fg:w="9"/><text x="7.4017%" y="478.50"></text></g><g><title>at::TORCH_LIBRARY_init_aten (libtorch_cpu.so) (9 samples, 0.14%)</title><rect x="7.1517%" y="484" width="0.1393%" height="15" fill="rgb(234,138,34)" fg:x="462" fg:w="9"/><text x="7.4017%" y="494.50"></text></g><g><title>c10::Dispatcher::registerImpl (libtorch_cpu.so) (7 samples, 0.11%)</title><rect x="7.6471%" y="532" width="0.1084%" height="15" fill="rgb(212,95,11)" fg:x="494" fg:w="7"/><text x="7.8971%" y="542.50"></text></g><g><title>torch::Library::_impl &amp; (libtorch_cpu.so) (8 samples, 0.12%)</title><rect x="7.6471%" y="516" width="0.1238%" height="15" fill="rgb(240,179,47)" fg:x="494" fg:w="8"/><text x="7.8971%" y="526.50"></text></g><g><title>_GLOBAL__sub_I_autocast_mode.cpp (libtorch_cpu.so) (37 samples, 0.57%)</title><rect x="7.4768%" y="468" width="0.5728%" height="15" fill="rgb(240,163,11)" fg:x="483" fg:w="37"/><text x="7.7268%" y="478.50"></text></g><g><title>torch::detail::TorchLibraryInit::TorchLibraryInit (libtorch_cpu.so) (37 samples, 0.57%)</title><rect x="7.4768%" y="484" width="0.5728%" height="15" fill="rgb(236,37,12)" fg:x="483" fg:w="37"/><text x="7.7268%" y="494.50"></text></g><g><title>at::autocast::(anonymous namespace)::TORCH_LIBRARY_IMPL_init_aten_Autocast_3 (libtorch_cpu.so) (27 samples, 0.42%)</title><rect x="7.6316%" y="500" width="0.4180%" height="15" fill="rgb(232,164,16)" fg:x="493" fg:w="27"/><text x="7.8816%" y="510.50"></text></g><g><title>torch::detail::TorchLibraryInit::TorchLibraryInit (libtorch_cpu.so) (10 samples, 0.15%)</title><rect x="8.1579%" y="484" width="0.1548%" height="15" fill="rgb(244,205,15)" fg:x="527" fg:w="10"/><text x="8.4079%" y="494.50"></text></g><g><title>torch::jit::(anonymous namespace)::SchemaParser::parseDeclaration (libtorch_cpu.so) (10 samples, 0.15%)</title><rect x="8.3437%" y="564" width="0.1548%" height="15" fill="rgb(223,117,47)" fg:x="539" fg:w="10"/><text x="8.5937%" y="574.50"></text></g><g><title>__static_initialization_and_destruction_0 (libtorch_cpu.so) (26 samples, 0.40%)</title><rect x="8.1269%" y="468" width="0.4025%" height="15" fill="rgb(244,107,35)" fg:x="525" fg:w="26"/><text x="8.3769%" y="478.50"></text></g><g><title>torch::jit::RegisterOperators::RegisterOperators (libtorch_cpu.so) (14 samples, 0.22%)</title><rect x="8.3127%" y="484" width="0.2167%" height="15" fill="rgb(205,140,8)" fg:x="537" fg:w="14"/><text x="8.5627%" y="494.50"></text></g><g><title>torch::jit::registerOperator (libtorch_cpu.so) (14 samples, 0.22%)</title><rect x="8.3127%" y="500" width="0.2167%" height="15" fill="rgb(228,84,46)" fg:x="537" fg:w="14"/><text x="8.5627%" y="510.50"></text></g><g><title>std::__detail::__variant::__gen_vtable_impl&lt;std::__detail::__variant::_Multi_array&lt;std::__detail::__variant::__deduce_visit_result&lt;c10::FunctionSchema const&amp;&gt; (*)(c10::detail::overloaded_t&lt;torch::jit::Operator::schema() const::{lambda(torch::jit::Operator::C10Operator const&amp;)#1}, torch::jit::Operator::schema() const::{lambda(torch::jit::Operator::JitOnlyOperator const&amp;)#2}&gt;&amp;&amp;, std::variant&lt;torch::jit::Operator::C10Operator, torch::jit::Operator::JitOnlyOperator&gt; const&amp;), &gt;, std::integer_sequence&lt;unsigned long, (unsigned long)1&gt; &gt;::__visit_invoke (libtorch_cpu.so) (12 samples, 0.19%)</title><rect x="8.3437%" y="516" width="0.1858%" height="15" fill="rgb(254,188,9)" fg:x="539" fg:w="12"/><text x="8.5937%" y="526.50"></text></g><g><title>torch::jit::parseSchema (libtorch_cpu.so) (12 samples, 0.19%)</title><rect x="8.3437%" y="532" width="0.1858%" height="15" fill="rgb(206,112,54)" fg:x="539" fg:w="12"/><text x="8.5937%" y="542.50"></text></g><g><title>torch::jit::parseSchemaOrName (libtorch_cpu.so) (12 samples, 0.19%)</title><rect x="8.3437%" y="548" width="0.1858%" height="15" fill="rgb(216,84,49)" fg:x="539" fg:w="12"/><text x="8.5937%" y="558.50"></text></g><g><title>at::(anonymous namespace)::TORCH_LIBRARY_IMPL_init_aten_CUDA_160 (libtorch_cuda.so) (8 samples, 0.12%)</title><rect x="8.5294%" y="500" width="0.1238%" height="15" fill="rgb(214,194,35)" fg:x="551" fg:w="8"/><text x="8.7794%" y="510.50"></text></g><g><title>torch::Library::_impl &amp; (libtorch_cpu.so) (8 samples, 0.12%)</title><rect x="8.5294%" y="516" width="0.1238%" height="15" fill="rgb(249,28,3)" fg:x="551" fg:w="8"/><text x="8.7794%" y="526.50"></text></g><g><title>c10::Dispatcher::registerImpl (libtorch_cpu.so) (8 samples, 0.12%)</title><rect x="8.5294%" y="532" width="0.1238%" height="15" fill="rgb(222,56,52)" fg:x="551" fg:w="8"/><text x="8.7794%" y="542.50"></text></g><g><title>c10::impl::OperatorEntry::registerKernel (libtorch_cpu.so) (8 samples, 0.12%)</title><rect x="8.5294%" y="548" width="0.1238%" height="15" fill="rgb(245,217,50)" fg:x="551" fg:w="8"/><text x="8.7794%" y="558.50"></text></g><g><title>c10::impl::(anonymous namespace)::checkSchema (libtorch_cpu.so) (8 samples, 0.12%)</title><rect x="8.5294%" y="564" width="0.1238%" height="15" fill="rgb(213,201,24)" fg:x="551" fg:w="8"/><text x="8.7794%" y="574.50"></text></g><g><title>c10::FunctionSchema::cloneWithRealTypes (libtorch_cpu.so) (8 samples, 0.12%)</title><rect x="8.5294%" y="580" width="0.1238%" height="15" fill="rgb(248,116,28)" fg:x="551" fg:w="8"/><text x="8.7794%" y="590.50"></text></g><g><title>c10::Argument::cloneWithType (libtorch_cpu.so) (8 samples, 0.12%)</title><rect x="8.5294%" y="596" width="0.1238%" height="15" fill="rgb(219,72,43)" fg:x="551" fg:w="8"/><text x="8.7794%" y="606.50"></text></g><g><title>c10::AliasInfo::AliasInfo (libtorch_cpu.so) (8 samples, 0.12%)</title><rect x="8.5294%" y="612" width="0.1238%" height="15" fill="rgb(209,138,14)" fg:x="551" fg:w="8"/><text x="8.7794%" y="622.50"></text></g><g><title>std::_Hashtable&lt;c10::Symbol, c10::Symbol, std::allocator&lt;c10::Symbol&gt;, std::__detail::_Identity, std::equal_to&lt;c10::Symbol&gt;, std::hash&lt;c10::Symbol&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, true, true&gt; &gt;::_M_assign&lt;std::_Hashtable&lt;c10::Symbol, c10::Symbol, std::allocator&lt;c10::Symbol&gt;, std::__detail::_Identity, std::equal_to&lt;c10::Symbol&gt;, std::hash&lt;c10::Symbol&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, true, true&gt; &gt; const&amp;, std::__detail::_AllocNode&lt;std::allocator&lt;std::__detail::_Hash_node&lt;c10::Symbol, true&gt; &gt; &gt; &gt; (libtorch_cpu.so) (8 samples, 0.12%)</title><rect x="8.5294%" y="628" width="0.1238%" height="15" fill="rgb(222,18,33)" fg:x="551" fg:w="8"/><text x="8.7794%" y="638.50"></text></g><g><title>__static_initialization_and_destruction_0 (libtorch_cuda.so) (14 samples, 0.22%)</title><rect x="8.5294%" y="468" width="0.2167%" height="15" fill="rgb(213,199,7)" fg:x="551" fg:w="14"/><text x="8.7794%" y="478.50"></text></g><g><title>torch::detail::TorchLibraryInit::TorchLibraryInit (libtorch_cuda.so) (14 samples, 0.22%)</title><rect x="8.5294%" y="484" width="0.2167%" height="15" fill="rgb(250,110,10)" fg:x="551" fg:w="14"/><text x="8.7794%" y="494.50"></text></g><g><title>0x77d252c3671f (ld-linux-x86-64.so.2) (147 samples, 2.28%)</title><rect x="6.5015%" y="452" width="2.2755%" height="15" fill="rgb(248,123,6)" fg:x="420" fg:w="147"/><text x="6.7515%" y="462.50">0..</text></g><g><title>dlopen (libc.so.6) (181 samples, 2.80%)</title><rect x="5.9907%" y="292" width="2.8019%" height="15" fill="rgb(206,91,31)" fg:x="387" fg:w="181"/><text x="6.2407%" y="302.50">dl..</text></g><g><title>0x77d252897c83 (libc.so.6) (181 samples, 2.80%)</title><rect x="5.9907%" y="308" width="2.8019%" height="15" fill="rgb(211,154,13)" fg:x="387" fg:w="181"/><text x="6.2407%" y="318.50">0x..</text></g><g><title>0x77d252c32669 (ld-linux-x86-64.so.2) (181 samples, 2.80%)</title><rect x="5.9907%" y="324" width="2.8019%" height="15" fill="rgb(225,148,7)" fg:x="387" fg:w="181"/><text x="6.2407%" y="334.50">0x..</text></g><g><title>_dl_catch_exception (ld-linux-x86-64.so.2) (181 samples, 2.80%)</title><rect x="5.9907%" y="340" width="2.8019%" height="15" fill="rgb(220,160,43)" fg:x="387" fg:w="181"/><text x="6.2407%" y="350.50">_d..</text></g><g><title>0x77d2528981a4 (libc.so.6) (181 samples, 2.80%)</title><rect x="5.9907%" y="356" width="2.8019%" height="15" fill="rgb(213,52,39)" fg:x="387" fg:w="181"/><text x="6.2407%" y="366.50">0x..</text></g><g><title>0x77d252c3e164 (ld-linux-x86-64.so.2) (181 samples, 2.80%)</title><rect x="5.9907%" y="372" width="2.8019%" height="15" fill="rgb(243,137,7)" fg:x="387" fg:w="181"/><text x="6.2407%" y="382.50">0x..</text></g><g><title>_dl_catch_exception (ld-linux-x86-64.so.2) (181 samples, 2.80%)</title><rect x="5.9907%" y="388" width="2.8019%" height="15" fill="rgb(230,79,13)" fg:x="387" fg:w="181"/><text x="6.2407%" y="398.50">_d..</text></g><g><title>0x77d252c3dd7c (ld-linux-x86-64.so.2) (148 samples, 2.29%)</title><rect x="6.5015%" y="404" width="2.2910%" height="15" fill="rgb(247,105,23)" fg:x="420" fg:w="148"/><text x="6.7515%" y="414.50">0..</text></g><g><title>_dl_catch_exception (ld-linux-x86-64.so.2) (148 samples, 2.29%)</title><rect x="6.5015%" y="420" width="2.2910%" height="15" fill="rgb(223,179,41)" fg:x="420" fg:w="148"/><text x="6.7515%" y="430.50">_..</text></g><g><title>0x77d252c36824 (ld-linux-x86-64.so.2) (148 samples, 2.29%)</title><rect x="6.5015%" y="436" width="2.2910%" height="15" fill="rgb(218,9,34)" fg:x="420" fg:w="148"/><text x="6.7515%" y="446.50">0..</text></g><g><title>PyInit__multiarray_umath (numpy/_core/_multiarray_umath.cpython-312-x86_64-linux-gnu.so) (11 samples, 0.17%)</title><rect x="8.7926%" y="1028" width="0.1703%" height="15" fill="rgb(222,106,8)" fg:x="568" fg:w="11"/><text x="9.0426%" y="1038.50"></text></g><g><title>initialize_static_globals (numpy/_core/_multiarray_umath.cpython-312-x86_64-linux-gnu.so) (10 samples, 0.15%)</title><rect x="8.8080%" y="1044" width="0.1548%" height="15" fill="rgb(211,220,0)" fg:x="569" fg:w="10"/><text x="9.0580%" y="1054.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:1360) (10 samples, 0.15%)</title><rect x="8.8080%" y="1060" width="0.1548%" height="15" fill="rgb(229,52,16)" fg:x="569" fg:w="10"/><text x="9.0580%" y="1070.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:1331) (9 samples, 0.14%)</title><rect x="8.8235%" y="1076" width="0.1393%" height="15" fill="rgb(212,155,18)" fg:x="570" fg:w="9"/><text x="9.0735%" y="1086.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:935) (9 samples, 0.14%)</title><rect x="8.8235%" y="1092" width="0.1393%" height="15" fill="rgb(242,21,14)" fg:x="570" fg:w="9"/><text x="9.0735%" y="1102.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:995) (7 samples, 0.11%)</title><rect x="8.8545%" y="1108" width="0.1084%" height="15" fill="rgb(222,19,48)" fg:x="572" fg:w="7"/><text x="9.1045%" y="1118.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:488) (7 samples, 0.11%)</title><rect x="8.8545%" y="1124" width="0.1084%" height="15" fill="rgb(232,45,27)" fg:x="572" fg:w="7"/><text x="9.1045%" y="1134.50"></text></g><g><title>&lt;module&gt; (numpy/_core/__init__.py:23) (14 samples, 0.22%)</title><rect x="8.7926%" y="660" width="0.2167%" height="15" fill="rgb(249,103,42)" fg:x="568" fg:w="14"/><text x="9.0426%" y="670.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;:1415) (14 samples, 0.22%)</title><rect x="8.7926%" y="676" width="0.2167%" height="15" fill="rgb(246,81,33)" fg:x="568" fg:w="14"/><text x="9.0426%" y="686.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:488) (14 samples, 0.22%)</title><rect x="8.7926%" y="692" width="0.2167%" height="15" fill="rgb(252,33,42)" fg:x="568" fg:w="14"/><text x="9.0426%" y="702.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:1360) (14 samples, 0.22%)</title><rect x="8.7926%" y="708" width="0.2167%" height="15" fill="rgb(209,212,41)" fg:x="568" fg:w="14"/><text x="9.0426%" y="718.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:1331) (14 samples, 0.22%)</title><rect x="8.7926%" y="724" width="0.2167%" height="15" fill="rgb(207,154,6)" fg:x="568" fg:w="14"/><text x="9.0426%" y="734.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:935) (14 samples, 0.22%)</title><rect x="8.7926%" y="740" width="0.2167%" height="15" fill="rgb(223,64,47)" fg:x="568" fg:w="14"/><text x="9.0426%" y="750.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:995) (14 samples, 0.22%)</title><rect x="8.7926%" y="756" width="0.2167%" height="15" fill="rgb(211,161,38)" fg:x="568" fg:w="14"/><text x="9.0426%" y="766.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:488) (14 samples, 0.22%)</title><rect x="8.7926%" y="772" width="0.2167%" height="15" fill="rgb(219,138,40)" fg:x="568" fg:w="14"/><text x="9.0426%" y="782.50"></text></g><g><title>&lt;module&gt; (numpy/_core/multiarray.py:10) (14 samples, 0.22%)</title><rect x="8.7926%" y="788" width="0.2167%" height="15" fill="rgb(241,228,46)" fg:x="568" fg:w="14"/><text x="9.0426%" y="798.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;:1415) (14 samples, 0.22%)</title><rect x="8.7926%" y="804" width="0.2167%" height="15" fill="rgb(223,209,38)" fg:x="568" fg:w="14"/><text x="9.0426%" y="814.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:488) (14 samples, 0.22%)</title><rect x="8.7926%" y="820" width="0.2167%" height="15" fill="rgb(236,164,45)" fg:x="568" fg:w="14"/><text x="9.0426%" y="830.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:1360) (14 samples, 0.22%)</title><rect x="8.7926%" y="836" width="0.2167%" height="15" fill="rgb(231,15,5)" fg:x="568" fg:w="14"/><text x="9.0426%" y="846.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:1331) (14 samples, 0.22%)</title><rect x="8.7926%" y="852" width="0.2167%" height="15" fill="rgb(252,35,15)" fg:x="568" fg:w="14"/><text x="9.0426%" y="862.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:935) (14 samples, 0.22%)</title><rect x="8.7926%" y="868" width="0.2167%" height="15" fill="rgb(248,181,18)" fg:x="568" fg:w="14"/><text x="9.0426%" y="878.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:995) (14 samples, 0.22%)</title><rect x="8.7926%" y="884" width="0.2167%" height="15" fill="rgb(233,39,42)" fg:x="568" fg:w="14"/><text x="9.0426%" y="894.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:488) (14 samples, 0.22%)</title><rect x="8.7926%" y="900" width="0.2167%" height="15" fill="rgb(238,110,33)" fg:x="568" fg:w="14"/><text x="9.0426%" y="910.50"></text></g><g><title>&lt;module&gt; (numpy/_core/overrides.py:7) (14 samples, 0.22%)</title><rect x="8.7926%" y="916" width="0.2167%" height="15" fill="rgb(233,195,10)" fg:x="568" fg:w="14"/><text x="9.0426%" y="926.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:1360) (14 samples, 0.22%)</title><rect x="8.7926%" y="932" width="0.2167%" height="15" fill="rgb(254,105,3)" fg:x="568" fg:w="14"/><text x="9.0426%" y="942.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:1331) (14 samples, 0.22%)</title><rect x="8.7926%" y="948" width="0.2167%" height="15" fill="rgb(221,225,9)" fg:x="568" fg:w="14"/><text x="9.0426%" y="958.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:921) (14 samples, 0.22%)</title><rect x="8.7926%" y="964" width="0.2167%" height="15" fill="rgb(224,227,45)" fg:x="568" fg:w="14"/><text x="9.0426%" y="974.50"></text></g><g><title>module_from_spec (&lt;frozen importlib._bootstrap&gt;:813) (14 samples, 0.22%)</title><rect x="8.7926%" y="980" width="0.2167%" height="15" fill="rgb(229,198,43)" fg:x="568" fg:w="14"/><text x="9.0426%" y="990.50"></text></g><g><title>create_module (&lt;frozen importlib._bootstrap_external&gt;:1289) (14 samples, 0.22%)</title><rect x="8.7926%" y="996" width="0.2167%" height="15" fill="rgb(206,209,35)" fg:x="568" fg:w="14"/><text x="9.0426%" y="1006.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:488) (14 samples, 0.22%)</title><rect x="8.7926%" y="1012" width="0.2167%" height="15" fill="rgb(245,195,53)" fg:x="568" fg:w="14"/><text x="9.0426%" y="1022.50"></text></g><g><title>&lt;module&gt; (numpy/__init__.py:114) (18 samples, 0.28%)</title><rect x="8.7926%" y="420" width="0.2786%" height="15" fill="rgb(240,92,26)" fg:x="568" fg:w="18"/><text x="9.0426%" y="430.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:1360) (18 samples, 0.28%)</title><rect x="8.7926%" y="436" width="0.2786%" height="15" fill="rgb(207,40,23)" fg:x="568" fg:w="18"/><text x="9.0426%" y="446.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:1331) (18 samples, 0.28%)</title><rect x="8.7926%" y="452" width="0.2786%" height="15" fill="rgb(223,111,35)" fg:x="568" fg:w="18"/><text x="9.0426%" y="462.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:935) (18 samples, 0.28%)</title><rect x="8.7926%" y="468" width="0.2786%" height="15" fill="rgb(229,147,28)" fg:x="568" fg:w="18"/><text x="9.0426%" y="478.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:995) (18 samples, 0.28%)</title><rect x="8.7926%" y="484" width="0.2786%" height="15" fill="rgb(211,29,28)" fg:x="568" fg:w="18"/><text x="9.0426%" y="494.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:488) (18 samples, 0.28%)</title><rect x="8.7926%" y="500" width="0.2786%" height="15" fill="rgb(228,72,33)" fg:x="568" fg:w="18"/><text x="9.0426%" y="510.50"></text></g><g><title>&lt;module&gt; (numpy/__config__.py:4) (18 samples, 0.28%)</title><rect x="8.7926%" y="516" width="0.2786%" height="15" fill="rgb(205,214,31)" fg:x="568" fg:w="18"/><text x="9.0426%" y="526.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:1360) (18 samples, 0.28%)</title><rect x="8.7926%" y="532" width="0.2786%" height="15" fill="rgb(224,111,15)" fg:x="568" fg:w="18"/><text x="9.0426%" y="542.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:1310) (18 samples, 0.28%)</title><rect x="8.7926%" y="548" width="0.2786%" height="15" fill="rgb(253,21,26)" fg:x="568" fg:w="18"/><text x="9.0426%" y="558.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:488) (18 samples, 0.28%)</title><rect x="8.7926%" y="564" width="0.2786%" height="15" fill="rgb(245,139,43)" fg:x="568" fg:w="18"/><text x="9.0426%" y="574.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:1360) (18 samples, 0.28%)</title><rect x="8.7926%" y="580" width="0.2786%" height="15" fill="rgb(252,170,7)" fg:x="568" fg:w="18"/><text x="9.0426%" y="590.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:1331) (18 samples, 0.28%)</title><rect x="8.7926%" y="596" width="0.2786%" height="15" fill="rgb(231,118,14)" fg:x="568" fg:w="18"/><text x="9.0426%" y="606.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:935) (18 samples, 0.28%)</title><rect x="8.7926%" y="612" width="0.2786%" height="15" fill="rgb(238,83,0)" fg:x="568" fg:w="18"/><text x="9.0426%" y="622.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:995) (18 samples, 0.28%)</title><rect x="8.7926%" y="628" width="0.2786%" height="15" fill="rgb(221,39,39)" fg:x="568" fg:w="18"/><text x="9.0426%" y="638.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:488) (18 samples, 0.28%)</title><rect x="8.7926%" y="644" width="0.2786%" height="15" fill="rgb(222,119,46)" fg:x="568" fg:w="18"/><text x="9.0426%" y="654.50"></text></g><g><title>THPVariable_initModule (libtorch_python.so) (22 samples, 0.34%)</title><rect x="8.7926%" y="308" width="0.3406%" height="15" fill="rgb(222,165,49)" fg:x="568" fg:w="22"/><text x="9.0426%" y="318.50"></text></g><g><title>torch::utils::validate_numpy_for_dlpack_deleter_bug (libtorch_python.so) (22 samples, 0.34%)</title><rect x="8.7926%" y="324" width="0.3406%" height="15" fill="rgb(219,113,52)" fg:x="568" fg:w="22"/><text x="9.0426%" y="334.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:1360) (22 samples, 0.34%)</title><rect x="8.7926%" y="340" width="0.3406%" height="15" fill="rgb(214,7,15)" fg:x="568" fg:w="22"/><text x="9.0426%" y="350.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:1331) (22 samples, 0.34%)</title><rect x="8.7926%" y="356" width="0.3406%" height="15" fill="rgb(235,32,4)" fg:x="568" fg:w="22"/><text x="9.0426%" y="366.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:935) (22 samples, 0.34%)</title><rect x="8.7926%" y="372" width="0.3406%" height="15" fill="rgb(238,90,54)" fg:x="568" fg:w="22"/><text x="9.0426%" y="382.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:995) (22 samples, 0.34%)</title><rect x="8.7926%" y="388" width="0.3406%" height="15" fill="rgb(213,208,19)" fg:x="568" fg:w="22"/><text x="9.0426%" y="398.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:488) (22 samples, 0.34%)</title><rect x="8.7926%" y="404" width="0.3406%" height="15" fill="rgb(233,156,4)" fg:x="568" fg:w="22"/><text x="9.0426%" y="414.50"></text></g><g><title>&lt;module&gt; (torch/__init__.py:409) (209 samples, 3.24%)</title><rect x="5.9443%" y="180" width="3.2353%" height="15" fill="rgb(207,194,5)" fg:x="384" fg:w="209"/><text x="6.1943%" y="190.50">&lt;mo..</text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:1360) (209 samples, 3.24%)</title><rect x="5.9443%" y="196" width="3.2353%" height="15" fill="rgb(206,111,30)" fg:x="384" fg:w="209"/><text x="6.1943%" y="206.50">_fi..</text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:1331) (206 samples, 3.19%)</title><rect x="5.9907%" y="212" width="3.1889%" height="15" fill="rgb(243,70,54)" fg:x="387" fg:w="206"/><text x="6.2407%" y="222.50">_fi..</text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:921) (206 samples, 3.19%)</title><rect x="5.9907%" y="228" width="3.1889%" height="15" fill="rgb(242,28,8)" fg:x="387" fg:w="206"/><text x="6.2407%" y="238.50">_lo..</text></g><g><title>module_from_spec (&lt;frozen importlib._bootstrap&gt;:813) (206 samples, 3.19%)</title><rect x="5.9907%" y="244" width="3.1889%" height="15" fill="rgb(219,106,18)" fg:x="387" fg:w="206"/><text x="6.2407%" y="254.50">mod..</text></g><g><title>create_module (&lt;frozen importlib._bootstrap_external&gt;:1289) (206 samples, 3.19%)</title><rect x="5.9907%" y="260" width="3.1889%" height="15" fill="rgb(244,222,10)" fg:x="387" fg:w="206"/><text x="6.2407%" y="270.50">cre..</text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:488) (206 samples, 3.19%)</title><rect x="5.9907%" y="276" width="3.1889%" height="15" fill="rgb(236,179,52)" fg:x="387" fg:w="206"/><text x="6.2407%" y="286.50">_ca..</text></g><g><title>initModule (libtorch_python.so) (25 samples, 0.39%)</title><rect x="8.7926%" y="292" width="0.3870%" height="15" fill="rgb(213,23,39)" fg:x="568" fg:w="25"/><text x="9.0426%" y="302.50"></text></g><g><title>&lt;module&gt; (torch/__init__.py:48) (8 samples, 0.12%)</title><rect x="9.1796%" y="180" width="0.1238%" height="15" fill="rgb(238,48,10)" fg:x="593" fg:w="8"/><text x="9.4296%" y="190.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:1360) (8 samples, 0.12%)</title><rect x="9.1796%" y="196" width="0.1238%" height="15" fill="rgb(251,196,23)" fg:x="593" fg:w="8"/><text x="9.4296%" y="206.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:1331) (8 samples, 0.12%)</title><rect x="9.1796%" y="212" width="0.1238%" height="15" fill="rgb(250,152,24)" fg:x="593" fg:w="8"/><text x="9.4296%" y="222.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:935) (8 samples, 0.12%)</title><rect x="9.1796%" y="228" width="0.1238%" height="15" fill="rgb(209,150,17)" fg:x="593" fg:w="8"/><text x="9.4296%" y="238.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:995) (8 samples, 0.12%)</title><rect x="9.1796%" y="244" width="0.1238%" height="15" fill="rgb(234,202,34)" fg:x="593" fg:w="8"/><text x="9.4296%" y="254.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:488) (8 samples, 0.12%)</title><rect x="9.1796%" y="260" width="0.1238%" height="15" fill="rgb(253,148,53)" fg:x="593" fg:w="8"/><text x="9.4296%" y="270.50"></text></g><g><title>&lt;module&gt; (torch/_utils.py:5) (8 samples, 0.12%)</title><rect x="9.1796%" y="276" width="0.1238%" height="15" fill="rgb(218,129,16)" fg:x="593" fg:w="8"/><text x="9.4296%" y="286.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:1360) (8 samples, 0.12%)</title><rect x="9.1796%" y="292" width="0.1238%" height="15" fill="rgb(216,85,19)" fg:x="593" fg:w="8"/><text x="9.4296%" y="302.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:1331) (8 samples, 0.12%)</title><rect x="9.1796%" y="308" width="0.1238%" height="15" fill="rgb(235,228,7)" fg:x="593" fg:w="8"/><text x="9.4296%" y="318.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:935) (7 samples, 0.11%)</title><rect x="9.1950%" y="324" width="0.1084%" height="15" fill="rgb(245,175,0)" fg:x="594" fg:w="7"/><text x="9.4450%" y="334.50"></text></g><g><title>&lt;module&gt; (pytorch-sample.py:1) (524 samples, 8.11%)</title><rect x="1.3313%" y="84" width="8.1115%" height="15" fill="rgb(208,168,36)" fg:x="86" fg:w="524"/><text x="1.5813%" y="94.50">&lt;module&gt; (p..</text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:1360) (524 samples, 8.11%)</title><rect x="1.3313%" y="100" width="8.1115%" height="15" fill="rgb(246,171,24)" fg:x="86" fg:w="524"/><text x="1.5813%" y="110.50">_find_and_l..</text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:1331) (524 samples, 8.11%)</title><rect x="1.3313%" y="116" width="8.1115%" height="15" fill="rgb(215,142,24)" fg:x="86" fg:w="524"/><text x="1.5813%" y="126.50">_find_and_l..</text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:935) (524 samples, 8.11%)</title><rect x="1.3313%" y="132" width="8.1115%" height="15" fill="rgb(250,187,7)" fg:x="86" fg:w="524"/><text x="1.5813%" y="142.50">_load_unloc..</text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:995) (524 samples, 8.11%)</title><rect x="1.3313%" y="148" width="8.1115%" height="15" fill="rgb(228,66,33)" fg:x="86" fg:w="524"/><text x="1.5813%" y="158.50">exec_module..</text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:488) (524 samples, 8.11%)</title><rect x="1.3313%" y="164" width="8.1115%" height="15" fill="rgb(234,215,21)" fg:x="86" fg:w="524"/><text x="1.5813%" y="174.50">_call_with_..</text></g><g><title>dnnl::primitive::execute (libtorch_cpu.so) (89 samples, 1.38%)</title><rect x="9.5356%" y="596" width="1.3777%" height="15" fill="rgb(222,191,20)" fg:x="616" fg:w="89"/><text x="9.7856%" y="606.50"></text></g><g><title>dnnl_primitive_execute (libtorch_cpu.so) (89 samples, 1.38%)</title><rect x="9.5356%" y="612" width="1.3777%" height="15" fill="rgb(245,79,54)" fg:x="616" fg:w="89"/><text x="9.7856%" y="622.50"></text></g><g><title>dnnl::impl::primitive_execute (libtorch_cpu.so) (89 samples, 1.38%)</title><rect x="9.5356%" y="628" width="1.3777%" height="15" fill="rgb(240,10,37)" fg:x="616" fg:w="89"/><text x="9.7856%" y="638.50"></text></g><g><title>dnnl_primitive::execute (libtorch_cpu.so) (89 samples, 1.38%)</title><rect x="9.5356%" y="644" width="1.3777%" height="15" fill="rgb(214,192,32)" fg:x="616" fg:w="89"/><text x="9.7856%" y="654.50"></text></g><g><title>dnnl::impl::cpu::x64::jit_avx2_convolution_fwd_t::execute (libtorch_cpu.so) (89 samples, 1.38%)</title><rect x="9.5356%" y="660" width="1.3777%" height="15" fill="rgb(209,36,54)" fg:x="616" fg:w="89"/><text x="9.7856%" y="670.50"></text></g><g><title>dnnl::impl::cpu::x64::jit_avx2_convolution_fwd_t::execute_forward (libtorch_cpu.so) (89 samples, 1.38%)</title><rect x="9.5356%" y="676" width="1.3777%" height="15" fill="rgb(220,10,11)" fg:x="616" fg:w="89"/><text x="9.7856%" y="686.50"></text></g><g><title>GOMP_parallel (libgomp-c9fef706.so.1) (85 samples, 1.32%)</title><rect x="9.5975%" y="692" width="1.3158%" height="15" fill="rgb(221,106,17)" fg:x="620" fg:w="85"/><text x="9.8475%" y="702.50"></text></g><g><title>dnnl::impl::parallel (libtorch_cpu.so) (84 samples, 1.30%)</title><rect x="9.6130%" y="708" width="1.3003%" height="15" fill="rgb(251,142,44)" fg:x="621" fg:w="84"/><text x="9.8630%" y="718.50"></text></g><g><title>dnnl::impl::cpu::x64::jit_avx2_convolution_fwd_t::execute_forward(dnnl::impl::exec_ctx_t const&amp;) const::{lambda(int, int)#1}::operator() const (libtorch_cpu.so) (84 samples, 1.30%)</title><rect x="9.6130%" y="724" width="1.3003%" height="15" fill="rgb(238,13,15)" fg:x="621" fg:w="84"/><text x="9.8630%" y="734.50"></text></g><g><title>at::native::_mkldnn_convolution_out (libtorch_cpu.so) (96 samples, 1.49%)</title><rect x="9.5356%" y="564" width="1.4861%" height="15" fill="rgb(208,107,27)" fg:x="616" fg:w="96"/><text x="9.7856%" y="574.50"></text></g><g><title>ideep::convolution_forward::compute_dispatch&lt;false, true, true&gt; (libtorch_cpu.so) (96 samples, 1.49%)</title><rect x="9.5356%" y="580" width="1.4861%" height="15" fill="rgb(205,136,37)" fg:x="616" fg:w="96"/><text x="9.7856%" y="590.50"></text></g><g><title>0x77d1837c000d (?) (7 samples, 0.11%)</title><rect x="11.1146%" y="724" width="0.1084%" height="15" fill="rgb(250,205,27)" fg:x="718" fg:w="7"/><text x="11.3646%" y="734.50"></text></g><g><title>_forward_impl (torchvision/models/resnet.py:268) (150 samples, 2.32%)</title><rect x="9.5046%" y="164" width="2.3220%" height="15" fill="rgb(210,80,43)" fg:x="614" fg:w="150"/><text x="9.7546%" y="174.50">_..</text></g><g><title>_wrapped_call_impl (torch/nn/modules/module.py:1751) (150 samples, 2.32%)</title><rect x="9.5046%" y="180" width="2.3220%" height="15" fill="rgb(247,160,36)" fg:x="614" fg:w="150"/><text x="9.7546%" y="190.50">_..</text></g><g><title>_call_impl (torch/nn/modules/module.py:1762) (150 samples, 2.32%)</title><rect x="9.5046%" y="196" width="2.3220%" height="15" fill="rgb(234,13,49)" fg:x="614" fg:w="150"/><text x="9.7546%" y="206.50">_..</text></g><g><title>forward (torch/nn/modules/conv.py:554) (150 samples, 2.32%)</title><rect x="9.5046%" y="212" width="2.3220%" height="15" fill="rgb(234,122,0)" fg:x="614" fg:w="150"/><text x="9.7546%" y="222.50">f..</text></g><g><title>_conv_forward (torch/nn/modules/conv.py:550) (150 samples, 2.32%)</title><rect x="9.5046%" y="228" width="2.3220%" height="15" fill="rgb(207,146,38)" fg:x="614" fg:w="150"/><text x="9.7546%" y="238.50">_..</text></g><g><title>torch::autograd::THPVariable_conv2d (libtorch_python.so) (150 samples, 2.32%)</title><rect x="9.5046%" y="244" width="2.3220%" height="15" fill="rgb(207,177,25)" fg:x="614" fg:w="150"/><text x="9.7546%" y="254.50">t..</text></g><g><title>at::_ops::conv2d::call (libtorch_cpu.so) (150 samples, 2.32%)</title><rect x="9.5046%" y="260" width="2.3220%" height="15" fill="rgb(211,178,42)" fg:x="614" fg:w="150"/><text x="9.7546%" y="270.50">a..</text></g><g><title>c10::impl::wrap_kernel_functor_unboxed_&lt;c10::impl::detail::WrapFunctionIntoFunctor_&lt;c10::CompileTimeFunctionPointer&lt;at::Tensor(at::Tensor const&amp;, at::Tensor const&amp;, std::optional&lt;at::Tensor&gt; const&amp;, c10::ArrayRef&lt;c10::SymInt&gt;, c10::ArrayRef&lt;c10::SymInt&gt;, c10::ArrayRef&lt;c10::SymInt&gt;, c10::SymInt), &amp;at::(anonymous namespace)::(anonymous namespace)::wrapper_CompositeImplicitAutograd__conv2d(at::Tensor const&amp;, at::Tensor const&amp;, std::optional&lt;at::Tensor&gt; const&amp;, c10::ArrayRef&lt;c10::SymInt&gt;, c10::ArrayRef&lt;c10::SymInt&gt;, c10::ArrayRef&lt;c10::SymInt&gt;, c10::SymInt)&gt;, at::Tensor, c10::guts::typelist::typelist&lt;at::Tensor const&amp;, at::Tensor const&amp;, std::optional&lt;at::Tensor&gt; const&amp;, c10::ArrayRef&lt;c10::SymInt&gt;, c10::ArrayRef&lt;c10::SymInt&gt;, c10::ArrayRef&lt;c10::SymInt&gt;, c10::SymInt&gt; &gt;, at::Tensor(at::Tensor const&amp;, at::Tensor const&amp;, std::optional&lt;at::Tensor&gt; const&amp;, c10::ArrayRef&lt;c10::SymInt&gt;, c10::ArrayRef&lt;c10::SymInt&gt;, c10::ArrayRef&lt;c10::SymInt&gt;, c10::SymInt)&gt;::call (libtorch_cpu.so) (150 samples, 2.32%)</title><rect x="9.5046%" y="276" width="2.3220%" height="15" fill="rgb(230,69,54)" fg:x="614" fg:w="150"/><text x="9.7546%" y="286.50">c..</text></g><g><title>at::native::conv2d_symint (libtorch_cpu.so) (150 samples, 2.32%)</title><rect x="9.5046%" y="292" width="2.3220%" height="15" fill="rgb(214,135,41)" fg:x="614" fg:w="150"/><text x="9.7546%" y="302.50">a..</text></g><g><title>at::_ops::convolution::call (libtorch_cpu.so) (150 samples, 2.32%)</title><rect x="9.5046%" y="308" width="2.3220%" height="15" fill="rgb(237,67,25)" fg:x="614" fg:w="150"/><text x="9.7546%" y="318.50">a..</text></g><g><title>c10::impl::wrap_kernel_functor_unboxed_&lt;c10::impl::detail::WrapFunctionIntoFunctor_&lt;c10::CompileTimeFunctionPointer&lt;at::Tensor(c10::DispatchKeySet, at::Tensor const&amp;, at::Tensor const&amp;, std::optional&lt;at::Tensor&gt; const&amp;, c10::ArrayRef&lt;c10::SymInt&gt;, c10::ArrayRef&lt;c10::SymInt&gt;, c10::ArrayRef&lt;c10::SymInt&gt;, bool, c10::ArrayRef&lt;c10::SymInt&gt;, c10::SymInt), &amp;torch::autograd::VariableType::(anonymous namespace)::convolution(c10::DispatchKeySet, at::Tensor const&amp;, at::Tensor const&amp;, std::optional&lt;at::Tensor&gt; const&amp;, c10::ArrayRef&lt;c10::SymInt&gt;, c10::ArrayRef&lt;c10::SymInt&gt;, c10::ArrayRef&lt;c10::SymInt&gt;, bool, c10::ArrayRef&lt;c10::SymInt&gt;, c10::SymInt)&gt;, at::Tensor, c10::guts::typelist::typelist&lt;c10::DispatchKeySet, at::Tensor const&amp;, at::Tensor const&amp;, std::optional&lt;at::Tensor&gt; const&amp;, c10::ArrayRef&lt;c10::SymInt&gt;, c10::ArrayRef&lt;c10::SymInt&gt;, c10::ArrayRef&lt;c10::SymInt&gt;, bool, c10::ArrayRef&lt;c10::SymInt&gt;, c10::SymInt&gt; &gt;, at::Tensor(c10::DispatchKeySet, at::Tensor const&amp;, at::Tensor const&amp;, std::optional&lt;at::Tensor&gt; const&amp;, c10::ArrayRef&lt;c10::SymInt&gt;, c10::ArrayRef&lt;c10::SymInt&gt;, c10::ArrayRef&lt;c10::SymInt&gt;, bool, c10::ArrayRef&lt;c10::SymInt&gt;, c10::SymInt)&gt;::call (libtorch_cpu.so) (150 samples, 2.32%)</title><rect x="9.5046%" y="324" width="2.3220%" height="15" fill="rgb(222,189,50)" fg:x="614" fg:w="150"/><text x="9.7546%" y="334.50">c..</text></g><g><title>torch::autograd::VariableType::(anonymous namespace)::convolution (libtorch_cpu.so) (150 samples, 2.32%)</title><rect x="9.5046%" y="340" width="2.3220%" height="15" fill="rgb(245,148,34)" fg:x="614" fg:w="150"/><text x="9.7546%" y="350.50">t..</text></g><g><title>at::_ops::convolution::redispatch (libtorch_cpu.so) (150 samples, 2.32%)</title><rect x="9.5046%" y="356" width="2.3220%" height="15" fill="rgb(222,29,6)" fg:x="614" fg:w="150"/><text x="9.7546%" y="366.50">a..</text></g><g><title>c10::impl::wrap_kernel_functor_unboxed_&lt;c10::impl::detail::WrapFunctionIntoFunctor_&lt;c10::CompileTimeFunctionPointer&lt;at::Tensor(at::Tensor const&amp;, at::Tensor const&amp;, std::optional&lt;at::Tensor&gt; const&amp;, c10::ArrayRef&lt;c10::SymInt&gt;, c10::ArrayRef&lt;c10::SymInt&gt;, c10::ArrayRef&lt;c10::SymInt&gt;, bool, c10::ArrayRef&lt;c10::SymInt&gt;, c10::SymInt), &amp;at::(anonymous namespace)::(anonymous namespace)::wrapper_CompositeExplicitAutograd__convolution(at::Tensor const&amp;, at::Tensor const&amp;, std::optional&lt;at::Tensor&gt; const&amp;, c10::ArrayRef&lt;c10::SymInt&gt;, c10::ArrayRef&lt;c10::SymInt&gt;, c10::ArrayRef&lt;c10::SymInt&gt;, bool, c10::ArrayRef&lt;c10::SymInt&gt;, c10::SymInt)&gt;, at::Tensor, c10::guts::typelist::typelist&lt;at::Tensor const&amp;, at::Tensor const&amp;, std::optional&lt;at::Tensor&gt; const&amp;, c10::ArrayRef&lt;c10::SymInt&gt;, c10::ArrayRef&lt;c10::SymInt&gt;, c10::ArrayRef&lt;c10::SymInt&gt;, bool, c10::ArrayRef&lt;c10::SymInt&gt;, c10::SymInt&gt; &gt;, at::Tensor(at::Tensor const&amp;, at::Tensor const&amp;, std::optional&lt;at::Tensor&gt; const&amp;, c10::ArrayRef&lt;c10::SymInt&gt;, c10::ArrayRef&lt;c10::SymInt&gt;, c10::ArrayRef&lt;c10::SymInt&gt;, bool, c10::ArrayRef&lt;c10::SymInt&gt;, c10::SymInt)&gt;::call (libtorch_cpu.so) (150 samples, 2.32%)</title><rect x="9.5046%" y="372" width="2.3220%" height="15" fill="rgb(221,189,43)" fg:x="614" fg:w="150"/><text x="9.7546%" y="382.50">c..</text></g><g><title>at::(anonymous namespace)::(anonymous namespace)::wrapper_CompositeExplicitAutograd__convolution (libtorch_cpu.so) (150 samples, 2.32%)</title><rect x="9.5046%" y="388" width="2.3220%" height="15" fill="rgb(207,36,27)" fg:x="614" fg:w="150"/><text x="9.7546%" y="398.50">a..</text></g><g><title>at::native::convolution (libtorch_cpu.so) (150 samples, 2.32%)</title><rect x="9.5046%" y="404" width="2.3220%" height="15" fill="rgb(217,90,24)" fg:x="614" fg:w="150"/><text x="9.7546%" y="414.50">a..</text></g><g><title>at::_ops::_convolution::call (libtorch_cpu.so) (150 samples, 2.32%)</title><rect x="9.5046%" y="420" width="2.3220%" height="15" fill="rgb(224,66,35)" fg:x="614" fg:w="150"/><text x="9.7546%" y="430.50">a..</text></g><g><title>c10::impl::wrap_kernel_functor_unboxed_&lt;c10::impl::detail::WrapFunctionIntoFunctor_&lt;c10::CompileTimeFunctionPointer&lt;at::Tensor(at::Tensor const&amp;, at::Tensor const&amp;, std::optional&lt;at::Tensor&gt; const&amp;, c10::ArrayRef&lt;c10::SymInt&gt;, c10::ArrayRef&lt;c10::SymInt&gt;, c10::ArrayRef&lt;c10::SymInt&gt;, bool, c10::ArrayRef&lt;c10::SymInt&gt;, c10::SymInt, bool, bool, bool, bool), &amp;at::(anonymous namespace)::(anonymous namespace)::wrapper_CompositeExplicitAutograd___convolution(at::Tensor const&amp;, at::Tensor const&amp;, std::optional&lt;at::Tensor&gt; const&amp;, c10::ArrayRef&lt;c10::SymInt&gt;, c10::ArrayRef&lt;c10::SymInt&gt;, c10::ArrayRef&lt;c10::SymInt&gt;, bool, c10::ArrayRef&lt;c10::SymInt&gt;, c10::SymInt, bool, bool, bool, bool)&gt;, at::Tensor, c10::guts::typelist::typelist&lt;at::Tensor const&amp;, at::Tensor const&amp;, std::optional&lt;at::Tensor&gt; const&amp;, c10::ArrayRef&lt;c10::SymInt&gt;, c10::ArrayRef&lt;c10::SymInt&gt;, c10::ArrayRef&lt;c10::SymInt&gt;, bool, c10::ArrayRef&lt;c10::SymInt&gt;, c10::SymInt, bool, bool, bool, bool&gt; &gt;, at::Tensor(at::Tensor const&amp;, at::Tensor const&amp;, std::optional&lt;at::Tensor&gt; const&amp;, c10::ArrayRef&lt;c10::SymInt&gt;, c10::ArrayRef&lt;c10::SymInt&gt;, c10::ArrayRef&lt;c10::SymInt&gt;, bool, c10::ArrayRef&lt;c10::SymInt&gt;, c10::SymInt, bool, bool, bool, bool)&gt;::call (libtorch_cpu.so) (150 samples, 2.32%)</title><rect x="9.5046%" y="436" width="2.3220%" height="15" fill="rgb(221,13,50)" fg:x="614" fg:w="150"/><text x="9.7546%" y="446.50">c..</text></g><g><title>at::(anonymous namespace)::(anonymous namespace)::wrapper_CompositeExplicitAutograd___convolution (libtorch_cpu.so) (150 samples, 2.32%)</title><rect x="9.5046%" y="452" width="2.3220%" height="15" fill="rgb(236,68,49)" fg:x="614" fg:w="150"/><text x="9.7546%" y="462.50">a..</text></g><g><title>at::native::_convolution (libtorch_cpu.so) (150 samples, 2.32%)</title><rect x="9.5046%" y="468" width="2.3220%" height="15" fill="rgb(229,146,28)" fg:x="614" fg:w="150"/><text x="9.7546%" y="478.50">a..</text></g><g><title>at::_ops::mkldnn_convolution::call (libtorch_cpu.so) (150 samples, 2.32%)</title><rect x="9.5046%" y="484" width="2.3220%" height="15" fill="rgb(225,31,38)" fg:x="614" fg:w="150"/><text x="9.7546%" y="494.50">a..</text></g><g><title>c10::impl::wrap_kernel_functor_unboxed_&lt;c10::impl::detail::WrapFunctionIntoFunctor_&lt;c10::CompileTimeFunctionPointer&lt;at::Tensor(at::Tensor const&amp;, at::Tensor const&amp;, std::optional&lt;at::Tensor&gt; const&amp;, c10::ArrayRef&lt;c10::SymInt&gt;, c10::ArrayRef&lt;c10::SymInt&gt;, c10::ArrayRef&lt;c10::SymInt&gt;, c10::SymInt), &amp;at::(anonymous namespace)::(anonymous namespace)::wrapper_CompositeExplicitAutograd__mkldnn_convolution(at::Tensor const&amp;, at::Tensor const&amp;, std::optional&lt;at::Tensor&gt; const&amp;, c10::ArrayRef&lt;c10::SymInt&gt;, c10::ArrayRef&lt;c10::SymInt&gt;, c10::ArrayRef&lt;c10::SymInt&gt;, c10::SymInt)&gt;, at::Tensor, c10::guts::typelist::typelist&lt;at::Tensor const&amp;, at::Tensor const&amp;, std::optional&lt;at::Tensor&gt; const&amp;, c10::ArrayRef&lt;c10::SymInt&gt;, c10::ArrayRef&lt;c10::SymInt&gt;, c10::ArrayRef&lt;c10::SymInt&gt;, c10::SymInt&gt; &gt;, at::Tensor(at::Tensor const&amp;, at::Tensor const&amp;, std::optional&lt;at::Tensor&gt; const&amp;, c10::ArrayRef&lt;c10::SymInt&gt;, c10::ArrayRef&lt;c10::SymInt&gt;, c10::ArrayRef&lt;c10::SymInt&gt;, c10::SymInt)&gt;::call (libtorch_cpu.so) (150 samples, 2.32%)</title><rect x="9.5046%" y="500" width="2.3220%" height="15" fill="rgb(250,208,3)" fg:x="614" fg:w="150"/><text x="9.7546%" y="510.50">c..</text></g><g><title>at::(anonymous namespace)::(anonymous namespace)::wrapper_CompositeExplicitAutograd__mkldnn_convolution (libtorch_cpu.so) (150 samples, 2.32%)</title><rect x="9.5046%" y="516" width="2.3220%" height="15" fill="rgb(246,54,23)" fg:x="614" fg:w="150"/><text x="9.7546%" y="526.50">a..</text></g><g><title>at::native::mkldnn_convolution (libtorch_cpu.so) (150 samples, 2.32%)</title><rect x="9.5046%" y="532" width="2.3220%" height="15" fill="rgb(243,76,11)" fg:x="614" fg:w="150"/><text x="9.7546%" y="542.50">a..</text></g><g><title>at::native::_mkldnn_convolution (libtorch_cpu.so) (150 samples, 2.32%)</title><rect x="9.5046%" y="548" width="2.3220%" height="15" fill="rgb(245,21,50)" fg:x="614" fg:w="150"/><text x="9.7546%" y="558.50">a..</text></g><g><title>at::native::mkldnn_to_dense (libtorch_cpu.so) (52 samples, 0.80%)</title><rect x="11.0217%" y="564" width="0.8050%" height="15" fill="rgb(228,9,43)" fg:x="712" fg:w="52"/><text x="11.2717%" y="574.50"></text></g><g><title>ideep::tensor::to_public (libtorch_cpu.so) (52 samples, 0.80%)</title><rect x="11.0217%" y="580" width="0.8050%" height="15" fill="rgb(208,100,47)" fg:x="712" fg:w="52"/><text x="11.2717%" y="590.50"></text></g><g><title>ideep::tensor::reorder_to (libtorch_cpu.so) (52 samples, 0.80%)</title><rect x="11.0217%" y="596" width="0.8050%" height="15" fill="rgb(232,26,8)" fg:x="712" fg:w="52"/><text x="11.2717%" y="606.50"></text></g><g><title>dnnl::primitive::execute (libtorch_cpu.so) (52 samples, 0.80%)</title><rect x="11.0217%" y="612" width="0.8050%" height="15" fill="rgb(216,166,38)" fg:x="712" fg:w="52"/><text x="11.2717%" y="622.50"></text></g><g><title>dnnl_primitive_execute (libtorch_cpu.so) (52 samples, 0.80%)</title><rect x="11.0217%" y="628" width="0.8050%" height="15" fill="rgb(251,202,51)" fg:x="712" fg:w="52"/><text x="11.2717%" y="638.50"></text></g><g><title>dnnl::impl::primitive_execute (libtorch_cpu.so) (52 samples, 0.80%)</title><rect x="11.0217%" y="644" width="0.8050%" height="15" fill="rgb(254,216,34)" fg:x="712" fg:w="52"/><text x="11.2717%" y="654.50"></text></g><g><title>dnnl_primitive::execute (libtorch_cpu.so) (52 samples, 0.80%)</title><rect x="11.0217%" y="660" width="0.8050%" height="15" fill="rgb(251,32,27)" fg:x="712" fg:w="52"/><text x="11.2717%" y="670.50"></text></g><g><title>dnnl::impl::cpu::x64::jit_blk_reorder_t::execute (libtorch_cpu.so) (52 samples, 0.80%)</title><rect x="11.0217%" y="676" width="0.8050%" height="15" fill="rgb(208,127,28)" fg:x="712" fg:w="52"/><text x="11.2717%" y="686.50"></text></g><g><title>GOMP_parallel (libgomp-c9fef706.so.1) (50 samples, 0.77%)</title><rect x="11.0526%" y="692" width="0.7740%" height="15" fill="rgb(224,137,22)" fg:x="714" fg:w="50"/><text x="11.3026%" y="702.50"></text></g><g><title>dnnl::impl::parallel (libtorch_cpu.so) (46 samples, 0.71%)</title><rect x="11.1146%" y="708" width="0.7121%" height="15" fill="rgb(254,70,32)" fg:x="718" fg:w="46"/><text x="11.3646%" y="718.50"></text></g><g><title>at::native::batch_norm_cpu_transform_input_template&lt;float, float&gt; (libtorch_cpu.so) (46 samples, 0.71%)</title><rect x="11.8421%" y="468" width="0.7121%" height="15" fill="rgb(229,75,37)" fg:x="765" fg:w="46"/><text x="12.0921%" y="478.50"></text></g><g><title>at::native::(anonymous namespace)::batch_norm_cpu_kernel (libtorch_cpu.so) (46 samples, 0.71%)</title><rect x="11.8421%" y="484" width="0.7121%" height="15" fill="rgb(252,64,23)" fg:x="765" fg:w="46"/><text x="12.0921%" y="494.50"></text></g><g><title>GOMP_parallel (libgomp-c9fef706.so.1) (46 samples, 0.71%)</title><rect x="11.8421%" y="500" width="0.7121%" height="15" fill="rgb(232,162,48)" fg:x="765" fg:w="46"/><text x="12.0921%" y="510.50"></text></g><g><title>at::internal::invoke_parallel&lt;at::parallel_for&lt;at::native::(anonymous namespace)::batch_norm_cpu_contiguous_impl&lt;float&gt;(at::Tensor&amp;, at::Tensor const&amp;, at::Tensor const&amp;, at::Tensor const&amp;, at::Tensor const&amp;, at::Tensor const&amp;, at::Tensor const&amp;, at::Tensor const&amp;, bool, double)::{lambda(long, long)#1}&gt;(long, long, long, at::native::(anonymous namespace)::batch_norm_cpu_contiguous_impl&lt;float&gt;(at::Tensor&amp;, at::Tensor const&amp;, at::Tensor const&amp;, at::Tensor const&amp;, at::Tensor const&amp;, at::Tensor const&amp;, at::Tensor const&amp;, at::Tensor const&amp;, bool, double)::{lambda(long, long)#1} const&amp;)::{lambda(long, long)#1}&gt; (libtorch_cpu.so) (43 samples, 0.67%)</title><rect x="11.8885%" y="516" width="0.6656%" height="15" fill="rgb(246,160,12)" fg:x="768" fg:w="43"/><text x="12.1385%" y="526.50"></text></g><g><title>_forward_impl (torchvision/models/resnet.py:269) (89 samples, 1.38%)</title><rect x="11.8266%" y="164" width="1.3777%" height="15" fill="rgb(247,166,0)" fg:x="764" fg:w="89"/><text x="12.0766%" y="174.50"></text></g><g><title>_wrapped_call_impl (torch/nn/modules/module.py:1751) (89 samples, 1.38%)</title><rect x="11.8266%" y="180" width="1.3777%" height="15" fill="rgb(249,219,21)" fg:x="764" fg:w="89"/><text x="12.0766%" y="190.50"></text></g><g><title>_call_impl (torch/nn/modules/module.py:1762) (88 samples, 1.36%)</title><rect x="11.8421%" y="196" width="1.3622%" height="15" fill="rgb(205,209,3)" fg:x="765" fg:w="88"/><text x="12.0921%" y="206.50"></text></g><g><title>forward (torch/nn/modules/batchnorm.py:193) (88 samples, 1.36%)</title><rect x="11.8421%" y="212" width="1.3622%" height="15" fill="rgb(243,44,1)" fg:x="765" fg:w="88"/><text x="12.0921%" y="222.50"></text></g><g><title>batch_norm (torch/nn/functional.py:2831) (88 samples, 1.36%)</title><rect x="11.8421%" y="228" width="1.3622%" height="15" fill="rgb(206,159,16)" fg:x="765" fg:w="88"/><text x="12.0921%" y="238.50"></text></g><g><title>torch::autograd::THPVariable_batch_norm (libtorch_python.so) (88 samples, 1.36%)</title><rect x="11.8421%" y="244" width="1.3622%" height="15" fill="rgb(244,77,30)" fg:x="765" fg:w="88"/><text x="12.0921%" y="254.50"></text></g><g><title>at::_ops::batch_norm::call (libtorch_cpu.so) (88 samples, 1.36%)</title><rect x="11.8421%" y="260" width="1.3622%" height="15" fill="rgb(218,69,12)" fg:x="765" fg:w="88"/><text x="12.0921%" y="270.50"></text></g><g><title>c10::impl::wrap_kernel_functor_unboxed_&lt;c10::impl::detail::WrapFunctionIntoFunctor_&lt;c10::CompileTimeFunctionPointer&lt;at::Tensor(at::Tensor const&amp;, std::optional&lt;at::Tensor&gt; const&amp;, std::optional&lt;at::Tensor&gt; const&amp;, std::optional&lt;at::Tensor&gt; const&amp;, std::optional&lt;at::Tensor&gt; const&amp;, bool, double, double, bool), &amp;at::(anonymous namespace)::(anonymous namespace)::wrapper_CompositeImplicitAutograd__batch_norm(at::Tensor const&amp;, std::optional&lt;at::Tensor&gt; const&amp;, std::optional&lt;at::Tensor&gt; const&amp;, std::optional&lt;at::Tensor&gt; const&amp;, std::optional&lt;at::Tensor&gt; const&amp;, bool, double, double, bool)&gt;, at::Tensor, c10::guts::typelist::typelist&lt;at::Tensor const&amp;, std::optional&lt;at::Tensor&gt; const&amp;, std::optional&lt;at::Tensor&gt; const&amp;, std::optional&lt;at::Tensor&gt; const&amp;, std::optional&lt;at::Tensor&gt; const&amp;, bool, double, double, bool&gt; &gt;, at::Tensor(at::Tensor const&amp;, std::optional&lt;at::Tensor&gt; const&amp;, std::optional&lt;at::Tensor&gt; const&amp;, std::optional&lt;at::Tensor&gt; const&amp;, std::optional&lt;at::Tensor&gt; const&amp;, bool, double, double, bool)&gt;::call (libtorch_cpu.so) (88 samples, 1.36%)</title><rect x="11.8421%" y="276" width="1.3622%" height="15" fill="rgb(212,87,7)" fg:x="765" fg:w="88"/><text x="12.0921%" y="286.50"></text></g><g><title>at::native::batch_norm (libtorch_cpu.so) (88 samples, 1.36%)</title><rect x="11.8421%" y="292" width="1.3622%" height="15" fill="rgb(245,114,25)" fg:x="765" fg:w="88"/><text x="12.0921%" y="302.50"></text></g><g><title>at::_ops::_batch_norm_impl_index::call (libtorch_cpu.so) (88 samples, 1.36%)</title><rect x="11.8421%" y="308" width="1.3622%" height="15" fill="rgb(210,61,42)" fg:x="765" fg:w="88"/><text x="12.0921%" y="318.50"></text></g><g><title>c10::impl::wrap_kernel_functor_unboxed_&lt;c10::impl::detail::WrapFunctionIntoFunctor_&lt;c10::CompileTimeFunctionPointer&lt;std::tuple&lt;at::Tensor, at::Tensor, at::Tensor, at::Tensor, long&gt; (at::Tensor const&amp;, std::optional&lt;at::Tensor&gt; const&amp;, std::optional&lt;at::Tensor&gt; const&amp;, std::optional&lt;at::Tensor&gt; const&amp;, std::optional&lt;at::Tensor&gt; const&amp;, bool, double, double, bool), &amp;at::(anonymous namespace)::(anonymous namespace)::wrapper_CompositeImplicitAutograd___batch_norm_impl_index(at::Tensor const&amp;, std::optional&lt;at::Tensor&gt; const&amp;, std::optional&lt;at::Tensor&gt; const&amp;, std::optional&lt;at::Tensor&gt; const&amp;, std::optional&lt;at::Tensor&gt; const&amp;, bool, double, double, bool)&gt;, std::tuple&lt;at::Tensor, at::Tensor, at::Tensor, at::Tensor, long&gt;, c10::guts::typelist::typelist&lt;at::Tensor const&amp;, std::optional&lt;at::Tensor&gt; const&amp;, std::optional&lt;at::Tensor&gt; const&amp;, std::optional&lt;at::Tensor&gt; const&amp;, std::optional&lt;at::Tensor&gt; const&amp;, bool, double, double, bool&gt; &gt;, std::tuple&lt;at::Tensor, at::Tensor, at::Tensor, at::Tensor, long&gt; (at::Tensor const&amp;, std::optional&lt;at::Tensor&gt; const&amp;, std::optional&lt;at::Tensor&gt; const&amp;, std::optional&lt;at::Tensor&gt; const&amp;, std::optional&lt;at::Tensor&gt; const&amp;, bool, double, double, bool)&gt;::call (libtorch_cpu.so) (88 samples, 1.36%)</title><rect x="11.8421%" y="324" width="1.3622%" height="15" fill="rgb(211,52,33)" fg:x="765" fg:w="88"/><text x="12.0921%" y="334.50"></text></g><g><title>at::native::_batch_norm_impl_index (libtorch_cpu.so) (88 samples, 1.36%)</title><rect x="11.8421%" y="340" width="1.3622%" height="15" fill="rgb(234,58,33)" fg:x="765" fg:w="88"/><text x="12.0921%" y="350.50"></text></g><g><title>at::_ops::native_batch_norm::call (libtorch_cpu.so) (88 samples, 1.36%)</title><rect x="11.8421%" y="356" width="1.3622%" height="15" fill="rgb(220,115,36)" fg:x="765" fg:w="88"/><text x="12.0921%" y="366.50"></text></g><g><title>c10::impl::wrap_kernel_functor_unboxed_&lt;c10::impl::detail::WrapFunctionIntoFunctor_&lt;c10::CompileTimeFunctionPointer&lt;std::tuple&lt;at::Tensor, at::Tensor, at::Tensor&gt; (c10::DispatchKeySet, at::Tensor const&amp;, std::optional&lt;at::Tensor&gt; const&amp;, std::optional&lt;at::Tensor&gt; const&amp;, std::optional&lt;at::Tensor&gt; const&amp;, std::optional&lt;at::Tensor&gt; const&amp;, bool, double, double), &amp;torch::autograd::VariableType::(anonymous namespace)::native_batch_norm(c10::DispatchKeySet, at::Tensor const&amp;, std::optional&lt;at::Tensor&gt; const&amp;, std::optional&lt;at::Tensor&gt; const&amp;, std::optional&lt;at::Tensor&gt; const&amp;, std::optional&lt;at::Tensor&gt; const&amp;, bool, double, double)&gt;, std::tuple&lt;at::Tensor, at::Tensor, at::Tensor&gt;, c10::guts::typelist::typelist&lt;c10::DispatchKeySet, at::Tensor const&amp;, std::optional&lt;at::Tensor&gt; const&amp;, std::optional&lt;at::Tensor&gt; const&amp;, std::optional&lt;at::Tensor&gt; const&amp;, std::optional&lt;at::Tensor&gt; const&amp;, bool, double, double&gt; &gt;, std::tuple&lt;at::Tensor, at::Tensor, at::Tensor&gt; (c10::DispatchKeySet, at::Tensor const&amp;, std::optional&lt;at::Tensor&gt; const&amp;, std::optional&lt;at::Tensor&gt; const&amp;, std::optional&lt;at::Tensor&gt; const&amp;, std::optional&lt;at::Tensor&gt; const&amp;, bool, double, double)&gt;::call (libtorch_cpu.so) (88 samples, 1.36%)</title><rect x="11.8421%" y="372" width="1.3622%" height="15" fill="rgb(243,153,54)" fg:x="765" fg:w="88"/><text x="12.0921%" y="382.50"></text></g><g><title>torch::autograd::VariableType::(anonymous namespace)::native_batch_norm (libtorch_cpu.so) (88 samples, 1.36%)</title><rect x="11.8421%" y="388" width="1.3622%" height="15" fill="rgb(251,47,18)" fg:x="765" fg:w="88"/><text x="12.0921%" y="398.50"></text></g><g><title>at::_ops::native_batch_norm::redispatch (libtorch_cpu.so) (88 samples, 1.36%)</title><rect x="11.8421%" y="404" width="1.3622%" height="15" fill="rgb(242,102,42)" fg:x="765" fg:w="88"/><text x="12.0921%" y="414.50"></text></g><g><title>c10::impl::wrap_kernel_functor_unboxed_&lt;c10::impl::detail::WrapFunctionIntoFunctor_&lt;c10::CompileTimeFunctionPointer&lt;std::tuple&lt;at::Tensor, at::Tensor, at::Tensor&gt; (at::Tensor const&amp;, std::optional&lt;at::Tensor&gt; const&amp;, std::optional&lt;at::Tensor&gt; const&amp;, std::optional&lt;at::Tensor&gt; const&amp;, std::optional&lt;at::Tensor&gt; const&amp;, bool, double, double), &amp;at::(anonymous namespace)::(anonymous namespace)::wrapper_CPU__native_batch_norm(at::Tensor const&amp;, std::optional&lt;at::Tensor&gt; const&amp;, std::optional&lt;at::Tensor&gt; const&amp;, std::optional&lt;at::Tensor&gt; const&amp;, std::optional&lt;at::Tensor&gt; const&amp;, bool, double, double)&gt;, std::tuple&lt;at::Tensor, at::Tensor, at::Tensor&gt;, c10::guts::typelist::typelist&lt;at::Tensor const&amp;, std::optional&lt;at::Tensor&gt; const&amp;, std::optional&lt;at::Tensor&gt; const&amp;, std::optional&lt;at::Tensor&gt; const&amp;, std::optional&lt;at::Tensor&gt; const&amp;, bool, double, double&gt; &gt;, std::tuple&lt;at::Tensor, at::Tensor, at::Tensor&gt; (at::Tensor const&amp;, std::optional&lt;at::Tensor&gt; const&amp;, std::optional&lt;at::Tensor&gt; const&amp;, std::optional&lt;at::Tensor&gt; const&amp;, std::optional&lt;at::Tensor&gt; const&amp;, bool, double, double)&gt;::call (libtorch_cpu.so) (88 samples, 1.36%)</title><rect x="11.8421%" y="420" width="1.3622%" height="15" fill="rgb(234,31,38)" fg:x="765" fg:w="88"/><text x="12.0921%" y="430.50"></text></g><g><title>at::native::batch_norm_cpu (libtorch_cpu.so) (88 samples, 1.36%)</title><rect x="11.8421%" y="436" width="1.3622%" height="15" fill="rgb(221,117,51)" fg:x="765" fg:w="88"/><text x="12.0921%" y="446.50"></text></g><g><title>at::native::batch_norm_cpu_out (libtorch_cpu.so) (88 samples, 1.36%)</title><rect x="11.8421%" y="452" width="1.3622%" height="15" fill="rgb(212,20,18)" fg:x="765" fg:w="88"/><text x="12.0921%" y="462.50"></text></g><g><title>at::native::batch_norm_cpu_update_stats_template&lt;float, float, at::native::InvStd&gt; (libtorch_cpu.so) (42 samples, 0.65%)</title><rect x="12.5542%" y="468" width="0.6502%" height="15" fill="rgb(245,133,36)" fg:x="811" fg:w="42"/><text x="12.8042%" y="478.50"></text></g><g><title>at::native::(anonymous namespace)::batch_norm_cpu_collect_stats_kernel (libtorch_cpu.so) (36 samples, 0.56%)</title><rect x="12.6471%" y="484" width="0.5573%" height="15" fill="rgb(212,6,19)" fg:x="817" fg:w="36"/><text x="12.8971%" y="494.50"></text></g><g><title>GOMP_parallel (libgomp-c9fef706.so.1) (30 samples, 0.46%)</title><rect x="12.7399%" y="500" width="0.4644%" height="15" fill="rgb(218,1,36)" fg:x="823" fg:w="30"/><text x="12.9899%" y="510.50"></text></g><g><title>at::internal::invoke_parallel&lt;at::parallel_for&lt;at::native::(anonymous namespace)::batch_norm_cpu_collect_stats_contiguous_impl&lt;float&gt;(at::Tensor&amp;, at::Tensor&amp;, at::Tensor const&amp;)::{lambda(long, long)#1}&gt;(long, long, long, at::native::(anonymous namespace)::batch_norm_cpu_collect_stats_contiguous_impl&lt;float&gt;(at::Tensor&amp;, at::Tensor&amp;, at::Tensor const&amp;)::{lambda(long, long)#1} const&amp;)::{lambda(long, long)#1}&gt; (libtorch_cpu.so) (29 samples, 0.45%)</title><rect x="12.7554%" y="516" width="0.4489%" height="15" fill="rgb(246,84,54)" fg:x="824" fg:w="29"/><text x="13.0054%" y="526.50"></text></g><g><title>_forward_impl (torchvision/models/resnet.py:270) (23 samples, 0.36%)</title><rect x="13.2043%" y="164" width="0.3560%" height="15" fill="rgb(242,110,6)" fg:x="853" fg:w="23"/><text x="13.4543%" y="174.50"></text></g><g><title>_wrapped_call_impl (torch/nn/modules/module.py:1751) (23 samples, 0.36%)</title><rect x="13.2043%" y="180" width="0.3560%" height="15" fill="rgb(214,47,5)" fg:x="853" fg:w="23"/><text x="13.4543%" y="190.50"></text></g><g><title>_call_impl (torch/nn/modules/module.py:1762) (23 samples, 0.36%)</title><rect x="13.2043%" y="196" width="0.3560%" height="15" fill="rgb(218,159,25)" fg:x="853" fg:w="23"/><text x="13.4543%" y="206.50"></text></g><g><title>forward (torch/nn/modules/activation.py:133) (23 samples, 0.36%)</title><rect x="13.2043%" y="212" width="0.3560%" height="15" fill="rgb(215,211,28)" fg:x="853" fg:w="23"/><text x="13.4543%" y="222.50"></text></g><g><title>relu (torch/nn/functional.py:1702) (23 samples, 0.36%)</title><rect x="13.2043%" y="228" width="0.3560%" height="15" fill="rgb(238,59,32)" fg:x="853" fg:w="23"/><text x="13.4543%" y="238.50"></text></g><g><title>torch::autograd::THPVariable_relu_ (libtorch_python.so) (23 samples, 0.36%)</title><rect x="13.2043%" y="244" width="0.3560%" height="15" fill="rgb(226,82,3)" fg:x="853" fg:w="23"/><text x="13.4543%" y="254.50"></text></g><g><title>at::_ops::relu_::call (libtorch_cpu.so) (23 samples, 0.36%)</title><rect x="13.2043%" y="260" width="0.3560%" height="15" fill="rgb(240,164,32)" fg:x="853" fg:w="23"/><text x="13.4543%" y="270.50"></text></g><g><title>torch::autograd::VariableType::(anonymous namespace)::relu_ (libtorch_cpu.so) (23 samples, 0.36%)</title><rect x="13.2043%" y="276" width="0.3560%" height="15" fill="rgb(232,46,7)" fg:x="853" fg:w="23"/><text x="13.4543%" y="286.50"></text></g><g><title>c10::impl::wrap_kernel_functor_unboxed_&lt;c10::impl::detail::WrapFunctionIntoFunctor_&lt;c10::CompileTimeFunctionPointer&lt;at::Tensor&amp; (c10::DispatchKeySet, at::Tensor&amp;), &amp;torch::ADInplaceOrView::(anonymous namespace)::relu_(c10::DispatchKeySet, at::Tensor&amp;)&gt;, at::Tensor&amp;, c10::guts::typelist::typelist&lt;c10::DispatchKeySet, at::Tensor&amp;&gt; &gt;, at::Tensor&amp; (c10::DispatchKeySet, at::Tensor&amp;)&gt;::call (libtorch_cpu.so) (23 samples, 0.36%)</title><rect x="13.2043%" y="292" width="0.3560%" height="15" fill="rgb(229,129,53)" fg:x="853" fg:w="23"/><text x="13.4543%" y="302.50"></text></g><g><title>at::native::relu_ (libtorch_cpu.so) (23 samples, 0.36%)</title><rect x="13.2043%" y="308" width="0.3560%" height="15" fill="rgb(234,188,29)" fg:x="853" fg:w="23"/><text x="13.4543%" y="318.50"></text></g><g><title>at::_ops::clamp_min_::call (libtorch_cpu.so) (23 samples, 0.36%)</title><rect x="13.2043%" y="324" width="0.3560%" height="15" fill="rgb(246,141,4)" fg:x="853" fg:w="23"/><text x="13.4543%" y="334.50"></text></g><g><title>at::(anonymous namespace)::wrapper_CPU_clamp_min_ (libtorch_cpu.so) (23 samples, 0.36%)</title><rect x="13.2043%" y="340" width="0.3560%" height="15" fill="rgb(229,23,39)" fg:x="853" fg:w="23"/><text x="13.4543%" y="350.50"></text></g><g><title>at::native::structured_clamp_min_out::impl (libtorch_cpu.so) (23 samples, 0.36%)</title><rect x="13.2043%" y="356" width="0.3560%" height="15" fill="rgb(206,12,3)" fg:x="853" fg:w="23"/><text x="13.4543%" y="366.50"></text></g><g><title>at::native::(anonymous namespace)::clamp_min_scalar_kernel_impl (libtorch_cpu.so) (23 samples, 0.36%)</title><rect x="13.2043%" y="372" width="0.3560%" height="15" fill="rgb(252,226,20)" fg:x="853" fg:w="23"/><text x="13.4543%" y="382.50"></text></g><g><title>at::TensorIteratorBase::for_each (libtorch_cpu.so) (23 samples, 0.36%)</title><rect x="13.2043%" y="388" width="0.3560%" height="15" fill="rgb(216,123,35)" fg:x="853" fg:w="23"/><text x="13.4543%" y="398.50"></text></g><g><title>GOMP_parallel (libgomp-c9fef706.so.1) (19 samples, 0.29%)</title><rect x="13.2663%" y="404" width="0.2941%" height="15" fill="rgb(212,68,40)" fg:x="857" fg:w="19"/><text x="13.5163%" y="414.50"></text></g><g><title>at::internal::invoke_parallel&lt;at::parallel_for&lt;at::TensorIteratorBase::for_each(c10::function_ref&lt;void (char**, long const*, long, long)&gt;, long)::{lambda(long, long)#1}&gt;(long, long, long, at::TensorIteratorBase::for_each(c10::function_ref&lt;void (char**, long const*, long, long)&gt;, long)::{lambda(long, long)#1} const&amp;)::{lambda(long, long)#1}&gt; (libtorch_cpu.so) (15 samples, 0.23%)</title><rect x="13.3282%" y="420" width="0.2322%" height="15" fill="rgb(254,125,32)" fg:x="861" fg:w="15"/><text x="13.5782%" y="430.50"></text></g><g><title>at::TensorIteratorBase::serial_for_each (libtorch_cpu.so) (15 samples, 0.23%)</title><rect x="13.3282%" y="436" width="0.2322%" height="15" fill="rgb(253,97,22)" fg:x="861" fg:w="15"/><text x="13.5782%" y="446.50"></text></g><g><title>c10::function_ref&lt;void (char**, long const*, long, long)&gt;::callback_fn&lt;at::native::AVX2::VectorizedLoop2d&lt;at::native::(anonymous namespace)::clamp_min_scalar_kernel_impl(at::TensorIteratorBase&amp;, c10::Scalar)::{lambda()#1}::operator()() const::{lambda()#7}::operator()() const::{lambda(float)#1}, at::native::(anonymous namespace)::clamp_min_scalar_kernel_impl(at::TensorIteratorBase&amp;, c10::Scalar)::{lambda()#1}::operator()() const::{lambda()#7}::operator()() const::{lambda(at::vec::AVX2::Vectorized&lt;float&gt;)#2}&gt; &gt; (libtorch_cpu.so) (15 samples, 0.23%)</title><rect x="13.3282%" y="452" width="0.2322%" height="15" fill="rgb(241,101,14)" fg:x="861" fg:w="15"/><text x="13.5782%" y="462.50"></text></g><g><title>0x77d25141ca9d (libgomp-c9fef706.so.1) (8 samples, 0.12%)</title><rect x="13.5604%" y="484" width="0.1238%" height="15" fill="rgb(238,103,29)" fg:x="876" fg:w="8"/><text x="13.8104%" y="494.50"></text></g><g><title>0x77d25141e02a (libgomp-c9fef706.so.1) (8 samples, 0.12%)</title><rect x="13.5604%" y="500" width="0.1238%" height="15" fill="rgb(233,195,47)" fg:x="876" fg:w="8"/><text x="13.8104%" y="510.50"></text></g><g><title>_forward_impl (torchvision/models/resnet.py:271) (106 samples, 1.64%)</title><rect x="13.5604%" y="164" width="1.6409%" height="15" fill="rgb(246,218,30)" fg:x="876" fg:w="106"/><text x="13.8104%" y="174.50"></text></g><g><title>_wrapped_call_impl (torch/nn/modules/module.py:1751) (106 samples, 1.64%)</title><rect x="13.5604%" y="180" width="1.6409%" height="15" fill="rgb(219,145,47)" fg:x="876" fg:w="106"/><text x="13.8104%" y="190.50"></text></g><g><title>_call_impl (torch/nn/modules/module.py:1762) (106 samples, 1.64%)</title><rect x="13.5604%" y="196" width="1.6409%" height="15" fill="rgb(243,12,26)" fg:x="876" fg:w="106"/><text x="13.8104%" y="206.50"></text></g><g><title>forward (torch/nn/modules/pooling.py:213) (106 samples, 1.64%)</title><rect x="13.5604%" y="212" width="1.6409%" height="15" fill="rgb(214,87,16)" fg:x="876" fg:w="106"/><text x="13.8104%" y="222.50"></text></g><g><title>fn (torch/_jit_internal.py:622) (106 samples, 1.64%)</title><rect x="13.5604%" y="228" width="1.6409%" height="15" fill="rgb(208,99,42)" fg:x="876" fg:w="106"/><text x="13.8104%" y="238.50"></text></g><g><title>_max_pool2d (torch/nn/functional.py:830) (106 samples, 1.64%)</title><rect x="13.5604%" y="244" width="1.6409%" height="15" fill="rgb(253,99,2)" fg:x="876" fg:w="106"/><text x="13.8104%" y="254.50"></text></g><g><title>torch::autograd::THPVariable_max_pool2d (libtorch_python.so) (106 samples, 1.64%)</title><rect x="13.5604%" y="260" width="1.6409%" height="15" fill="rgb(220,168,23)" fg:x="876" fg:w="106"/><text x="13.8104%" y="270.50"></text></g><g><title>at::_ops::max_pool2d::call (libtorch_cpu.so) (106 samples, 1.64%)</title><rect x="13.5604%" y="276" width="1.6409%" height="15" fill="rgb(242,38,24)" fg:x="876" fg:w="106"/><text x="13.8104%" y="286.50"></text></g><g><title>c10::impl::wrap_kernel_functor_unboxed_&lt;c10::impl::detail::WrapFunctionIntoFunctor_&lt;c10::CompileTimeFunctionPointer&lt;at::Tensor(at::Tensor const&amp;, c10::ArrayRef&lt;long&gt;, c10::ArrayRef&lt;long&gt;, c10::ArrayRef&lt;long&gt;, c10::ArrayRef&lt;long&gt;, bool), &amp;at::(anonymous namespace)::(anonymous namespace)::wrapper_CompositeImplicitAutograd__max_pool2d(at::Tensor const&amp;, c10::ArrayRef&lt;long&gt;, c10::ArrayRef&lt;long&gt;, c10::ArrayRef&lt;long&gt;, c10::ArrayRef&lt;long&gt;, bool)&gt;, at::Tensor, c10::guts::typelist::typelist&lt;at::Tensor const&amp;, c10::ArrayRef&lt;long&gt;, c10::ArrayRef&lt;long&gt;, c10::ArrayRef&lt;long&gt;, c10::ArrayRef&lt;long&gt;, bool&gt; &gt;, at::Tensor(at::Tensor const&amp;, c10::ArrayRef&lt;long&gt;, c10::ArrayRef&lt;long&gt;, c10::ArrayRef&lt;long&gt;, c10::ArrayRef&lt;long&gt;, bool)&gt;::call (libtorch_cpu.so) (106 samples, 1.64%)</title><rect x="13.5604%" y="292" width="1.6409%" height="15" fill="rgb(225,182,9)" fg:x="876" fg:w="106"/><text x="13.8104%" y="302.50"></text></g><g><title>at::native::max_pool2d (libtorch_cpu.so) (106 samples, 1.64%)</title><rect x="13.5604%" y="308" width="1.6409%" height="15" fill="rgb(243,178,37)" fg:x="876" fg:w="106"/><text x="13.8104%" y="318.50"></text></g><g><title>at::_ops::max_pool2d_with_indices::call (libtorch_cpu.so) (106 samples, 1.64%)</title><rect x="13.5604%" y="324" width="1.6409%" height="15" fill="rgb(232,139,19)" fg:x="876" fg:w="106"/><text x="13.8104%" y="334.50"></text></g><g><title>c10::impl::wrap_kernel_functor_unboxed_&lt;c10::impl::detail::WrapFunctionIntoFunctor_&lt;c10::CompileTimeFunctionPointer&lt;std::tuple&lt;at::Tensor, at::Tensor&gt; (c10::DispatchKeySet, at::Tensor const&amp;, c10::ArrayRef&lt;long&gt;, c10::ArrayRef&lt;long&gt;, c10::ArrayRef&lt;long&gt;, c10::ArrayRef&lt;long&gt;, bool), &amp;torch::autograd::VariableType::(anonymous namespace)::max_pool2d_with_indices(c10::DispatchKeySet, at::Tensor const&amp;, c10::ArrayRef&lt;long&gt;, c10::ArrayRef&lt;long&gt;, c10::ArrayRef&lt;long&gt;, c10::ArrayRef&lt;long&gt;, bool)&gt;, std::tuple&lt;at::Tensor, at::Tensor&gt;, c10::guts::typelist::typelist&lt;c10::DispatchKeySet, at::Tensor const&amp;, c10::ArrayRef&lt;long&gt;, c10::ArrayRef&lt;long&gt;, c10::ArrayRef&lt;long&gt;, c10::ArrayRef&lt;long&gt;, bool&gt; &gt;, std::tuple&lt;at::Tensor, at::Tensor&gt; (c10::DispatchKeySet, at::Tensor const&amp;, c10::ArrayRef&lt;long&gt;, c10::ArrayRef&lt;long&gt;, c10::ArrayRef&lt;long&gt;, c10::ArrayRef&lt;long&gt;, bool)&gt;::call (libtorch_cpu.so) (106 samples, 1.64%)</title><rect x="13.5604%" y="340" width="1.6409%" height="15" fill="rgb(225,201,24)" fg:x="876" fg:w="106"/><text x="13.8104%" y="350.50"></text></g><g><title>torch::autograd::VariableType::(anonymous namespace)::max_pool2d_with_indices (libtorch_cpu.so) (106 samples, 1.64%)</title><rect x="13.5604%" y="356" width="1.6409%" height="15" fill="rgb(221,47,46)" fg:x="876" fg:w="106"/><text x="13.8104%" y="366.50"></text></g><g><title>at::_ops::max_pool2d_with_indices::redispatch (libtorch_cpu.so) (106 samples, 1.64%)</title><rect x="13.5604%" y="372" width="1.6409%" height="15" fill="rgb(249,23,13)" fg:x="876" fg:w="106"/><text x="13.8104%" y="382.50"></text></g><g><title>c10::impl::wrap_kernel_functor_unboxed_&lt;c10::impl::detail::WrapFunctionIntoFunctor_&lt;c10::CompileTimeFunctionPointer&lt;std::tuple&lt;at::Tensor, at::Tensor&gt; (at::Tensor const&amp;, c10::ArrayRef&lt;long&gt;, c10::ArrayRef&lt;long&gt;, c10::ArrayRef&lt;long&gt;, c10::ArrayRef&lt;long&gt;, bool), &amp;at::(anonymous namespace)::wrapper_CPU_max_pool2d_with_indices(at::Tensor const&amp;, c10::ArrayRef&lt;long&gt;, c10::ArrayRef&lt;long&gt;, c10::ArrayRef&lt;long&gt;, c10::ArrayRef&lt;long&gt;, bool)&gt;, std::tuple&lt;at::Tensor, at::Tensor&gt;, c10::guts::typelist::typelist&lt;at::Tensor const&amp;, c10::ArrayRef&lt;long&gt;, c10::ArrayRef&lt;long&gt;, c10::ArrayRef&lt;long&gt;, c10::ArrayRef&lt;long&gt;, bool&gt; &gt;, std::tuple&lt;at::Tensor, at::Tensor&gt; (at::Tensor const&amp;, c10::ArrayRef&lt;long&gt;, c10::ArrayRef&lt;long&gt;, c10::ArrayRef&lt;long&gt;, c10::ArrayRef&lt;long&gt;, bool)&gt;::call (libtorch_cpu.so) (106 samples, 1.64%)</title><rect x="13.5604%" y="388" width="1.6409%" height="15" fill="rgb(219,9,5)" fg:x="876" fg:w="106"/><text x="13.8104%" y="398.50"></text></g><g><title>at::(anonymous namespace)::wrapper_CPU_max_pool2d_with_indices (libtorch_cpu.so) (106 samples, 1.64%)</title><rect x="13.5604%" y="404" width="1.6409%" height="15" fill="rgb(254,171,16)" fg:x="876" fg:w="106"/><text x="13.8104%" y="414.50"></text></g><g><title>at::native::structured_max_pool2d_with_indices_out_cpu::impl (libtorch_cpu.so) (106 samples, 1.64%)</title><rect x="13.5604%" y="420" width="1.6409%" height="15" fill="rgb(230,171,20)" fg:x="876" fg:w="106"/><text x="13.8104%" y="430.50"></text></g><g><title>at::native::(anonymous namespace)::max_pool2d_kernel_impl (libtorch_cpu.so) (106 samples, 1.64%)</title><rect x="13.5604%" y="436" width="1.6409%" height="15" fill="rgb(210,71,41)" fg:x="876" fg:w="106"/><text x="13.8104%" y="446.50"></text></g><g><title>at::native::(anonymous namespace)::max_pool2d_kernel_impl(at::Tensor const&amp;, at::Tensor const&amp;, at::Tensor const&amp;, int, int, int, int, int, int, int, int)::{lambda()#1}::operator() const (libtorch_cpu.so) (106 samples, 1.64%)</title><rect x="13.5604%" y="452" width="1.6409%" height="15" fill="rgb(206,173,20)" fg:x="876" fg:w="106"/><text x="13.8104%" y="462.50"></text></g><g><title>at::native::(anonymous namespace)::cpu_max_pool&lt;float, false&gt; (libtorch_cpu.so) (106 samples, 1.64%)</title><rect x="13.5604%" y="468" width="1.6409%" height="15" fill="rgb(233,88,34)" fg:x="876" fg:w="106"/><text x="13.8104%" y="478.50"></text></g><g><title>GOMP_parallel (libgomp-c9fef706.so.1) (98 samples, 1.52%)</title><rect x="13.6842%" y="484" width="1.5170%" height="15" fill="rgb(223,209,46)" fg:x="884" fg:w="98"/><text x="13.9342%" y="494.50"></text></g><g><title>at::internal::invoke_parallel&lt;at::parallel_for&lt;at::native::(anonymous namespace)::cpu_max_pool&lt;float, false&gt;(at::Tensor const&amp;, at::Tensor const&amp;, at::Tensor const&amp;, c10::ArrayRef&lt;long&gt;, c10::ArrayRef&lt;long&gt;, c10::ArrayRef&lt;long&gt;, c10::ArrayRef&lt;long&gt;)::{lambda(long, long)#1}&gt;(long, long, long, at::native::(anonymous namespace)::cpu_max_pool&lt;float, false&gt;(at::Tensor const&amp;, at::Tensor const&amp;, at::Tensor const&amp;, c10::ArrayRef&lt;long&gt;, c10::ArrayRef&lt;long&gt;, c10::ArrayRef&lt;long&gt;, c10::ArrayRef&lt;long&gt;)::{lambda(long, long)#1} const&amp;)::{lambda(long, long)#1}&gt; (libtorch_cpu.so) (96 samples, 1.49%)</title><rect x="13.7152%" y="500" width="1.4861%" height="15" fill="rgb(250,43,18)" fg:x="886" fg:w="96"/><text x="13.9652%" y="510.50"></text></g><g><title>forward (torchvision/models/resnet.py:102) (21 samples, 0.33%)</title><rect x="15.2012%" y="260" width="0.3251%" height="15" fill="rgb(208,13,10)" fg:x="982" fg:w="21"/><text x="15.4512%" y="270.50"></text></g><g><title>torch::autograd::TypeError_to_NotImplemented_&lt;&amp;torch::autograd::THPVariable_add_(_object*, _object*, _object*)&gt; (libtorch_python.so) (21 samples, 0.33%)</title><rect x="15.2012%" y="276" width="0.3251%" height="15" fill="rgb(212,200,36)" fg:x="982" fg:w="21"/><text x="15.4512%" y="286.50"></text></g><g><title>torch::autograd::THPVariable_add_ (libtorch_python.so) (21 samples, 0.33%)</title><rect x="15.2012%" y="292" width="0.3251%" height="15" fill="rgb(225,90,30)" fg:x="982" fg:w="21"/><text x="15.4512%" y="302.50"></text></g><g><title>at::_ops::add__Tensor::call (libtorch_cpu.so) (21 samples, 0.33%)</title><rect x="15.2012%" y="308" width="0.3251%" height="15" fill="rgb(236,182,39)" fg:x="982" fg:w="21"/><text x="15.4512%" y="318.50"></text></g><g><title>torch::autograd::VariableType::(anonymous namespace)::add__Tensor (libtorch_cpu.so) (21 samples, 0.33%)</title><rect x="15.2012%" y="324" width="0.3251%" height="15" fill="rgb(212,144,35)" fg:x="982" fg:w="21"/><text x="15.4512%" y="334.50"></text></g><g><title>c10::impl::wrap_kernel_functor_unboxed_&lt;c10::impl::detail::WrapFunctionIntoFunctor_&lt;c10::CompileTimeFunctionPointer&lt;at::Tensor&amp; (c10::DispatchKeySet, at::Tensor&amp;, at::Tensor const&amp;, c10::Scalar const&amp;), &amp;torch::ADInplaceOrView::(anonymous namespace)::add__Tensor(c10::DispatchKeySet, at::Tensor&amp;, at::Tensor const&amp;, c10::Scalar const&amp;)&gt;, at::Tensor&amp;, c10::guts::typelist::typelist&lt;c10::DispatchKeySet, at::Tensor&amp;, at::Tensor const&amp;, c10::Scalar const&amp;&gt; &gt;, at::Tensor&amp; (c10::DispatchKeySet, at::Tensor&amp;, at::Tensor const&amp;, c10::Scalar const&amp;)&gt;::call (libtorch_cpu.so) (21 samples, 0.33%)</title><rect x="15.2012%" y="340" width="0.3251%" height="15" fill="rgb(228,63,44)" fg:x="982" fg:w="21"/><text x="15.4512%" y="350.50"></text></g><g><title>at::(anonymous namespace)::wrapper_CPU_add__Tensor (libtorch_cpu.so) (21 samples, 0.33%)</title><rect x="15.2012%" y="356" width="0.3251%" height="15" fill="rgb(228,109,6)" fg:x="982" fg:w="21"/><text x="15.4512%" y="366.50"></text></g><g><title>at::native::(anonymous namespace)::add_kernel (libtorch_cpu.so) (21 samples, 0.33%)</title><rect x="15.2012%" y="372" width="0.3251%" height="15" fill="rgb(238,117,24)" fg:x="982" fg:w="21"/><text x="15.4512%" y="382.50"></text></g><g><title>at::native::(anonymous namespace)::add_kernel(at::TensorIteratorBase&amp;, c10::Scalar const&amp;)::{lambda()#1}::operator() const (libtorch_cpu.so) (21 samples, 0.33%)</title><rect x="15.2012%" y="388" width="0.3251%" height="15" fill="rgb(242,26,26)" fg:x="982" fg:w="21"/><text x="15.4512%" y="398.50"></text></g><g><title>at::TensorIteratorBase::for_each (libtorch_cpu.so) (21 samples, 0.33%)</title><rect x="15.2012%" y="404" width="0.3251%" height="15" fill="rgb(221,92,48)" fg:x="982" fg:w="21"/><text x="15.4512%" y="414.50"></text></g><g><title>GOMP_parallel (libgomp-c9fef706.so.1) (15 samples, 0.23%)</title><rect x="15.2941%" y="420" width="0.2322%" height="15" fill="rgb(209,209,32)" fg:x="988" fg:w="15"/><text x="15.5441%" y="430.50"></text></g><g><title>at::internal::invoke_parallel&lt;at::parallel_for&lt;at::TensorIteratorBase::for_each(c10::function_ref&lt;void (char**, long const*, long, long)&gt;, long)::{lambda(long, long)#1}&gt;(long, long, long, at::TensorIteratorBase::for_each(c10::function_ref&lt;void (char**, long const*, long, long)&gt;, long)::{lambda(long, long)#1} const&amp;)::{lambda(long, long)#1}&gt; (libtorch_cpu.so) (14 samples, 0.22%)</title><rect x="15.3096%" y="436" width="0.2167%" height="15" fill="rgb(221,70,22)" fg:x="989" fg:w="14"/><text x="15.5596%" y="446.50"></text></g><g><title>at::TensorIteratorBase::serial_for_each (libtorch_cpu.so) (14 samples, 0.22%)</title><rect x="15.3096%" y="452" width="0.2167%" height="15" fill="rgb(248,145,5)" fg:x="989" fg:w="14"/><text x="15.5596%" y="462.50"></text></g><g><title>c10::function_ref&lt;void (char**, long const*, long, long)&gt;::callback_fn&lt;at::native::AVX2::VectorizedLoop2d&lt;at::native::(anonymous namespace)::add_kernel(at::TensorIteratorBase&amp;, c10::Scalar const&amp;)::{lambda()#1}::operator()() const::{lambda()#7}::operator()() const::{lambda(float, float)#1}, at::native::(anonymous namespace)::add_kernel(at::TensorIteratorBase&amp;, c10::Scalar const&amp;)::{lambda()#1}::operator()() const::{lambda()#7}::operator()() const::{lambda(at::vec::AVX2::Vectorized&lt;float&gt;, at::vec::AVX2::Vectorized&lt;float&gt;)#2}&gt; &gt; (libtorch_cpu.so) (14 samples, 0.22%)</title><rect x="15.3096%" y="468" width="0.2167%" height="15" fill="rgb(226,116,26)" fg:x="989" fg:w="14"/><text x="15.5596%" y="478.50"></text></g><g><title>forward (torchvision/models/resnet.py:103) (15 samples, 0.23%)</title><rect x="15.5263%" y="260" width="0.2322%" height="15" fill="rgb(244,5,17)" fg:x="1003" fg:w="15"/><text x="15.7763%" y="270.50"></text></g><g><title>_wrapped_call_impl (torch/nn/modules/module.py:1751) (15 samples, 0.23%)</title><rect x="15.5263%" y="276" width="0.2322%" height="15" fill="rgb(252,159,33)" fg:x="1003" fg:w="15"/><text x="15.7763%" y="286.50"></text></g><g><title>_call_impl (torch/nn/modules/module.py:1762) (15 samples, 0.23%)</title><rect x="15.5263%" y="292" width="0.2322%" height="15" fill="rgb(206,71,0)" fg:x="1003" fg:w="15"/><text x="15.7763%" y="302.50"></text></g><g><title>forward (torch/nn/modules/activation.py:133) (15 samples, 0.23%)</title><rect x="15.5263%" y="308" width="0.2322%" height="15" fill="rgb(233,118,54)" fg:x="1003" fg:w="15"/><text x="15.7763%" y="318.50"></text></g><g><title>relu (torch/nn/functional.py:1702) (15 samples, 0.23%)</title><rect x="15.5263%" y="324" width="0.2322%" height="15" fill="rgb(234,83,48)" fg:x="1003" fg:w="15"/><text x="15.7763%" y="334.50"></text></g><g><title>torch::autograd::THPVariable_relu_ (libtorch_python.so) (15 samples, 0.23%)</title><rect x="15.5263%" y="340" width="0.2322%" height="15" fill="rgb(228,3,54)" fg:x="1003" fg:w="15"/><text x="15.7763%" y="350.50"></text></g><g><title>at::_ops::relu_::call (libtorch_cpu.so) (15 samples, 0.23%)</title><rect x="15.5263%" y="356" width="0.2322%" height="15" fill="rgb(226,155,13)" fg:x="1003" fg:w="15"/><text x="15.7763%" y="366.50"></text></g><g><title>torch::autograd::VariableType::(anonymous namespace)::relu_ (libtorch_cpu.so) (15 samples, 0.23%)</title><rect x="15.5263%" y="372" width="0.2322%" height="15" fill="rgb(241,28,37)" fg:x="1003" fg:w="15"/><text x="15.7763%" y="382.50"></text></g><g><title>c10::impl::wrap_kernel_functor_unboxed_&lt;c10::impl::detail::WrapFunctionIntoFunctor_&lt;c10::CompileTimeFunctionPointer&lt;at::Tensor&amp; (c10::DispatchKeySet, at::Tensor&amp;), &amp;torch::ADInplaceOrView::(anonymous namespace)::relu_(c10::DispatchKeySet, at::Tensor&amp;)&gt;, at::Tensor&amp;, c10::guts::typelist::typelist&lt;c10::DispatchKeySet, at::Tensor&amp;&gt; &gt;, at::Tensor&amp; (c10::DispatchKeySet, at::Tensor&amp;)&gt;::call (libtorch_cpu.so) (15 samples, 0.23%)</title><rect x="15.5263%" y="388" width="0.2322%" height="15" fill="rgb(233,93,10)" fg:x="1003" fg:w="15"/><text x="15.7763%" y="398.50"></text></g><g><title>at::native::relu_ (libtorch_cpu.so) (15 samples, 0.23%)</title><rect x="15.5263%" y="404" width="0.2322%" height="15" fill="rgb(225,113,19)" fg:x="1003" fg:w="15"/><text x="15.7763%" y="414.50"></text></g><g><title>at::_ops::clamp_min_::call (libtorch_cpu.so) (15 samples, 0.23%)</title><rect x="15.5263%" y="420" width="0.2322%" height="15" fill="rgb(241,2,18)" fg:x="1003" fg:w="15"/><text x="15.7763%" y="430.50"></text></g><g><title>at::(anonymous namespace)::wrapper_CPU_clamp_min_ (libtorch_cpu.so) (15 samples, 0.23%)</title><rect x="15.5263%" y="436" width="0.2322%" height="15" fill="rgb(228,207,21)" fg:x="1003" fg:w="15"/><text x="15.7763%" y="446.50"></text></g><g><title>at::native::structured_clamp_min_out::impl (libtorch_cpu.so) (15 samples, 0.23%)</title><rect x="15.5263%" y="452" width="0.2322%" height="15" fill="rgb(213,211,35)" fg:x="1003" fg:w="15"/><text x="15.7763%" y="462.50"></text></g><g><title>at::native::(anonymous namespace)::clamp_min_scalar_kernel_impl (libtorch_cpu.so) (15 samples, 0.23%)</title><rect x="15.5263%" y="468" width="0.2322%" height="15" fill="rgb(209,83,10)" fg:x="1003" fg:w="15"/><text x="15.7763%" y="478.50"></text></g><g><title>at::TensorIteratorBase::for_each (libtorch_cpu.so) (15 samples, 0.23%)</title><rect x="15.5263%" y="484" width="0.2322%" height="15" fill="rgb(209,164,1)" fg:x="1003" fg:w="15"/><text x="15.7763%" y="494.50"></text></g><g><title>GOMP_parallel (libgomp-c9fef706.so.1) (9 samples, 0.14%)</title><rect x="15.6192%" y="500" width="0.1393%" height="15" fill="rgb(213,184,43)" fg:x="1009" fg:w="9"/><text x="15.8692%" y="510.50"></text></g><g><title>0x77d25141e02a (libgomp-c9fef706.so.1) (7 samples, 0.11%)</title><rect x="15.7740%" y="804" width="0.1084%" height="15" fill="rgb(231,61,34)" fg:x="1019" fg:w="7"/><text x="16.0240%" y="814.50"></text></g><g><title>0x77d25141ca9d (libgomp-c9fef706.so.1) (8 samples, 0.12%)</title><rect x="15.7740%" y="788" width="0.1238%" height="15" fill="rgb(235,75,3)" fg:x="1019" fg:w="8"/><text x="16.0240%" y="798.50"></text></g><g><title>dnnl::primitive::execute (libtorch_cpu.so) (83 samples, 1.28%)</title><rect x="15.7740%" y="692" width="1.2848%" height="15" fill="rgb(220,106,47)" fg:x="1019" fg:w="83"/><text x="16.0240%" y="702.50"></text></g><g><title>dnnl_primitive_execute (libtorch_cpu.so) (83 samples, 1.28%)</title><rect x="15.7740%" y="708" width="1.2848%" height="15" fill="rgb(210,196,33)" fg:x="1019" fg:w="83"/><text x="16.0240%" y="718.50"></text></g><g><title>dnnl::impl::primitive_execute (libtorch_cpu.so) (83 samples, 1.28%)</title><rect x="15.7740%" y="724" width="1.2848%" height="15" fill="rgb(229,154,42)" fg:x="1019" fg:w="83"/><text x="16.0240%" y="734.50"></text></g><g><title>dnnl_primitive::execute (libtorch_cpu.so) (83 samples, 1.28%)</title><rect x="15.7740%" y="740" width="1.2848%" height="15" fill="rgb(228,114,26)" fg:x="1019" fg:w="83"/><text x="16.0240%" y="750.50"></text></g><g><title>dnnl::impl::cpu::x64::jit_avx2_convolution_fwd_t::execute (libtorch_cpu.so) (83 samples, 1.28%)</title><rect x="15.7740%" y="756" width="1.2848%" height="15" fill="rgb(208,144,1)" fg:x="1019" fg:w="83"/><text x="16.0240%" y="766.50"></text></g><g><title>dnnl::impl::cpu::x64::jit_avx2_convolution_fwd_t::execute_forward (libtorch_cpu.so) (83 samples, 1.28%)</title><rect x="15.7740%" y="772" width="1.2848%" height="15" fill="rgb(239,112,37)" fg:x="1019" fg:w="83"/><text x="16.0240%" y="782.50"></text></g><g><title>GOMP_parallel (libgomp-c9fef706.so.1) (75 samples, 1.16%)</title><rect x="15.8978%" y="788" width="1.1610%" height="15" fill="rgb(210,96,50)" fg:x="1027" fg:w="75"/><text x="16.1478%" y="798.50"></text></g><g><title>dnnl::impl::parallel (libtorch_cpu.so) (73 samples, 1.13%)</title><rect x="15.9288%" y="804" width="1.1300%" height="15" fill="rgb(222,178,2)" fg:x="1029" fg:w="73"/><text x="16.1788%" y="814.50"></text></g><g><title>dnnl::impl::cpu::x64::jit_avx2_convolution_fwd_t::execute_forward(dnnl::impl::exec_ctx_t const&amp;) const::{lambda(int, int)#1}::operator() const (libtorch_cpu.so) (73 samples, 1.13%)</title><rect x="15.9288%" y="820" width="1.1300%" height="15" fill="rgb(226,74,18)" fg:x="1029" fg:w="73"/><text x="16.1788%" y="830.50"></text></g><g><title>dnnl::impl::cpu::x64::jit_blk_reorder_t::execute (libtorch_cpu.so) (17 samples, 0.26%)</title><rect x="17.0588%" y="788" width="0.2632%" height="15" fill="rgb(225,67,54)" fg:x="1102" fg:w="17"/><text x="17.3088%" y="798.50"></text></g><g><title>GOMP_parallel (libgomp-c9fef706.so.1) (13 samples, 0.20%)</title><rect x="17.1207%" y="804" width="0.2012%" height="15" fill="rgb(251,92,32)" fg:x="1106" fg:w="13"/><text x="17.3707%" y="814.50"></text></g><g><title>dnnl::impl::parallel (libtorch_cpu.so) (9 samples, 0.14%)</title><rect x="17.1827%" y="820" width="0.1393%" height="15" fill="rgb(228,149,22)" fg:x="1110" fg:w="9"/><text x="17.4327%" y="830.50"></text></g><g><title>at::native::_mkldnn_convolution_out (libtorch_cpu.so) (106 samples, 1.64%)</title><rect x="15.7740%" y="660" width="1.6409%" height="15" fill="rgb(243,54,13)" fg:x="1019" fg:w="106"/><text x="16.0240%" y="670.50"></text></g><g><title>ideep::convolution_forward::compute_dispatch&lt;false, true, true&gt; (libtorch_cpu.so) (106 samples, 1.64%)</title><rect x="15.7740%" y="676" width="1.6409%" height="15" fill="rgb(243,180,28)" fg:x="1019" fg:w="106"/><text x="16.0240%" y="686.50"></text></g><g><title>ideep::tensor::reorder_if_differ_in (libtorch_cpu.so) (23 samples, 0.36%)</title><rect x="17.0588%" y="692" width="0.3560%" height="15" fill="rgb(208,167,24)" fg:x="1102" fg:w="23"/><text x="17.3088%" y="702.50"></text></g><g><title>ideep::tensor::reorder_to (libtorch_cpu.so) (23 samples, 0.36%)</title><rect x="17.0588%" y="708" width="0.3560%" height="15" fill="rgb(245,73,45)" fg:x="1102" fg:w="23"/><text x="17.3088%" y="718.50"></text></g><g><title>dnnl::primitive::execute (libtorch_cpu.so) (23 samples, 0.36%)</title><rect x="17.0588%" y="724" width="0.3560%" height="15" fill="rgb(237,203,48)" fg:x="1102" fg:w="23"/><text x="17.3088%" y="734.50"></text></g><g><title>dnnl_primitive_execute (libtorch_cpu.so) (23 samples, 0.36%)</title><rect x="17.0588%" y="740" width="0.3560%" height="15" fill="rgb(211,197,16)" fg:x="1102" fg:w="23"/><text x="17.3088%" y="750.50"></text></g><g><title>dnnl::impl::primitive_execute (libtorch_cpu.so) (23 samples, 0.36%)</title><rect x="17.0588%" y="756" width="0.3560%" height="15" fill="rgb(243,99,51)" fg:x="1102" fg:w="23"/><text x="17.3088%" y="766.50"></text></g><g><title>dnnl_primitive::execute (libtorch_cpu.so) (23 samples, 0.36%)</title><rect x="17.0588%" y="772" width="0.3560%" height="15" fill="rgb(215,123,29)" fg:x="1102" fg:w="23"/><text x="17.3088%" y="782.50"></text></g><g><title>dnnl::primitive::execute (libtorch_cpu.so) (18 samples, 0.28%)</title><rect x="17.4303%" y="708" width="0.2786%" height="15" fill="rgb(239,186,37)" fg:x="1126" fg:w="18"/><text x="17.6803%" y="718.50"></text></g><g><title>dnnl_primitive_execute (libtorch_cpu.so) (18 samples, 0.28%)</title><rect x="17.4303%" y="724" width="0.2786%" height="15" fill="rgb(252,136,39)" fg:x="1126" fg:w="18"/><text x="17.6803%" y="734.50"></text></g><g><title>dnnl::impl::primitive_execute (libtorch_cpu.so) (18 samples, 0.28%)</title><rect x="17.4303%" y="740" width="0.2786%" height="15" fill="rgb(223,213,32)" fg:x="1126" fg:w="18"/><text x="17.6803%" y="750.50"></text></g><g><title>dnnl_primitive::execute (libtorch_cpu.so) (18 samples, 0.28%)</title><rect x="17.4303%" y="756" width="0.2786%" height="15" fill="rgb(233,115,5)" fg:x="1126" fg:w="18"/><text x="17.6803%" y="766.50"></text></g><g><title>dnnl::impl::cpu::x64::jit_blk_reorder_t::execute (libtorch_cpu.so) (18 samples, 0.28%)</title><rect x="17.4303%" y="772" width="0.2786%" height="15" fill="rgb(207,226,44)" fg:x="1126" fg:w="18"/><text x="17.6803%" y="782.50"></text></g><g><title>GOMP_parallel (libgomp-c9fef706.so.1) (12 samples, 0.19%)</title><rect x="17.5232%" y="788" width="0.1858%" height="15" fill="rgb(208,126,0)" fg:x="1132" fg:w="12"/><text x="17.7732%" y="798.50"></text></g><g><title>dnnl::impl::parallel (libtorch_cpu.so) (9 samples, 0.14%)</title><rect x="17.5697%" y="804" width="0.1393%" height="15" fill="rgb(244,66,21)" fg:x="1135" fg:w="9"/><text x="17.8197%" y="814.50"></text></g><g><title>forward (torchvision/models/resnet.py:92) (127 samples, 1.97%)</title><rect x="15.7585%" y="260" width="1.9659%" height="15" fill="rgb(222,97,12)" fg:x="1018" fg:w="127"/><text x="16.0085%" y="270.50">f..</text></g><g><title>_wrapped_call_impl (torch/nn/modules/module.py:1751) (127 samples, 1.97%)</title><rect x="15.7585%" y="276" width="1.9659%" height="15" fill="rgb(219,213,19)" fg:x="1018" fg:w="127"/><text x="16.0085%" y="286.50">_..</text></g><g><title>_call_impl (torch/nn/modules/module.py:1762) (127 samples, 1.97%)</title><rect x="15.7585%" y="292" width="1.9659%" height="15" fill="rgb(252,169,30)" fg:x="1018" fg:w="127"/><text x="16.0085%" y="302.50">_..</text></g><g><title>forward (torch/nn/modules/conv.py:554) (127 samples, 1.97%)</title><rect x="15.7585%" y="308" width="1.9659%" height="15" fill="rgb(206,32,51)" fg:x="1018" fg:w="127"/><text x="16.0085%" y="318.50">f..</text></g><g><title>_conv_forward (torch/nn/modules/conv.py:550) (127 samples, 1.97%)</title><rect x="15.7585%" y="324" width="1.9659%" height="15" fill="rgb(250,172,42)" fg:x="1018" fg:w="127"/><text x="16.0085%" y="334.50">_..</text></g><g><title>torch::autograd::THPVariable_conv2d (libtorch_python.so) (127 samples, 1.97%)</title><rect x="15.7585%" y="340" width="1.9659%" height="15" fill="rgb(209,34,43)" fg:x="1018" fg:w="127"/><text x="16.0085%" y="350.50">t..</text></g><g><title>at::_ops::conv2d::call (libtorch_cpu.so) (127 samples, 1.97%)</title><rect x="15.7585%" y="356" width="1.9659%" height="15" fill="rgb(223,11,35)" fg:x="1018" fg:w="127"/><text x="16.0085%" y="366.50">a..</text></g><g><title>c10::impl::wrap_kernel_functor_unboxed_&lt;c10::impl::detail::WrapFunctionIntoFunctor_&lt;c10::CompileTimeFunctionPointer&lt;at::Tensor(at::Tensor const&amp;, at::Tensor const&amp;, std::optional&lt;at::Tensor&gt; const&amp;, c10::ArrayRef&lt;c10::SymInt&gt;, c10::ArrayRef&lt;c10::SymInt&gt;, c10::ArrayRef&lt;c10::SymInt&gt;, c10::SymInt), &amp;at::(anonymous namespace)::(anonymous namespace)::wrapper_CompositeImplicitAutograd__conv2d(at::Tensor const&amp;, at::Tensor const&amp;, std::optional&lt;at::Tensor&gt; const&amp;, c10::ArrayRef&lt;c10::SymInt&gt;, c10::ArrayRef&lt;c10::SymInt&gt;, c10::ArrayRef&lt;c10::SymInt&gt;, c10::SymInt)&gt;, at::Tensor, c10::guts::typelist::typelist&lt;at::Tensor const&amp;, at::Tensor const&amp;, std::optional&lt;at::Tensor&gt; const&amp;, c10::ArrayRef&lt;c10::SymInt&gt;, c10::ArrayRef&lt;c10::SymInt&gt;, c10::ArrayRef&lt;c10::SymInt&gt;, c10::SymInt&gt; &gt;, at::Tensor(at::Tensor const&amp;, at::Tensor const&amp;, std::optional&lt;at::Tensor&gt; const&amp;, c10::ArrayRef&lt;c10::SymInt&gt;, c10::ArrayRef&lt;c10::SymInt&gt;, c10::ArrayRef&lt;c10::SymInt&gt;, c10::SymInt)&gt;::call (libtorch_cpu.so) (127 samples, 1.97%)</title><rect x="15.7585%" y="372" width="1.9659%" height="15" fill="rgb(251,219,26)" fg:x="1018" fg:w="127"/><text x="16.0085%" y="382.50">c..</text></g><g><title>at::native::conv2d_symint (libtorch_cpu.so) (127 samples, 1.97%)</title><rect x="15.7585%" y="388" width="1.9659%" height="15" fill="rgb(231,119,3)" fg:x="1018" fg:w="127"/><text x="16.0085%" y="398.50">a..</text></g><g><title>at::_ops::convolution::call (libtorch_cpu.so) (127 samples, 1.97%)</title><rect x="15.7585%" y="404" width="1.9659%" height="15" fill="rgb(216,97,11)" fg:x="1018" fg:w="127"/><text x="16.0085%" y="414.50">a..</text></g><g><title>c10::impl::wrap_kernel_functor_unboxed_&lt;c10::impl::detail::WrapFunctionIntoFunctor_&lt;c10::CompileTimeFunctionPointer&lt;at::Tensor(c10::DispatchKeySet, at::Tensor const&amp;, at::Tensor const&amp;, std::optional&lt;at::Tensor&gt; const&amp;, c10::ArrayRef&lt;c10::SymInt&gt;, c10::ArrayRef&lt;c10::SymInt&gt;, c10::ArrayRef&lt;c10::SymInt&gt;, bool, c10::ArrayRef&lt;c10::SymInt&gt;, c10::SymInt), &amp;torch::autograd::VariableType::(anonymous namespace)::convolution(c10::DispatchKeySet, at::Tensor const&amp;, at::Tensor const&amp;, std::optional&lt;at::Tensor&gt; const&amp;, c10::ArrayRef&lt;c10::SymInt&gt;, c10::ArrayRef&lt;c10::SymInt&gt;, c10::ArrayRef&lt;c10::SymInt&gt;, bool, c10::ArrayRef&lt;c10::SymInt&gt;, c10::SymInt)&gt;, at::Tensor, c10::guts::typelist::typelist&lt;c10::DispatchKeySet, at::Tensor const&amp;, at::Tensor const&amp;, std::optional&lt;at::Tensor&gt; const&amp;, c10::ArrayRef&lt;c10::SymInt&gt;, c10::ArrayRef&lt;c10::SymInt&gt;, c10::ArrayRef&lt;c10::SymInt&gt;, bool, c10::ArrayRef&lt;c10::SymInt&gt;, c10::SymInt&gt; &gt;, at::Tensor(c10::DispatchKeySet, at::Tensor const&amp;, at::Tensor const&amp;, std::optional&lt;at::Tensor&gt; const&amp;, c10::ArrayRef&lt;c10::SymInt&gt;, c10::ArrayRef&lt;c10::SymInt&gt;, c10::ArrayRef&lt;c10::SymInt&gt;, bool, c10::ArrayRef&lt;c10::SymInt&gt;, c10::SymInt)&gt;::call (libtorch_cpu.so) (127 samples, 1.97%)</title><rect x="15.7585%" y="420" width="1.9659%" height="15" fill="rgb(223,59,9)" fg:x="1018" fg:w="127"/><text x="16.0085%" y="430.50">c..</text></g><g><title>torch::autograd::VariableType::(anonymous namespace)::convolution (libtorch_cpu.so) (127 samples, 1.97%)</title><rect x="15.7585%" y="436" width="1.9659%" height="15" fill="rgb(233,93,31)" fg:x="1018" fg:w="127"/><text x="16.0085%" y="446.50">t..</text></g><g><title>at::_ops::convolution::redispatch (libtorch_cpu.so) (127 samples, 1.97%)</title><rect x="15.7585%" y="452" width="1.9659%" height="15" fill="rgb(239,81,33)" fg:x="1018" fg:w="127"/><text x="16.0085%" y="462.50">a..</text></g><g><title>c10::impl::wrap_kernel_functor_unboxed_&lt;c10::impl::detail::WrapFunctionIntoFunctor_&lt;c10::CompileTimeFunctionPointer&lt;at::Tensor(at::Tensor const&amp;, at::Tensor const&amp;, std::optional&lt;at::Tensor&gt; const&amp;, c10::ArrayRef&lt;c10::SymInt&gt;, c10::ArrayRef&lt;c10::SymInt&gt;, c10::ArrayRef&lt;c10::SymInt&gt;, bool, c10::ArrayRef&lt;c10::SymInt&gt;, c10::SymInt), &amp;at::(anonymous namespace)::(anonymous namespace)::wrapper_CompositeExplicitAutograd__convolution(at::Tensor const&amp;, at::Tensor const&amp;, std::optional&lt;at::Tensor&gt; const&amp;, c10::ArrayRef&lt;c10::SymInt&gt;, c10::ArrayRef&lt;c10::SymInt&gt;, c10::ArrayRef&lt;c10::SymInt&gt;, bool, c10::ArrayRef&lt;c10::SymInt&gt;, c10::SymInt)&gt;, at::Tensor, c10::guts::typelist::typelist&lt;at::Tensor const&amp;, at::Tensor const&amp;, std::optional&lt;at::Tensor&gt; const&amp;, c10::ArrayRef&lt;c10::SymInt&gt;, c10::ArrayRef&lt;c10::SymInt&gt;, c10::ArrayRef&lt;c10::SymInt&gt;, bool, c10::ArrayRef&lt;c10::SymInt&gt;, c10::SymInt&gt; &gt;, at::Tensor(at::Tensor const&amp;, at::Tensor const&amp;, std::optional&lt;at::Tensor&gt; const&amp;, c10::ArrayRef&lt;c10::SymInt&gt;, c10::ArrayRef&lt;c10::SymInt&gt;, c10::ArrayRef&lt;c10::SymInt&gt;, bool, c10::ArrayRef&lt;c10::SymInt&gt;, c10::SymInt)&gt;::call (libtorch_cpu.so) (127 samples, 1.97%)</title><rect x="15.7585%" y="468" width="1.9659%" height="15" fill="rgb(213,120,34)" fg:x="1018" fg:w="127"/><text x="16.0085%" y="478.50">c..</text></g><g><title>at::(anonymous namespace)::(anonymous namespace)::wrapper_CompositeExplicitAutograd__convolution (libtorch_cpu.so) (127 samples, 1.97%)</title><rect x="15.7585%" y="484" width="1.9659%" height="15" fill="rgb(243,49,53)" fg:x="1018" fg:w="127"/><text x="16.0085%" y="494.50">a..</text></g><g><title>at::native::convolution (libtorch_cpu.so) (127 samples, 1.97%)</title><rect x="15.7585%" y="500" width="1.9659%" height="15" fill="rgb(247,216,33)" fg:x="1018" fg:w="127"/><text x="16.0085%" y="510.50">a..</text></g><g><title>at::_ops::_convolution::call (libtorch_cpu.so) (127 samples, 1.97%)</title><rect x="15.7585%" y="516" width="1.9659%" height="15" fill="rgb(226,26,14)" fg:x="1018" fg:w="127"/><text x="16.0085%" y="526.50">a..</text></g><g><title>c10::impl::wrap_kernel_functor_unboxed_&lt;c10::impl::detail::WrapFunctionIntoFunctor_&lt;c10::CompileTimeFunctionPointer&lt;at::Tensor(at::Tensor const&amp;, at::Tensor const&amp;, std::optional&lt;at::Tensor&gt; const&amp;, c10::ArrayRef&lt;c10::SymInt&gt;, c10::ArrayRef&lt;c10::SymInt&gt;, c10::ArrayRef&lt;c10::SymInt&gt;, bool, c10::ArrayRef&lt;c10::SymInt&gt;, c10::SymInt, bool, bool, bool, bool), &amp;at::(anonymous namespace)::(anonymous namespace)::wrapper_CompositeExplicitAutograd___convolution(at::Tensor const&amp;, at::Tensor const&amp;, std::optional&lt;at::Tensor&gt; const&amp;, c10::ArrayRef&lt;c10::SymInt&gt;, c10::ArrayRef&lt;c10::SymInt&gt;, c10::ArrayRef&lt;c10::SymInt&gt;, bool, c10::ArrayRef&lt;c10::SymInt&gt;, c10::SymInt, bool, bool, bool, bool)&gt;, at::Tensor, c10::guts::typelist::typelist&lt;at::Tensor const&amp;, at::Tensor const&amp;, std::optional&lt;at::Tensor&gt; const&amp;, c10::ArrayRef&lt;c10::SymInt&gt;, c10::ArrayRef&lt;c10::SymInt&gt;, c10::ArrayRef&lt;c10::SymInt&gt;, bool, c10::ArrayRef&lt;c10::SymInt&gt;, c10::SymInt, bool, bool, bool, bool&gt; &gt;, at::Tensor(at::Tensor const&amp;, at::Tensor const&amp;, std::optional&lt;at::Tensor&gt; const&amp;, c10::ArrayRef&lt;c10::SymInt&gt;, c10::ArrayRef&lt;c10::SymInt&gt;, c10::ArrayRef&lt;c10::SymInt&gt;, bool, c10::ArrayRef&lt;c10::SymInt&gt;, c10::SymInt, bool, bool, bool, bool)&gt;::call (libtorch_cpu.so) (127 samples, 1.97%)</title><rect x="15.7585%" y="532" width="1.9659%" height="15" fill="rgb(215,49,53)" fg:x="1018" fg:w="127"/><text x="16.0085%" y="542.50">c..</text></g><g><title>at::(anonymous namespace)::(anonymous namespace)::wrapper_CompositeExplicitAutograd___convolution (libtorch_cpu.so) (127 samples, 1.97%)</title><rect x="15.7585%" y="548" width="1.9659%" height="15" fill="rgb(245,162,40)" fg:x="1018" fg:w="127"/><text x="16.0085%" y="558.50">a..</text></g><g><title>at::native::_convolution (libtorch_cpu.so) (127 samples, 1.97%)</title><rect x="15.7585%" y="564" width="1.9659%" height="15" fill="rgb(229,68,17)" fg:x="1018" fg:w="127"/><text x="16.0085%" y="574.50">a..</text></g><g><title>at::_ops::mkldnn_convolution::call (libtorch_cpu.so) (127 samples, 1.97%)</title><rect x="15.7585%" y="580" width="1.9659%" height="15" fill="rgb(213,182,10)" fg:x="1018" fg:w="127"/><text x="16.0085%" y="590.50">a..</text></g><g><title>c10::impl::wrap_kernel_functor_unboxed_&lt;c10::impl::detail::WrapFunctionIntoFunctor_&lt;c10::CompileTimeFunctionPointer&lt;at::Tensor(at::Tensor const&amp;, at::Tensor const&amp;, std::optional&lt;at::Tensor&gt; const&amp;, c10::ArrayRef&lt;c10::SymInt&gt;, c10::ArrayRef&lt;c10::SymInt&gt;, c10::ArrayRef&lt;c10::SymInt&gt;, c10::SymInt), &amp;at::(anonymous namespace)::(anonymous namespace)::wrapper_CompositeExplicitAutograd__mkldnn_convolution(at::Tensor const&amp;, at::Tensor const&amp;, std::optional&lt;at::Tensor&gt; const&amp;, c10::ArrayRef&lt;c10::SymInt&gt;, c10::ArrayRef&lt;c10::SymInt&gt;, c10::ArrayRef&lt;c10::SymInt&gt;, c10::SymInt)&gt;, at::Tensor, c10::guts::typelist::typelist&lt;at::Tensor const&amp;, at::Tensor const&amp;, std::optional&lt;at::Tensor&gt; const&amp;, c10::ArrayRef&lt;c10::SymInt&gt;, c10::ArrayRef&lt;c10::SymInt&gt;, c10::ArrayRef&lt;c10::SymInt&gt;, c10::SymInt&gt; &gt;, at::Tensor(at::Tensor const&amp;, at::Tensor const&amp;, std::optional&lt;at::Tensor&gt; const&amp;, c10::ArrayRef&lt;c10::SymInt&gt;, c10::ArrayRef&lt;c10::SymInt&gt;, c10::ArrayRef&lt;c10::SymInt&gt;, c10::SymInt)&gt;::call (libtorch_cpu.so) (127 samples, 1.97%)</title><rect x="15.7585%" y="596" width="1.9659%" height="15" fill="rgb(245,125,30)" fg:x="1018" fg:w="127"/><text x="16.0085%" y="606.50">c..</text></g><g><title>at::(anonymous namespace)::(anonymous namespace)::wrapper_CompositeExplicitAutograd__mkldnn_convolution (libtorch_cpu.so) (127 samples, 1.97%)</title><rect x="15.7585%" y="612" width="1.9659%" height="15" fill="rgb(232,202,2)" fg:x="1018" fg:w="127"/><text x="16.0085%" y="622.50">a..</text></g><g><title>at::native::mkldnn_convolution (libtorch_cpu.so) (127 samples, 1.97%)</title><rect x="15.7585%" y="628" width="1.9659%" height="15" fill="rgb(237,140,51)" fg:x="1018" fg:w="127"/><text x="16.0085%" y="638.50">a..</text></g><g><title>at::native::_mkldnn_convolution (libtorch_cpu.so) (127 samples, 1.97%)</title><rect x="15.7585%" y="644" width="1.9659%" height="15" fill="rgb(236,157,25)" fg:x="1018" fg:w="127"/><text x="16.0085%" y="654.50">a..</text></g><g><title>at::native::mkldnn_to_dense (libtorch_cpu.so) (20 samples, 0.31%)</title><rect x="17.4149%" y="660" width="0.3096%" height="15" fill="rgb(219,209,0)" fg:x="1125" fg:w="20"/><text x="17.6649%" y="670.50"></text></g><g><title>ideep::tensor::to_public (libtorch_cpu.so) (19 samples, 0.29%)</title><rect x="17.4303%" y="676" width="0.2941%" height="15" fill="rgb(240,116,54)" fg:x="1126" fg:w="19"/><text x="17.6803%" y="686.50"></text></g><g><title>ideep::tensor::reorder_to (libtorch_cpu.so) (19 samples, 0.29%)</title><rect x="17.4303%" y="692" width="0.2941%" height="15" fill="rgb(216,10,36)" fg:x="1126" fg:w="19"/><text x="17.6803%" y="702.50"></text></g><g><title>0x77d25141ca9d (libgomp-c9fef706.so.1) (7 samples, 0.11%)</title><rect x="17.7709%" y="596" width="0.1084%" height="15" fill="rgb(222,72,44)" fg:x="1148" fg:w="7"/><text x="18.0209%" y="606.50"></text></g><g><title>0x77d25141e02a (libgomp-c9fef706.so.1) (7 samples, 0.11%)</title><rect x="17.7709%" y="612" width="0.1084%" height="15" fill="rgb(232,159,9)" fg:x="1148" fg:w="7"/><text x="18.0209%" y="622.50"></text></g><g><title>at::native::batch_norm_cpu_transform_input_template&lt;float, float&gt; (libtorch_cpu.so) (15 samples, 0.23%)</title><rect x="17.7709%" y="564" width="0.2322%" height="15" fill="rgb(210,39,32)" fg:x="1148" fg:w="15"/><text x="18.0209%" y="574.50"></text></g><g><title>at::native::(anonymous namespace)::batch_norm_cpu_kernel (libtorch_cpu.so) (15 samples, 0.23%)</title><rect x="17.7709%" y="580" width="0.2322%" height="15" fill="rgb(216,194,45)" fg:x="1148" fg:w="15"/><text x="18.0209%" y="590.50"></text></g><g><title>GOMP_parallel (libgomp-c9fef706.so.1) (8 samples, 0.12%)</title><rect x="17.8793%" y="596" width="0.1238%" height="15" fill="rgb(218,18,35)" fg:x="1155" fg:w="8"/><text x="18.1293%" y="606.50"></text></g><g><title>forward (torchvision/models/resnet.py:93) (68 samples, 1.05%)</title><rect x="17.7245%" y="260" width="1.0526%" height="15" fill="rgb(207,83,51)" fg:x="1145" fg:w="68"/><text x="17.9745%" y="270.50"></text></g><g><title>_wrapped_call_impl (torch/nn/modules/module.py:1751) (68 samples, 1.05%)</title><rect x="17.7245%" y="276" width="1.0526%" height="15" fill="rgb(225,63,43)" fg:x="1145" fg:w="68"/><text x="17.9745%" y="286.50"></text></g><g><title>_call_impl (torch/nn/modules/module.py:1762) (68 samples, 1.05%)</title><rect x="17.7245%" y="292" width="1.0526%" height="15" fill="rgb(207,57,36)" fg:x="1145" fg:w="68"/><text x="17.9745%" y="302.50"></text></g><g><title>forward (torch/nn/modules/batchnorm.py:193) (66 samples, 1.02%)</title><rect x="17.7554%" y="308" width="1.0217%" height="15" fill="rgb(216,99,33)" fg:x="1147" fg:w="66"/><text x="18.0054%" y="318.50"></text></g><g><title>batch_norm (torch/nn/functional.py:2831) (66 samples, 1.02%)</title><rect x="17.7554%" y="324" width="1.0217%" height="15" fill="rgb(225,42,16)" fg:x="1147" fg:w="66"/><text x="18.0054%" y="334.50"></text></g><g><title>torch::autograd::THPVariable_batch_norm (libtorch_python.so) (66 samples, 1.02%)</title><rect x="17.7554%" y="340" width="1.0217%" height="15" fill="rgb(220,201,45)" fg:x="1147" fg:w="66"/><text x="18.0054%" y="350.50"></text></g><g><title>at::_ops::batch_norm::call (libtorch_cpu.so) (65 samples, 1.01%)</title><rect x="17.7709%" y="356" width="1.0062%" height="15" fill="rgb(225,33,4)" fg:x="1148" fg:w="65"/><text x="18.0209%" y="366.50"></text></g><g><title>c10::impl::wrap_kernel_functor_unboxed_&lt;c10::impl::detail::WrapFunctionIntoFunctor_&lt;c10::CompileTimeFunctionPointer&lt;at::Tensor(at::Tensor const&amp;, std::optional&lt;at::Tensor&gt; const&amp;, std::optional&lt;at::Tensor&gt; const&amp;, std::optional&lt;at::Tensor&gt; const&amp;, std::optional&lt;at::Tensor&gt; const&amp;, bool, double, double, bool), &amp;at::(anonymous namespace)::(anonymous namespace)::wrapper_CompositeImplicitAutograd__batch_norm(at::Tensor const&amp;, std::optional&lt;at::Tensor&gt; const&amp;, std::optional&lt;at::Tensor&gt; const&amp;, std::optional&lt;at::Tensor&gt; const&amp;, std::optional&lt;at::Tensor&gt; const&amp;, bool, double, double, bool)&gt;, at::Tensor, c10::guts::typelist::typelist&lt;at::Tensor const&amp;, std::optional&lt;at::Tensor&gt; const&amp;, std::optional&lt;at::Tensor&gt; const&amp;, std::optional&lt;at::Tensor&gt; const&amp;, std::optional&lt;at::Tensor&gt; const&amp;, bool, double, double, bool&gt; &gt;, at::Tensor(at::Tensor const&amp;, std::optional&lt;at::Tensor&gt; const&amp;, std::optional&lt;at::Tensor&gt; const&amp;, std::optional&lt;at::Tensor&gt; const&amp;, std::optional&lt;at::Tensor&gt; const&amp;, bool, double, double, bool)&gt;::call (libtorch_cpu.so) (65 samples, 1.01%)</title><rect x="17.7709%" y="372" width="1.0062%" height="15" fill="rgb(224,33,50)" fg:x="1148" fg:w="65"/><text x="18.0209%" y="382.50"></text></g><g><title>at::native::batch_norm (libtorch_cpu.so) (65 samples, 1.01%)</title><rect x="17.7709%" y="388" width="1.0062%" height="15" fill="rgb(246,198,51)" fg:x="1148" fg:w="65"/><text x="18.0209%" y="398.50"></text></g><g><title>at::_ops::_batch_norm_impl_index::call (libtorch_cpu.so) (65 samples, 1.01%)</title><rect x="17.7709%" y="404" width="1.0062%" height="15" fill="rgb(205,22,4)" fg:x="1148" fg:w="65"/><text x="18.0209%" y="414.50"></text></g><g><title>c10::impl::wrap_kernel_functor_unboxed_&lt;c10::impl::detail::WrapFunctionIntoFunctor_&lt;c10::CompileTimeFunctionPointer&lt;std::tuple&lt;at::Tensor, at::Tensor, at::Tensor, at::Tensor, long&gt; (at::Tensor const&amp;, std::optional&lt;at::Tensor&gt; const&amp;, std::optional&lt;at::Tensor&gt; const&amp;, std::optional&lt;at::Tensor&gt; const&amp;, std::optional&lt;at::Tensor&gt; const&amp;, bool, double, double, bool), &amp;at::(anonymous namespace)::(anonymous namespace)::wrapper_CompositeImplicitAutograd___batch_norm_impl_index(at::Tensor const&amp;, std::optional&lt;at::Tensor&gt; const&amp;, std::optional&lt;at::Tensor&gt; const&amp;, std::optional&lt;at::Tensor&gt; const&amp;, std::optional&lt;at::Tensor&gt; const&amp;, bool, double, double, bool)&gt;, std::tuple&lt;at::Tensor, at::Tensor, at::Tensor, at::Tensor, long&gt;, c10::guts::typelist::typelist&lt;at::Tensor const&amp;, std::optional&lt;at::Tensor&gt; const&amp;, std::optional&lt;at::Tensor&gt; const&amp;, std::optional&lt;at::Tensor&gt; const&amp;, std::optional&lt;at::Tensor&gt; const&amp;, bool, double, double, bool&gt; &gt;, std::tuple&lt;at::Tensor, at::Tensor, at::Tensor, at::Tensor, long&gt; (at::Tensor const&amp;, std::optional&lt;at::Tensor&gt; const&amp;, std::optional&lt;at::Tensor&gt; const&amp;, std::optional&lt;at::Tensor&gt; const&amp;, std::optional&lt;at::Tensor&gt; const&amp;, bool, double, double, bool)&gt;::call (libtorch_cpu.so) (65 samples, 1.01%)</title><rect x="17.7709%" y="420" width="1.0062%" height="15" fill="rgb(206,3,8)" fg:x="1148" fg:w="65"/><text x="18.0209%" y="430.50"></text></g><g><title>at::native::_batch_norm_impl_index (libtorch_cpu.so) (65 samples, 1.01%)</title><rect x="17.7709%" y="436" width="1.0062%" height="15" fill="rgb(251,23,15)" fg:x="1148" fg:w="65"/><text x="18.0209%" y="446.50"></text></g><g><title>at::_ops::native_batch_norm::call (libtorch_cpu.so) (65 samples, 1.01%)</title><rect x="17.7709%" y="452" width="1.0062%" height="15" fill="rgb(252,88,28)" fg:x="1148" fg:w="65"/><text x="18.0209%" y="462.50"></text></g><g><title>c10::impl::wrap_kernel_functor_unboxed_&lt;c10::impl::detail::WrapFunctionIntoFunctor_&lt;c10::CompileTimeFunctionPointer&lt;std::tuple&lt;at::Tensor, at::Tensor, at::Tensor&gt; (c10::DispatchKeySet, at::Tensor const&amp;, std::optional&lt;at::Tensor&gt; const&amp;, std::optional&lt;at::Tensor&gt; const&amp;, std::optional&lt;at::Tensor&gt; const&amp;, std::optional&lt;at::Tensor&gt; const&amp;, bool, double, double), &amp;torch::autograd::VariableType::(anonymous namespace)::native_batch_norm(c10::DispatchKeySet, at::Tensor const&amp;, std::optional&lt;at::Tensor&gt; const&amp;, std::optional&lt;at::Tensor&gt; const&amp;, std::optional&lt;at::Tensor&gt; const&amp;, std::optional&lt;at::Tensor&gt; const&amp;, bool, double, double)&gt;, std::tuple&lt;at::Tensor, at::Tensor, at::Tensor&gt;, c10::guts::typelist::typelist&lt;c10::DispatchKeySet, at::Tensor const&amp;, std::optional&lt;at::Tensor&gt; const&amp;, std::optional&lt;at::Tensor&gt; const&amp;, std::optional&lt;at::Tensor&gt; const&amp;, std::optional&lt;at::Tensor&gt; const&amp;, bool, double, double&gt; &gt;, std::tuple&lt;at::Tensor, at::Tensor, at::Tensor&gt; (c10::DispatchKeySet, at::Tensor const&amp;, std::optional&lt;at::Tensor&gt; const&amp;, std::optional&lt;at::Tensor&gt; const&amp;, std::optional&lt;at::Tensor&gt; const&amp;, std::optional&lt;at::Tensor&gt; const&amp;, bool, double, double)&gt;::call (libtorch_cpu.so) (65 samples, 1.01%)</title><rect x="17.7709%" y="468" width="1.0062%" height="15" fill="rgb(212,127,14)" fg:x="1148" fg:w="65"/><text x="18.0209%" y="478.50"></text></g><g><title>torch::autograd::VariableType::(anonymous namespace)::native_batch_norm (libtorch_cpu.so) (65 samples, 1.01%)</title><rect x="17.7709%" y="484" width="1.0062%" height="15" fill="rgb(247,145,37)" fg:x="1148" fg:w="65"/><text x="18.0209%" y="494.50"></text></g><g><title>at::_ops::native_batch_norm::redispatch (libtorch_cpu.so) (65 samples, 1.01%)</title><rect x="17.7709%" y="500" width="1.0062%" height="15" fill="rgb(209,117,53)" fg:x="1148" fg:w="65"/><text x="18.0209%" y="510.50"></text></g><g><title>c10::impl::wrap_kernel_functor_unboxed_&lt;c10::impl::detail::WrapFunctionIntoFunctor_&lt;c10::CompileTimeFunctionPointer&lt;std::tuple&lt;at::Tensor, at::Tensor, at::Tensor&gt; (at::Tensor const&amp;, std::optional&lt;at::Tensor&gt; const&amp;, std::optional&lt;at::Tensor&gt; const&amp;, std::optional&lt;at::Tensor&gt; const&amp;, std::optional&lt;at::Tensor&gt; const&amp;, bool, double, double), &amp;at::(anonymous namespace)::(anonymous namespace)::wrapper_CPU__native_batch_norm(at::Tensor const&amp;, std::optional&lt;at::Tensor&gt; const&amp;, std::optional&lt;at::Tensor&gt; const&amp;, std::optional&lt;at::Tensor&gt; const&amp;, std::optional&lt;at::Tensor&gt; const&amp;, bool, double, double)&gt;, std::tuple&lt;at::Tensor, at::Tensor, at::Tensor&gt;, c10::guts::typelist::typelist&lt;at::Tensor const&amp;, std::optional&lt;at::Tensor&gt; const&amp;, std::optional&lt;at::Tensor&gt; const&amp;, std::optional&lt;at::Tensor&gt; const&amp;, std::optional&lt;at::Tensor&gt; const&amp;, bool, double, double&gt; &gt;, std::tuple&lt;at::Tensor, at::Tensor, at::Tensor&gt; (at::Tensor const&amp;, std::optional&lt;at::Tensor&gt; const&amp;, std::optional&lt;at::Tensor&gt; const&amp;, std::optional&lt;at::Tensor&gt; const&amp;, std::optional&lt;at::Tensor&gt; const&amp;, bool, double, double)&gt;::call (libtorch_cpu.so) (65 samples, 1.01%)</title><rect x="17.7709%" y="516" width="1.0062%" height="15" fill="rgb(212,90,42)" fg:x="1148" fg:w="65"/><text x="18.0209%" y="526.50"></text></g><g><title>at::native::batch_norm_cpu (libtorch_cpu.so) (65 samples, 1.01%)</title><rect x="17.7709%" y="532" width="1.0062%" height="15" fill="rgb(218,164,37)" fg:x="1148" fg:w="65"/><text x="18.0209%" y="542.50"></text></g><g><title>at::native::batch_norm_cpu_out (libtorch_cpu.so) (65 samples, 1.01%)</title><rect x="17.7709%" y="548" width="1.0062%" height="15" fill="rgb(246,65,34)" fg:x="1148" fg:w="65"/><text x="18.0209%" y="558.50"></text></g><g><title>at::native::batch_norm_cpu_update_stats_template&lt;float, float, at::native::InvStd&gt; (libtorch_cpu.so) (50 samples, 0.77%)</title><rect x="18.0031%" y="564" width="0.7740%" height="15" fill="rgb(231,100,33)" fg:x="1163" fg:w="50"/><text x="18.2531%" y="574.50"></text></g><g><title>at::native::(anonymous namespace)::batch_norm_cpu_collect_stats_kernel (libtorch_cpu.so) (39 samples, 0.60%)</title><rect x="18.1734%" y="580" width="0.6037%" height="15" fill="rgb(228,126,14)" fg:x="1174" fg:w="39"/><text x="18.4234%" y="590.50"></text></g><g><title>GOMP_parallel (libgomp-c9fef706.so.1) (38 samples, 0.59%)</title><rect x="18.1889%" y="596" width="0.5882%" height="15" fill="rgb(215,173,21)" fg:x="1175" fg:w="38"/><text x="18.4389%" y="606.50"></text></g><g><title>at::internal::invoke_parallel&lt;at::parallel_for&lt;at::native::(anonymous namespace)::batch_norm_cpu_collect_stats_contiguous_impl&lt;float&gt;(at::Tensor&amp;, at::Tensor&amp;, at::Tensor const&amp;)::{lambda(long, long)#1}&gt;(long, long, long, at::native::(anonymous namespace)::batch_norm_cpu_collect_stats_contiguous_impl&lt;float&gt;(at::Tensor&amp;, at::Tensor&amp;, at::Tensor const&amp;)::{lambda(long, long)#1} const&amp;)::{lambda(long, long)#1}&gt; (libtorch_cpu.so) (33 samples, 0.51%)</title><rect x="18.2663%" y="612" width="0.5108%" height="15" fill="rgb(210,6,40)" fg:x="1180" fg:w="33"/><text x="18.5163%" y="622.50"></text></g><g><title>0x77d25141ca9d (libgomp-c9fef706.so.1) (12 samples, 0.19%)</title><rect x="18.7771%" y="500" width="0.1858%" height="15" fill="rgb(212,48,18)" fg:x="1213" fg:w="12"/><text x="19.0271%" y="510.50"></text></g><g><title>0x77d25141e02a (libgomp-c9fef706.so.1) (9 samples, 0.14%)</title><rect x="18.8235%" y="516" width="0.1393%" height="15" fill="rgb(230,214,11)" fg:x="1216" fg:w="9"/><text x="19.0735%" y="526.50"></text></g><g><title>forward (torchvision/models/resnet.py:94) (21 samples, 0.33%)</title><rect x="18.7771%" y="260" width="0.3251%" height="15" fill="rgb(254,105,39)" fg:x="1213" fg:w="21"/><text x="19.0271%" y="270.50"></text></g><g><title>_wrapped_call_impl (torch/nn/modules/module.py:1751) (21 samples, 0.33%)</title><rect x="18.7771%" y="276" width="0.3251%" height="15" fill="rgb(245,158,5)" fg:x="1213" fg:w="21"/><text x="19.0271%" y="286.50"></text></g><g><title>_call_impl (torch/nn/modules/module.py:1762) (21 samples, 0.33%)</title><rect x="18.7771%" y="292" width="0.3251%" height="15" fill="rgb(249,208,11)" fg:x="1213" fg:w="21"/><text x="19.0271%" y="302.50"></text></g><g><title>forward (torch/nn/modules/activation.py:133) (21 samples, 0.33%)</title><rect x="18.7771%" y="308" width="0.3251%" height="15" fill="rgb(210,39,28)" fg:x="1213" fg:w="21"/><text x="19.0271%" y="318.50"></text></g><g><title>relu (torch/nn/functional.py:1702) (21 samples, 0.33%)</title><rect x="18.7771%" y="324" width="0.3251%" height="15" fill="rgb(211,56,53)" fg:x="1213" fg:w="21"/><text x="19.0271%" y="334.50"></text></g><g><title>torch::autograd::THPVariable_relu_ (libtorch_python.so) (21 samples, 0.33%)</title><rect x="18.7771%" y="340" width="0.3251%" height="15" fill="rgb(226,201,30)" fg:x="1213" fg:w="21"/><text x="19.0271%" y="350.50"></text></g><g><title>at::_ops::relu_::call (libtorch_cpu.so) (21 samples, 0.33%)</title><rect x="18.7771%" y="356" width="0.3251%" height="15" fill="rgb(239,101,34)" fg:x="1213" fg:w="21"/><text x="19.0271%" y="366.50"></text></g><g><title>torch::autograd::VariableType::(anonymous namespace)::relu_ (libtorch_cpu.so) (21 samples, 0.33%)</title><rect x="18.7771%" y="372" width="0.3251%" height="15" fill="rgb(226,209,5)" fg:x="1213" fg:w="21"/><text x="19.0271%" y="382.50"></text></g><g><title>c10::impl::wrap_kernel_functor_unboxed_&lt;c10::impl::detail::WrapFunctionIntoFunctor_&lt;c10::CompileTimeFunctionPointer&lt;at::Tensor&amp; (c10::DispatchKeySet, at::Tensor&amp;), &amp;torch::ADInplaceOrView::(anonymous namespace)::relu_(c10::DispatchKeySet, at::Tensor&amp;)&gt;, at::Tensor&amp;, c10::guts::typelist::typelist&lt;c10::DispatchKeySet, at::Tensor&amp;&gt; &gt;, at::Tensor&amp; (c10::DispatchKeySet, at::Tensor&amp;)&gt;::call (libtorch_cpu.so) (21 samples, 0.33%)</title><rect x="18.7771%" y="388" width="0.3251%" height="15" fill="rgb(250,105,47)" fg:x="1213" fg:w="21"/><text x="19.0271%" y="398.50"></text></g><g><title>at::native::relu_ (libtorch_cpu.so) (21 samples, 0.33%)</title><rect x="18.7771%" y="404" width="0.3251%" height="15" fill="rgb(230,72,3)" fg:x="1213" fg:w="21"/><text x="19.0271%" y="414.50"></text></g><g><title>at::_ops::clamp_min_::call (libtorch_cpu.so) (21 samples, 0.33%)</title><rect x="18.7771%" y="420" width="0.3251%" height="15" fill="rgb(232,218,39)" fg:x="1213" fg:w="21"/><text x="19.0271%" y="430.50"></text></g><g><title>at::(anonymous namespace)::wrapper_CPU_clamp_min_ (libtorch_cpu.so) (21 samples, 0.33%)</title><rect x="18.7771%" y="436" width="0.3251%" height="15" fill="rgb(248,166,6)" fg:x="1213" fg:w="21"/><text x="19.0271%" y="446.50"></text></g><g><title>at::native::structured_clamp_min_out::impl (libtorch_cpu.so) (21 samples, 0.33%)</title><rect x="18.7771%" y="452" width="0.3251%" height="15" fill="rgb(247,89,20)" fg:x="1213" fg:w="21"/><text x="19.0271%" y="462.50"></text></g><g><title>at::native::(anonymous namespace)::clamp_min_scalar_kernel_impl (libtorch_cpu.so) (21 samples, 0.33%)</title><rect x="18.7771%" y="468" width="0.3251%" height="15" fill="rgb(248,130,54)" fg:x="1213" fg:w="21"/><text x="19.0271%" y="478.50"></text></g><g><title>at::TensorIteratorBase::for_each (libtorch_cpu.so) (21 samples, 0.33%)</title><rect x="18.7771%" y="484" width="0.3251%" height="15" fill="rgb(234,196,4)" fg:x="1213" fg:w="21"/><text x="19.0271%" y="494.50"></text></g><g><title>GOMP_parallel (libgomp-c9fef706.so.1) (9 samples, 0.14%)</title><rect x="18.9628%" y="500" width="0.1393%" height="15" fill="rgb(250,143,31)" fg:x="1225" fg:w="9"/><text x="19.2128%" y="510.50"></text></g><g><title>0x77d25141ca9d (libgomp-c9fef706.so.1) (10 samples, 0.15%)</title><rect x="19.1176%" y="788" width="0.1548%" height="15" fill="rgb(211,110,34)" fg:x="1235" fg:w="10"/><text x="19.3676%" y="798.50"></text></g><g><title>0x77d25141e02a (libgomp-c9fef706.so.1) (10 samples, 0.15%)</title><rect x="19.1176%" y="804" width="0.1548%" height="15" fill="rgb(215,124,48)" fg:x="1235" fg:w="10"/><text x="19.3676%" y="814.50"></text></g><g><title>dnnl::primitive::execute (libtorch_cpu.so) (134 samples, 2.07%)</title><rect x="19.1176%" y="692" width="2.0743%" height="15" fill="rgb(216,46,13)" fg:x="1235" fg:w="134"/><text x="19.3676%" y="702.50">d..</text></g><g><title>dnnl_primitive_execute (libtorch_cpu.so) (134 samples, 2.07%)</title><rect x="19.1176%" y="708" width="2.0743%" height="15" fill="rgb(205,184,25)" fg:x="1235" fg:w="134"/><text x="19.3676%" y="718.50">d..</text></g><g><title>dnnl::impl::primitive_execute (libtorch_cpu.so) (134 samples, 2.07%)</title><rect x="19.1176%" y="724" width="2.0743%" height="15" fill="rgb(228,1,10)" fg:x="1235" fg:w="134"/><text x="19.3676%" y="734.50">d..</text></g><g><title>dnnl_primitive::execute (libtorch_cpu.so) (134 samples, 2.07%)</title><rect x="19.1176%" y="740" width="2.0743%" height="15" fill="rgb(213,116,27)" fg:x="1235" fg:w="134"/><text x="19.3676%" y="750.50">d..</text></g><g><title>dnnl::impl::cpu::x64::jit_avx2_convolution_fwd_t::execute (libtorch_cpu.so) (134 samples, 2.07%)</title><rect x="19.1176%" y="756" width="2.0743%" height="15" fill="rgb(241,95,50)" fg:x="1235" fg:w="134"/><text x="19.3676%" y="766.50">d..</text></g><g><title>dnnl::impl::cpu::x64::jit_avx2_convolution_fwd_t::execute_forward (libtorch_cpu.so) (134 samples, 2.07%)</title><rect x="19.1176%" y="772" width="2.0743%" height="15" fill="rgb(238,48,32)" fg:x="1235" fg:w="134"/><text x="19.3676%" y="782.50">d..</text></g><g><title>GOMP_parallel (libgomp-c9fef706.so.1) (124 samples, 1.92%)</title><rect x="19.2724%" y="788" width="1.9195%" height="15" fill="rgb(235,113,49)" fg:x="1245" fg:w="124"/><text x="19.5224%" y="798.50">G..</text></g><g><title>dnnl::impl::parallel (libtorch_cpu.so) (122 samples, 1.89%)</title><rect x="19.3034%" y="804" width="1.8885%" height="15" fill="rgb(205,127,43)" fg:x="1247" fg:w="122"/><text x="19.5534%" y="814.50">d..</text></g><g><title>dnnl::impl::cpu::x64::jit_avx2_convolution_fwd_t::execute_forward(dnnl::impl::exec_ctx_t const&amp;) const::{lambda(int, int)#1}::operator() const (libtorch_cpu.so) (122 samples, 1.89%)</title><rect x="19.3034%" y="820" width="1.8885%" height="15" fill="rgb(250,162,2)" fg:x="1247" fg:w="122"/><text x="19.5534%" y="830.50">d..</text></g><g><title>0x77d25141de62 (libgomp-c9fef706.so.1) (8 samples, 0.12%)</title><rect x="21.2693%" y="836" width="0.1238%" height="15" fill="rgb(220,13,41)" fg:x="1374" fg:w="8"/><text x="21.5193%" y="846.50"></text></g><g><title>0x77d25141c19a (libgomp-c9fef706.so.1) (9 samples, 0.14%)</title><rect x="21.2693%" y="820" width="0.1393%" height="15" fill="rgb(249,221,25)" fg:x="1374" fg:w="9"/><text x="21.5193%" y="830.50"></text></g><g><title>dnnl::impl::cpu::x64::jit_blk_reorder_t::execute (libtorch_cpu.so) (28 samples, 0.43%)</title><rect x="21.2074%" y="788" width="0.4334%" height="15" fill="rgb(215,208,19)" fg:x="1370" fg:w="28"/><text x="21.4574%" y="798.50"></text></g><g><title>GOMP_parallel (libgomp-c9fef706.so.1) (24 samples, 0.37%)</title><rect x="21.2693%" y="804" width="0.3715%" height="15" fill="rgb(236,175,2)" fg:x="1374" fg:w="24"/><text x="21.5193%" y="814.50"></text></g><g><title>dnnl::impl::parallel (libtorch_cpu.so) (15 samples, 0.23%)</title><rect x="21.4087%" y="820" width="0.2322%" height="15" fill="rgb(241,52,2)" fg:x="1383" fg:w="15"/><text x="21.6587%" y="830.50"></text></g><g><title>dnnl::impl::primitive_execute (libtorch_cpu.so) (37 samples, 0.57%)</title><rect x="21.2074%" y="756" width="0.5728%" height="15" fill="rgb(248,140,14)" fg:x="1370" fg:w="37"/><text x="21.4574%" y="766.50"></text></g><g><title>dnnl_primitive::execute (libtorch_cpu.so) (37 samples, 0.57%)</title><rect x="21.2074%" y="772" width="0.5728%" height="15" fill="rgb(253,22,42)" fg:x="1370" fg:w="37"/><text x="21.4574%" y="782.50"></text></g><g><title>dnnl::impl::cpu::x64::jit_uni_reorder_t::execute (libtorch_cpu.so) (9 samples, 0.14%)</title><rect x="21.6409%" y="788" width="0.1393%" height="15" fill="rgb(234,61,47)" fg:x="1398" fg:w="9"/><text x="21.8909%" y="798.50"></text></g><g><title>dnnl::impl::cpu::x64::jit_uni_reorder_t::omp_driver (libtorch_cpu.so) (9 samples, 0.14%)</title><rect x="21.6409%" y="804" width="0.1393%" height="15" fill="rgb(208,226,15)" fg:x="1398" fg:w="9"/><text x="21.8909%" y="814.50"></text></g><g><title>at::native::_mkldnn_convolution_out (libtorch_cpu.so) (173 samples, 2.68%)</title><rect x="19.1176%" y="660" width="2.6780%" height="15" fill="rgb(217,221,4)" fg:x="1235" fg:w="173"/><text x="19.3676%" y="670.50">at..</text></g><g><title>ideep::convolution_forward::compute_dispatch&lt;false, true, true&gt; (libtorch_cpu.so) (173 samples, 2.68%)</title><rect x="19.1176%" y="676" width="2.6780%" height="15" fill="rgb(212,174,34)" fg:x="1235" fg:w="173"/><text x="19.3676%" y="686.50">id..</text></g><g><title>ideep::tensor::reorder_if_differ_in (libtorch_cpu.so) (38 samples, 0.59%)</title><rect x="21.2074%" y="692" width="0.5882%" height="15" fill="rgb(253,83,4)" fg:x="1370" fg:w="38"/><text x="21.4574%" y="702.50"></text></g><g><title>ideep::tensor::reorder_to (libtorch_cpu.so) (38 samples, 0.59%)</title><rect x="21.2074%" y="708" width="0.5882%" height="15" fill="rgb(250,195,49)" fg:x="1370" fg:w="38"/><text x="21.4574%" y="718.50"></text></g><g><title>dnnl::primitive::execute (libtorch_cpu.so) (38 samples, 0.59%)</title><rect x="21.2074%" y="724" width="0.5882%" height="15" fill="rgb(241,192,25)" fg:x="1370" fg:w="38"/><text x="21.4574%" y="734.50"></text></g><g><title>dnnl_primitive_execute (libtorch_cpu.so) (38 samples, 0.59%)</title><rect x="21.2074%" y="740" width="0.5882%" height="15" fill="rgb(208,124,10)" fg:x="1370" fg:w="38"/><text x="21.4574%" y="750.50"></text></g><g><title>forward (torchvision/models/resnet.py:96) (192 samples, 2.97%)</title><rect x="19.1022%" y="260" width="2.9721%" height="15" fill="rgb(222,33,0)" fg:x="1234" fg:w="192"/><text x="19.3522%" y="270.50">for..</text></g><g><title>_wrapped_call_impl (torch/nn/modules/module.py:1751) (192 samples, 2.97%)</title><rect x="19.1022%" y="276" width="2.9721%" height="15" fill="rgb(234,209,28)" fg:x="1234" fg:w="192"/><text x="19.3522%" y="286.50">_wr..</text></g><g><title>_call_impl (torch/nn/modules/module.py:1762) (192 samples, 2.97%)</title><rect x="19.1022%" y="292" width="2.9721%" height="15" fill="rgb(224,11,23)" fg:x="1234" fg:w="192"/><text x="19.3522%" y="302.50">_ca..</text></g><g><title>forward (torch/nn/modules/conv.py:554) (192 samples, 2.97%)</title><rect x="19.1022%" y="308" width="2.9721%" height="15" fill="rgb(232,99,1)" fg:x="1234" fg:w="192"/><text x="19.3522%" y="318.50">for..</text></g><g><title>_conv_forward (torch/nn/modules/conv.py:550) (192 samples, 2.97%)</title><rect x="19.1022%" y="324" width="2.9721%" height="15" fill="rgb(237,95,45)" fg:x="1234" fg:w="192"/><text x="19.3522%" y="334.50">_co..</text></g><g><title>torch::autograd::THPVariable_conv2d (libtorch_python.so) (192 samples, 2.97%)</title><rect x="19.1022%" y="340" width="2.9721%" height="15" fill="rgb(208,109,11)" fg:x="1234" fg:w="192"/><text x="19.3522%" y="350.50">tor..</text></g><g><title>at::_ops::conv2d::call (libtorch_cpu.so) (192 samples, 2.97%)</title><rect x="19.1022%" y="356" width="2.9721%" height="15" fill="rgb(216,190,48)" fg:x="1234" fg:w="192"/><text x="19.3522%" y="366.50">at:..</text></g><g><title>c10::impl::wrap_kernel_functor_unboxed_&lt;c10::impl::detail::WrapFunctionIntoFunctor_&lt;c10::CompileTimeFunctionPointer&lt;at::Tensor(at::Tensor const&amp;, at::Tensor const&amp;, std::optional&lt;at::Tensor&gt; const&amp;, c10::ArrayRef&lt;c10::SymInt&gt;, c10::ArrayRef&lt;c10::SymInt&gt;, c10::ArrayRef&lt;c10::SymInt&gt;, c10::SymInt), &amp;at::(anonymous namespace)::(anonymous namespace)::wrapper_CompositeImplicitAutograd__conv2d(at::Tensor const&amp;, at::Tensor const&amp;, std::optional&lt;at::Tensor&gt; const&amp;, c10::ArrayRef&lt;c10::SymInt&gt;, c10::ArrayRef&lt;c10::SymInt&gt;, c10::ArrayRef&lt;c10::SymInt&gt;, c10::SymInt)&gt;, at::Tensor, c10::guts::typelist::typelist&lt;at::Tensor const&amp;, at::Tensor const&amp;, std::optional&lt;at::Tensor&gt; const&amp;, c10::ArrayRef&lt;c10::SymInt&gt;, c10::ArrayRef&lt;c10::SymInt&gt;, c10::ArrayRef&lt;c10::SymInt&gt;, c10::SymInt&gt; &gt;, at::Tensor(at::Tensor const&amp;, at::Tensor const&amp;, std::optional&lt;at::Tensor&gt; const&amp;, c10::ArrayRef&lt;c10::SymInt&gt;, c10::ArrayRef&lt;c10::SymInt&gt;, c10::ArrayRef&lt;c10::SymInt&gt;, c10::SymInt)&gt;::call (libtorch_cpu.so) (192 samples, 2.97%)</title><rect x="19.1022%" y="372" width="2.9721%" height="15" fill="rgb(251,171,36)" fg:x="1234" fg:w="192"/><text x="19.3522%" y="382.50">c10..</text></g><g><title>at::native::conv2d_symint (libtorch_cpu.so) (192 samples, 2.97%)</title><rect x="19.1022%" y="388" width="2.9721%" height="15" fill="rgb(230,62,22)" fg:x="1234" fg:w="192"/><text x="19.3522%" y="398.50">at:..</text></g><g><title>at::_ops::convolution::call (libtorch_cpu.so) (192 samples, 2.97%)</title><rect x="19.1022%" y="404" width="2.9721%" height="15" fill="rgb(225,114,35)" fg:x="1234" fg:w="192"/><text x="19.3522%" y="414.50">at:..</text></g><g><title>c10::impl::wrap_kernel_functor_unboxed_&lt;c10::impl::detail::WrapFunctionIntoFunctor_&lt;c10::CompileTimeFunctionPointer&lt;at::Tensor(c10::DispatchKeySet, at::Tensor const&amp;, at::Tensor const&amp;, std::optional&lt;at::Tensor&gt; const&amp;, c10::ArrayRef&lt;c10::SymInt&gt;, c10::ArrayRef&lt;c10::SymInt&gt;, c10::ArrayRef&lt;c10::SymInt&gt;, bool, c10::ArrayRef&lt;c10::SymInt&gt;, c10::SymInt), &amp;torch::autograd::VariableType::(anonymous namespace)::convolution(c10::DispatchKeySet, at::Tensor const&amp;, at::Tensor const&amp;, std::optional&lt;at::Tensor&gt; const&amp;, c10::ArrayRef&lt;c10::SymInt&gt;, c10::ArrayRef&lt;c10::SymInt&gt;, c10::ArrayRef&lt;c10::SymInt&gt;, bool, c10::ArrayRef&lt;c10::SymInt&gt;, c10::SymInt)&gt;, at::Tensor, c10::guts::typelist::typelist&lt;c10::DispatchKeySet, at::Tensor const&amp;, at::Tensor const&amp;, std::optional&lt;at::Tensor&gt; const&amp;, c10::ArrayRef&lt;c10::SymInt&gt;, c10::ArrayRef&lt;c10::SymInt&gt;, c10::ArrayRef&lt;c10::SymInt&gt;, bool, c10::ArrayRef&lt;c10::SymInt&gt;, c10::SymInt&gt; &gt;, at::Tensor(c10::DispatchKeySet, at::Tensor const&amp;, at::Tensor const&amp;, std::optional&lt;at::Tensor&gt; const&amp;, c10::ArrayRef&lt;c10::SymInt&gt;, c10::ArrayRef&lt;c10::SymInt&gt;, c10::ArrayRef&lt;c10::SymInt&gt;, bool, c10::ArrayRef&lt;c10::SymInt&gt;, c10::SymInt)&gt;::call (libtorch_cpu.so) (192 samples, 2.97%)</title><rect x="19.1022%" y="420" width="2.9721%" height="15" fill="rgb(215,118,42)" fg:x="1234" fg:w="192"/><text x="19.3522%" y="430.50">c10..</text></g><g><title>torch::autograd::VariableType::(anonymous namespace)::convolution (libtorch_cpu.so) (192 samples, 2.97%)</title><rect x="19.1022%" y="436" width="2.9721%" height="15" fill="rgb(243,119,21)" fg:x="1234" fg:w="192"/><text x="19.3522%" y="446.50">tor..</text></g><g><title>at::_ops::convolution::redispatch (libtorch_cpu.so) (192 samples, 2.97%)</title><rect x="19.1022%" y="452" width="2.9721%" height="15" fill="rgb(252,177,53)" fg:x="1234" fg:w="192"/><text x="19.3522%" y="462.50">at:..</text></g><g><title>c10::impl::wrap_kernel_functor_unboxed_&lt;c10::impl::detail::WrapFunctionIntoFunctor_&lt;c10::CompileTimeFunctionPointer&lt;at::Tensor(at::Tensor const&amp;, at::Tensor const&amp;, std::optional&lt;at::Tensor&gt; const&amp;, c10::ArrayRef&lt;c10::SymInt&gt;, c10::ArrayRef&lt;c10::SymInt&gt;, c10::ArrayRef&lt;c10::SymInt&gt;, bool, c10::ArrayRef&lt;c10::SymInt&gt;, c10::SymInt), &amp;at::(anonymous namespace)::(anonymous namespace)::wrapper_CompositeExplicitAutograd__convolution(at::Tensor const&amp;, at::Tensor const&amp;, std::optional&lt;at::Tensor&gt; const&amp;, c10::ArrayRef&lt;c10::SymInt&gt;, c10::ArrayRef&lt;c10::SymInt&gt;, c10::ArrayRef&lt;c10::SymInt&gt;, bool, c10::ArrayRef&lt;c10::SymInt&gt;, c10::SymInt)&gt;, at::Tensor, c10::guts::typelist::typelist&lt;at::Tensor const&amp;, at::Tensor const&amp;, std::optional&lt;at::Tensor&gt; const&amp;, c10::ArrayRef&lt;c10::SymInt&gt;, c10::ArrayRef&lt;c10::SymInt&gt;, c10::ArrayRef&lt;c10::SymInt&gt;, bool, c10::ArrayRef&lt;c10::SymInt&gt;, c10::SymInt&gt; &gt;, at::Tensor(at::Tensor const&amp;, at::Tensor const&amp;, std::optional&lt;at::Tensor&gt; const&amp;, c10::ArrayRef&lt;c10::SymInt&gt;, c10::ArrayRef&lt;c10::SymInt&gt;, c10::ArrayRef&lt;c10::SymInt&gt;, bool, c10::ArrayRef&lt;c10::SymInt&gt;, c10::SymInt)&gt;::call (libtorch_cpu.so) (192 samples, 2.97%)</title><rect x="19.1022%" y="468" width="2.9721%" height="15" fill="rgb(237,209,29)" fg:x="1234" fg:w="192"/><text x="19.3522%" y="478.50">c10..</text></g><g><title>at::(anonymous namespace)::(anonymous namespace)::wrapper_CompositeExplicitAutograd__convolution (libtorch_cpu.so) (192 samples, 2.97%)</title><rect x="19.1022%" y="484" width="2.9721%" height="15" fill="rgb(212,65,23)" fg:x="1234" fg:w="192"/><text x="19.3522%" y="494.50">at:..</text></g><g><title>at::native::convolution (libtorch_cpu.so) (192 samples, 2.97%)</title><rect x="19.1022%" y="500" width="2.9721%" height="15" fill="rgb(230,222,46)" fg:x="1234" fg:w="192"/><text x="19.3522%" y="510.50">at:..</text></g><g><title>at::_ops::_convolution::call (libtorch_cpu.so) (192 samples, 2.97%)</title><rect x="19.1022%" y="516" width="2.9721%" height="15" fill="rgb(215,135,32)" fg:x="1234" fg:w="192"/><text x="19.3522%" y="526.50">at:..</text></g><g><title>c10::impl::wrap_kernel_functor_unboxed_&lt;c10::impl::detail::WrapFunctionIntoFunctor_&lt;c10::CompileTimeFunctionPointer&lt;at::Tensor(at::Tensor const&amp;, at::Tensor const&amp;, std::optional&lt;at::Tensor&gt; const&amp;, c10::ArrayRef&lt;c10::SymInt&gt;, c10::ArrayRef&lt;c10::SymInt&gt;, c10::ArrayRef&lt;c10::SymInt&gt;, bool, c10::ArrayRef&lt;c10::SymInt&gt;, c10::SymInt, bool, bool, bool, bool), &amp;at::(anonymous namespace)::(anonymous namespace)::wrapper_CompositeExplicitAutograd___convolution(at::Tensor const&amp;, at::Tensor const&amp;, std::optional&lt;at::Tensor&gt; const&amp;, c10::ArrayRef&lt;c10::SymInt&gt;, c10::ArrayRef&lt;c10::SymInt&gt;, c10::ArrayRef&lt;c10::SymInt&gt;, bool, c10::ArrayRef&lt;c10::SymInt&gt;, c10::SymInt, bool, bool, bool, bool)&gt;, at::Tensor, c10::guts::typelist::typelist&lt;at::Tensor const&amp;, at::Tensor const&amp;, std::optional&lt;at::Tensor&gt; const&amp;, c10::ArrayRef&lt;c10::SymInt&gt;, c10::ArrayRef&lt;c10::SymInt&gt;, c10::ArrayRef&lt;c10::SymInt&gt;, bool, c10::ArrayRef&lt;c10::SymInt&gt;, c10::SymInt, bool, bool, bool, bool&gt; &gt;, at::Tensor(at::Tensor const&amp;, at::Tensor const&amp;, std::optional&lt;at::Tensor&gt; const&amp;, c10::ArrayRef&lt;c10::SymInt&gt;, c10::ArrayRef&lt;c10::SymInt&gt;, c10::ArrayRef&lt;c10::SymInt&gt;, bool, c10::ArrayRef&lt;c10::SymInt&gt;, c10::SymInt, bool, bool, bool, bool)&gt;::call (libtorch_cpu.so) (192 samples, 2.97%)</title><rect x="19.1022%" y="532" width="2.9721%" height="15" fill="rgb(246,101,22)" fg:x="1234" fg:w="192"/><text x="19.3522%" y="542.50">c10..</text></g><g><title>at::(anonymous namespace)::(anonymous namespace)::wrapper_CompositeExplicitAutograd___convolution (libtorch_cpu.so) (192 samples, 2.97%)</title><rect x="19.1022%" y="548" width="2.9721%" height="15" fill="rgb(206,107,13)" fg:x="1234" fg:w="192"/><text x="19.3522%" y="558.50">at:..</text></g><g><title>at::native::_convolution (libtorch_cpu.so) (192 samples, 2.97%)</title><rect x="19.1022%" y="564" width="2.9721%" height="15" fill="rgb(250,100,44)" fg:x="1234" fg:w="192"/><text x="19.3522%" y="574.50">at:..</text></g><g><title>at::_ops::mkldnn_convolution::call (libtorch_cpu.so) (192 samples, 2.97%)</title><rect x="19.1022%" y="580" width="2.9721%" height="15" fill="rgb(231,147,38)" fg:x="1234" fg:w="192"/><text x="19.3522%" y="590.50">at:..</text></g><g><title>c10::impl::wrap_kernel_functor_unboxed_&lt;c10::impl::detail::WrapFunctionIntoFunctor_&lt;c10::CompileTimeFunctionPointer&lt;at::Tensor(at::Tensor const&amp;, at::Tensor const&amp;, std::optional&lt;at::Tensor&gt; const&amp;, c10::ArrayRef&lt;c10::SymInt&gt;, c10::ArrayRef&lt;c10::SymInt&gt;, c10::ArrayRef&lt;c10::SymInt&gt;, c10::SymInt), &amp;at::(anonymous namespace)::(anonymous namespace)::wrapper_CompositeExplicitAutograd__mkldnn_convolution(at::Tensor const&amp;, at::Tensor const&amp;, std::optional&lt;at::Tensor&gt; const&amp;, c10::ArrayRef&lt;c10::SymInt&gt;, c10::ArrayRef&lt;c10::SymInt&gt;, c10::ArrayRef&lt;c10::SymInt&gt;, c10::SymInt)&gt;, at::Tensor, c10::guts::typelist::typelist&lt;at::Tensor const&amp;, at::Tensor const&amp;, std::optional&lt;at::Tensor&gt; const&amp;, c10::ArrayRef&lt;c10::SymInt&gt;, c10::ArrayRef&lt;c10::SymInt&gt;, c10::ArrayRef&lt;c10::SymInt&gt;, c10::SymInt&gt; &gt;, at::Tensor(at::Tensor const&amp;, at::Tensor const&amp;, std::optional&lt;at::Tensor&gt; const&amp;, c10::ArrayRef&lt;c10::SymInt&gt;, c10::ArrayRef&lt;c10::SymInt&gt;, c10::ArrayRef&lt;c10::SymInt&gt;, c10::SymInt)&gt;::call (libtorch_cpu.so) (192 samples, 2.97%)</title><rect x="19.1022%" y="596" width="2.9721%" height="15" fill="rgb(229,8,40)" fg:x="1234" fg:w="192"/><text x="19.3522%" y="606.50">c10..</text></g><g><title>at::(anonymous namespace)::(anonymous namespace)::wrapper_CompositeExplicitAutograd__mkldnn_convolution (libtorch_cpu.so) (192 samples, 2.97%)</title><rect x="19.1022%" y="612" width="2.9721%" height="15" fill="rgb(221,135,30)" fg:x="1234" fg:w="192"/><text x="19.3522%" y="622.50">at:..</text></g><g><title>at::native::mkldnn_convolution (libtorch_cpu.so) (192 samples, 2.97%)</title><rect x="19.1022%" y="628" width="2.9721%" height="15" fill="rgb(249,193,18)" fg:x="1234" fg:w="192"/><text x="19.3522%" y="638.50">at:..</text></g><g><title>at::native::_mkldnn_convolution (libtorch_cpu.so) (192 samples, 2.97%)</title><rect x="19.1022%" y="644" width="2.9721%" height="15" fill="rgb(209,133,39)" fg:x="1234" fg:w="192"/><text x="19.3522%" y="654.50">at:..</text></g><g><title>at::native::mkldnn_to_dense (libtorch_cpu.so) (18 samples, 0.28%)</title><rect x="21.7957%" y="660" width="0.2786%" height="15" fill="rgb(232,100,14)" fg:x="1408" fg:w="18"/><text x="22.0457%" y="670.50"></text></g><g><title>ideep::tensor::to_public (libtorch_cpu.so) (16 samples, 0.25%)</title><rect x="21.8266%" y="676" width="0.2477%" height="15" fill="rgb(224,185,1)" fg:x="1410" fg:w="16"/><text x="22.0766%" y="686.50"></text></g><g><title>ideep::tensor::reorder_to (libtorch_cpu.so) (16 samples, 0.25%)</title><rect x="21.8266%" y="692" width="0.2477%" height="15" fill="rgb(223,139,8)" fg:x="1410" fg:w="16"/><text x="22.0766%" y="702.50"></text></g><g><title>dnnl::primitive::execute (libtorch_cpu.so) (16 samples, 0.25%)</title><rect x="21.8266%" y="708" width="0.2477%" height="15" fill="rgb(232,213,38)" fg:x="1410" fg:w="16"/><text x="22.0766%" y="718.50"></text></g><g><title>dnnl_primitive_execute (libtorch_cpu.so) (16 samples, 0.25%)</title><rect x="21.8266%" y="724" width="0.2477%" height="15" fill="rgb(207,94,22)" fg:x="1410" fg:w="16"/><text x="22.0766%" y="734.50"></text></g><g><title>dnnl::impl::primitive_execute (libtorch_cpu.so) (16 samples, 0.25%)</title><rect x="21.8266%" y="740" width="0.2477%" height="15" fill="rgb(219,183,54)" fg:x="1410" fg:w="16"/><text x="22.0766%" y="750.50"></text></g><g><title>dnnl_primitive::execute (libtorch_cpu.so) (16 samples, 0.25%)</title><rect x="21.8266%" y="756" width="0.2477%" height="15" fill="rgb(216,185,54)" fg:x="1410" fg:w="16"/><text x="22.0766%" y="766.50"></text></g><g><title>dnnl::impl::cpu::x64::jit_blk_reorder_t::execute (libtorch_cpu.so) (16 samples, 0.25%)</title><rect x="21.8266%" y="772" width="0.2477%" height="15" fill="rgb(254,217,39)" fg:x="1410" fg:w="16"/><text x="22.0766%" y="782.50"></text></g><g><title>GOMP_parallel (libgomp-c9fef706.so.1) (13 samples, 0.20%)</title><rect x="21.8731%" y="788" width="0.2012%" height="15" fill="rgb(240,178,23)" fg:x="1413" fg:w="13"/><text x="22.1231%" y="798.50"></text></g><g><title>dnnl::impl::parallel (libtorch_cpu.so) (10 samples, 0.15%)</title><rect x="21.9195%" y="804" width="0.1548%" height="15" fill="rgb(218,11,47)" fg:x="1416" fg:w="10"/><text x="22.1695%" y="814.50"></text></g><g><title>0x77d25141ca9d (libgomp-c9fef706.so.1) (8 samples, 0.12%)</title><rect x="22.0743%" y="596" width="0.1238%" height="15" fill="rgb(218,51,51)" fg:x="1426" fg:w="8"/><text x="22.3243%" y="606.50"></text></g><g><title>0x77d25141e02a (libgomp-c9fef706.so.1) (8 samples, 0.12%)</title><rect x="22.0743%" y="612" width="0.1238%" height="15" fill="rgb(238,126,27)" fg:x="1426" fg:w="8"/><text x="22.3243%" y="622.50"></text></g><g><title>at::native::batch_norm_cpu_transform_input_template&lt;float, float&gt; (libtorch_cpu.so) (17 samples, 0.26%)</title><rect x="22.0743%" y="564" width="0.2632%" height="15" fill="rgb(249,202,22)" fg:x="1426" fg:w="17"/><text x="22.3243%" y="574.50"></text></g><g><title>at::native::(anonymous namespace)::batch_norm_cpu_kernel (libtorch_cpu.so) (17 samples, 0.26%)</title><rect x="22.0743%" y="580" width="0.2632%" height="15" fill="rgb(254,195,49)" fg:x="1426" fg:w="17"/><text x="22.3243%" y="590.50"></text></g><g><title>GOMP_parallel (libgomp-c9fef706.so.1) (9 samples, 0.14%)</title><rect x="22.1981%" y="596" width="0.1393%" height="15" fill="rgb(208,123,14)" fg:x="1434" fg:w="9"/><text x="22.4481%" y="606.50"></text></g><g><title>at::internal::invoke_parallel&lt;at::parallel_for&lt;at::native::(anonymous namespace)::batch_norm_cpu_contiguous_impl&lt;float&gt;(at::Tensor&amp;, at::Tensor const&amp;, at::Tensor const&amp;, at::Tensor const&amp;, at::Tensor const&amp;, at::Tensor const&amp;, at::Tensor const&amp;, at::Tensor const&amp;, bool, double)::{lambda(long, long)#1}&gt;(long, long, long, at::native::(anonymous namespace)::batch_norm_cpu_contiguous_impl&lt;float&gt;(at::Tensor&amp;, at::Tensor const&amp;, at::Tensor const&amp;, at::Tensor const&amp;, at::Tensor const&amp;, at::Tensor const&amp;, at::Tensor const&amp;, at::Tensor const&amp;, bool, double)::{lambda(long, long)#1} const&amp;)::{lambda(long, long)#1}&gt; (libtorch_cpu.so) (8 samples, 0.12%)</title><rect x="22.2136%" y="612" width="0.1238%" height="15" fill="rgb(224,200,8)" fg:x="1435" fg:w="8"/><text x="22.4636%" y="622.50"></text></g><g><title>0x77d25141ca9d (libgomp-c9fef706.so.1) (7 samples, 0.11%)</title><rect x="22.3375%" y="580" width="0.1084%" height="15" fill="rgb(217,61,36)" fg:x="1443" fg:w="7"/><text x="22.5875%" y="590.50"></text></g><g><title>0x77d25141e02a (libgomp-c9fef706.so.1) (7 samples, 0.11%)</title><rect x="22.3375%" y="596" width="0.1084%" height="15" fill="rgb(206,35,45)" fg:x="1443" fg:w="7"/><text x="22.5875%" y="606.50"></text></g><g><title>at::_ops::native_batch_norm::redispatch (libtorch_cpu.so) (51 samples, 0.79%)</title><rect x="22.0743%" y="500" width="0.7895%" height="15" fill="rgb(217,65,33)" fg:x="1426" fg:w="51"/><text x="22.3243%" y="510.50"></text></g><g><title>c10::impl::wrap_kernel_functor_unboxed_&lt;c10::impl::detail::WrapFunctionIntoFunctor_&lt;c10::CompileTimeFunctionPointer&lt;std::tuple&lt;at::Tensor, at::Tensor, at::Tensor&gt; (at::Tensor const&amp;, std::optional&lt;at::Tensor&gt; const&amp;, std::optional&lt;at::Tensor&gt; const&amp;, std::optional&lt;at::Tensor&gt; const&amp;, std::optional&lt;at::Tensor&gt; const&amp;, bool, double, double), &amp;at::(anonymous namespace)::(anonymous namespace)::wrapper_CPU__native_batch_norm(at::Tensor const&amp;, std::optional&lt;at::Tensor&gt; const&amp;, std::optional&lt;at::Tensor&gt; const&amp;, std::optional&lt;at::Tensor&gt; const&amp;, std::optional&lt;at::Tensor&gt; const&amp;, bool, double, double)&gt;, std::tuple&lt;at::Tensor, at::Tensor, at::Tensor&gt;, c10::guts::typelist::typelist&lt;at::Tensor const&amp;, std::optional&lt;at::Tensor&gt; const&amp;, std::optional&lt;at::Tensor&gt; const&amp;, std::optional&lt;at::Tensor&gt; const&amp;, std::optional&lt;at::Tensor&gt; const&amp;, bool, double, double&gt; &gt;, std::tuple&lt;at::Tensor, at::Tensor, at::Tensor&gt; (at::Tensor const&amp;, std::optional&lt;at::Tensor&gt; const&amp;, std::optional&lt;at::Tensor&gt; const&amp;, std::optional&lt;at::Tensor&gt; const&amp;, std::optional&lt;at::Tensor&gt; const&amp;, bool, double, double)&gt;::call (libtorch_cpu.so) (51 samples, 0.79%)</title><rect x="22.0743%" y="516" width="0.7895%" height="15" fill="rgb(222,158,48)" fg:x="1426" fg:w="51"/><text x="22.3243%" y="526.50"></text></g><g><title>at::native::batch_norm_cpu (libtorch_cpu.so) (51 samples, 0.79%)</title><rect x="22.0743%" y="532" width="0.7895%" height="15" fill="rgb(254,2,54)" fg:x="1426" fg:w="51"/><text x="22.3243%" y="542.50"></text></g><g><title>at::native::batch_norm_cpu_out (libtorch_cpu.so) (51 samples, 0.79%)</title><rect x="22.0743%" y="548" width="0.7895%" height="15" fill="rgb(250,143,38)" fg:x="1426" fg:w="51"/><text x="22.3243%" y="558.50"></text></g><g><title>at::native::batch_norm_cpu_update_stats_template&lt;float, float, at::native::InvStd&gt; (libtorch_cpu.so) (34 samples, 0.53%)</title><rect x="22.3375%" y="564" width="0.5263%" height="15" fill="rgb(248,25,0)" fg:x="1443" fg:w="34"/><text x="22.5875%" y="574.50"></text></g><g><title>at::native::(anonymous namespace)::batch_norm_cpu_collect_stats_kernel (libtorch_cpu.so) (24 samples, 0.37%)</title><rect x="22.4923%" y="580" width="0.3715%" height="15" fill="rgb(206,152,27)" fg:x="1453" fg:w="24"/><text x="22.7423%" y="590.50"></text></g><g><title>GOMP_parallel (libgomp-c9fef706.so.1) (19 samples, 0.29%)</title><rect x="22.5697%" y="596" width="0.2941%" height="15" fill="rgb(240,77,30)" fg:x="1458" fg:w="19"/><text x="22.8197%" y="606.50"></text></g><g><title>at::internal::invoke_parallel&lt;at::parallel_for&lt;at::native::(anonymous namespace)::batch_norm_cpu_collect_stats_contiguous_impl&lt;float&gt;(at::Tensor&amp;, at::Tensor&amp;, at::Tensor const&amp;)::{lambda(long, long)#1}&gt;(long, long, long, at::native::(anonymous namespace)::batch_norm_cpu_collect_stats_contiguous_impl&lt;float&gt;(at::Tensor&amp;, at::Tensor&amp;, at::Tensor const&amp;)::{lambda(long, long)#1} const&amp;)::{lambda(long, long)#1}&gt; (libtorch_cpu.so) (18 samples, 0.28%)</title><rect x="22.5851%" y="612" width="0.2786%" height="15" fill="rgb(231,5,3)" fg:x="1459" fg:w="18"/><text x="22.8351%" y="622.50"></text></g><g><title>_forward_impl (torchvision/models/resnet.py:273) (496 samples, 7.68%)</title><rect x="15.2012%" y="164" width="7.6780%" height="15" fill="rgb(207,226,32)" fg:x="982" fg:w="496"/><text x="15.4512%" y="174.50">_forward_im..</text></g><g><title>_wrapped_call_impl (torch/nn/modules/module.py:1751) (496 samples, 7.68%)</title><rect x="15.2012%" y="180" width="7.6780%" height="15" fill="rgb(222,207,47)" fg:x="982" fg:w="496"/><text x="15.4512%" y="190.50">_wrapped_ca..</text></g><g><title>_call_impl (torch/nn/modules/module.py:1762) (496 samples, 7.68%)</title><rect x="15.2012%" y="196" width="7.6780%" height="15" fill="rgb(229,115,45)" fg:x="982" fg:w="496"/><text x="15.4512%" y="206.50">_call_impl ..</text></g><g><title>forward (torch/nn/modules/container.py:240) (496 samples, 7.68%)</title><rect x="15.2012%" y="212" width="7.6780%" height="15" fill="rgb(224,191,6)" fg:x="982" fg:w="496"/><text x="15.4512%" y="222.50">forward (to..</text></g><g><title>_wrapped_call_impl (torch/nn/modules/module.py:1751) (496 samples, 7.68%)</title><rect x="15.2012%" y="228" width="7.6780%" height="15" fill="rgb(230,227,24)" fg:x="982" fg:w="496"/><text x="15.4512%" y="238.50">_wrapped_ca..</text></g><g><title>_call_impl (torch/nn/modules/module.py:1762) (496 samples, 7.68%)</title><rect x="15.2012%" y="244" width="7.6780%" height="15" fill="rgb(228,80,19)" fg:x="982" fg:w="496"/><text x="15.4512%" y="254.50">_call_impl ..</text></g><g><title>forward (torchvision/models/resnet.py:97) (52 samples, 0.80%)</title><rect x="22.0743%" y="260" width="0.8050%" height="15" fill="rgb(247,229,0)" fg:x="1426" fg:w="52"/><text x="22.3243%" y="270.50"></text></g><g><title>_wrapped_call_impl (torch/nn/modules/module.py:1751) (52 samples, 0.80%)</title><rect x="22.0743%" y="276" width="0.8050%" height="15" fill="rgb(237,194,15)" fg:x="1426" fg:w="52"/><text x="22.3243%" y="286.50"></text></g><g><title>_call_impl (torch/nn/modules/module.py:1762) (52 samples, 0.80%)</title><rect x="22.0743%" y="292" width="0.8050%" height="15" fill="rgb(219,203,20)" fg:x="1426" fg:w="52"/><text x="22.3243%" y="302.50"></text></g><g><title>forward (torch/nn/modules/batchnorm.py:193) (52 samples, 0.80%)</title><rect x="22.0743%" y="308" width="0.8050%" height="15" fill="rgb(234,128,8)" fg:x="1426" fg:w="52"/><text x="22.3243%" y="318.50"></text></g><g><title>batch_norm (torch/nn/functional.py:2831) (52 samples, 0.80%)</title><rect x="22.0743%" y="324" width="0.8050%" height="15" fill="rgb(248,202,8)" fg:x="1426" fg:w="52"/><text x="22.3243%" y="334.50"></text></g><g><title>torch::autograd::THPVariable_batch_norm (libtorch_python.so) (52 samples, 0.80%)</title><rect x="22.0743%" y="340" width="0.8050%" height="15" fill="rgb(206,104,37)" fg:x="1426" fg:w="52"/><text x="22.3243%" y="350.50"></text></g><g><title>at::_ops::batch_norm::call (libtorch_cpu.so) (52 samples, 0.80%)</title><rect x="22.0743%" y="356" width="0.8050%" height="15" fill="rgb(223,8,27)" fg:x="1426" fg:w="52"/><text x="22.3243%" y="366.50"></text></g><g><title>c10::impl::wrap_kernel_functor_unboxed_&lt;c10::impl::detail::WrapFunctionIntoFunctor_&lt;c10::CompileTimeFunctionPointer&lt;at::Tensor(at::Tensor const&amp;, std::optional&lt;at::Tensor&gt; const&amp;, std::optional&lt;at::Tensor&gt; const&amp;, std::optional&lt;at::Tensor&gt; const&amp;, std::optional&lt;at::Tensor&gt; const&amp;, bool, double, double, bool), &amp;at::(anonymous namespace)::(anonymous namespace)::wrapper_CompositeImplicitAutograd__batch_norm(at::Tensor const&amp;, std::optional&lt;at::Tensor&gt; const&amp;, std::optional&lt;at::Tensor&gt; const&amp;, std::optional&lt;at::Tensor&gt; const&amp;, std::optional&lt;at::Tensor&gt; const&amp;, bool, double, double, bool)&gt;, at::Tensor, c10::guts::typelist::typelist&lt;at::Tensor const&amp;, std::optional&lt;at::Tensor&gt; const&amp;, std::optional&lt;at::Tensor&gt; const&amp;, std::optional&lt;at::Tensor&gt; const&amp;, std::optional&lt;at::Tensor&gt; const&amp;, bool, double, double, bool&gt; &gt;, at::Tensor(at::Tensor const&amp;, std::optional&lt;at::Tensor&gt; const&amp;, std::optional&lt;at::Tensor&gt; const&amp;, std::optional&lt;at::Tensor&gt; const&amp;, std::optional&lt;at::Tensor&gt; const&amp;, bool, double, double, bool)&gt;::call (libtorch_cpu.so) (52 samples, 0.80%)</title><rect x="22.0743%" y="372" width="0.8050%" height="15" fill="rgb(216,217,28)" fg:x="1426" fg:w="52"/><text x="22.3243%" y="382.50"></text></g><g><title>at::native::batch_norm (libtorch_cpu.so) (52 samples, 0.80%)</title><rect x="22.0743%" y="388" width="0.8050%" height="15" fill="rgb(249,199,1)" fg:x="1426" fg:w="52"/><text x="22.3243%" y="398.50"></text></g><g><title>at::_ops::_batch_norm_impl_index::call (libtorch_cpu.so) (52 samples, 0.80%)</title><rect x="22.0743%" y="404" width="0.8050%" height="15" fill="rgb(240,85,17)" fg:x="1426" fg:w="52"/><text x="22.3243%" y="414.50"></text></g><g><title>c10::impl::wrap_kernel_functor_unboxed_&lt;c10::impl::detail::WrapFunctionIntoFunctor_&lt;c10::CompileTimeFunctionPointer&lt;std::tuple&lt;at::Tensor, at::Tensor, at::Tensor, at::Tensor, long&gt; (at::Tensor const&amp;, std::optional&lt;at::Tensor&gt; const&amp;, std::optional&lt;at::Tensor&gt; const&amp;, std::optional&lt;at::Tensor&gt; const&amp;, std::optional&lt;at::Tensor&gt; const&amp;, bool, double, double, bool), &amp;at::(anonymous namespace)::(anonymous namespace)::wrapper_CompositeImplicitAutograd___batch_norm_impl_index(at::Tensor const&amp;, std::optional&lt;at::Tensor&gt; const&amp;, std::optional&lt;at::Tensor&gt; const&amp;, std::optional&lt;at::Tensor&gt; const&amp;, std::optional&lt;at::Tensor&gt; const&amp;, bool, double, double, bool)&gt;, std::tuple&lt;at::Tensor, at::Tensor, at::Tensor, at::Tensor, long&gt;, c10::guts::typelist::typelist&lt;at::Tensor const&amp;, std::optional&lt;at::Tensor&gt; const&amp;, std::optional&lt;at::Tensor&gt; const&amp;, std::optional&lt;at::Tensor&gt; const&amp;, std::optional&lt;at::Tensor&gt; const&amp;, bool, double, double, bool&gt; &gt;, std::tuple&lt;at::Tensor, at::Tensor, at::Tensor, at::Tensor, long&gt; (at::Tensor const&amp;, std::optional&lt;at::Tensor&gt; const&amp;, std::optional&lt;at::Tensor&gt; const&amp;, std::optional&lt;at::Tensor&gt; const&amp;, std::optional&lt;at::Tensor&gt; const&amp;, bool, double, double, bool)&gt;::call (libtorch_cpu.so) (52 samples, 0.80%)</title><rect x="22.0743%" y="420" width="0.8050%" height="15" fill="rgb(206,108,45)" fg:x="1426" fg:w="52"/><text x="22.3243%" y="430.50"></text></g><g><title>at::native::_batch_norm_impl_index (libtorch_cpu.so) (52 samples, 0.80%)</title><rect x="22.0743%" y="436" width="0.8050%" height="15" fill="rgb(245,210,41)" fg:x="1426" fg:w="52"/><text x="22.3243%" y="446.50"></text></g><g><title>at::_ops::native_batch_norm::call (libtorch_cpu.so) (52 samples, 0.80%)</title><rect x="22.0743%" y="452" width="0.8050%" height="15" fill="rgb(206,13,37)" fg:x="1426" fg:w="52"/><text x="22.3243%" y="462.50"></text></g><g><title>c10::impl::wrap_kernel_functor_unboxed_&lt;c10::impl::detail::WrapFunctionIntoFunctor_&lt;c10::CompileTimeFunctionPointer&lt;std::tuple&lt;at::Tensor, at::Tensor, at::Tensor&gt; (c10::DispatchKeySet, at::Tensor const&amp;, std::optional&lt;at::Tensor&gt; const&amp;, std::optional&lt;at::Tensor&gt; const&amp;, std::optional&lt;at::Tensor&gt; const&amp;, std::optional&lt;at::Tensor&gt; const&amp;, bool, double, double), &amp;torch::autograd::VariableType::(anonymous namespace)::native_batch_norm(c10::DispatchKeySet, at::Tensor const&amp;, std::optional&lt;at::Tensor&gt; const&amp;, std::optional&lt;at::Tensor&gt; const&amp;, std::optional&lt;at::Tensor&gt; const&amp;, std::optional&lt;at::Tensor&gt; const&amp;, bool, double, double)&gt;, std::tuple&lt;at::Tensor, at::Tensor, at::Tensor&gt;, c10::guts::typelist::typelist&lt;c10::DispatchKeySet, at::Tensor const&amp;, std::optional&lt;at::Tensor&gt; const&amp;, std::optional&lt;at::Tensor&gt; const&amp;, std::optional&lt;at::Tensor&gt; const&amp;, std::optional&lt;at::Tensor&gt; const&amp;, bool, double, double&gt; &gt;, std::tuple&lt;at::Tensor, at::Tensor, at::Tensor&gt; (c10::DispatchKeySet, at::Tensor const&amp;, std::optional&lt;at::Tensor&gt; const&amp;, std::optional&lt;at::Tensor&gt; const&amp;, std::optional&lt;at::Tensor&gt; const&amp;, std::optional&lt;at::Tensor&gt; const&amp;, bool, double, double)&gt;::call (libtorch_cpu.so) (52 samples, 0.80%)</title><rect x="22.0743%" y="468" width="0.8050%" height="15" fill="rgb(250,61,18)" fg:x="1426" fg:w="52"/><text x="22.3243%" y="478.50"></text></g><g><title>torch::autograd::VariableType::(anonymous namespace)::native_batch_norm (libtorch_cpu.so) (52 samples, 0.80%)</title><rect x="22.0743%" y="484" width="0.8050%" height="15" fill="rgb(235,172,48)" fg:x="1426" fg:w="52"/><text x="22.3243%" y="494.50"></text></g><g><title>at::native::batch_norm_cpu_transform_input_template&lt;float, float&gt; (libtorch_cpu.so) (13 samples, 0.20%)</title><rect x="22.8793%" y="612" width="0.2012%" height="15" fill="rgb(249,201,17)" fg:x="1478" fg:w="13"/><text x="23.1293%" y="622.50"></text></g><g><title>at::native::(anonymous namespace)::batch_norm_cpu_kernel (libtorch_cpu.so) (13 samples, 0.20%)</title><rect x="22.8793%" y="628" width="0.2012%" height="15" fill="rgb(219,208,6)" fg:x="1478" fg:w="13"/><text x="23.1293%" y="638.50"></text></g><g><title>GOMP_parallel (libgomp-c9fef706.so.1) (9 samples, 0.14%)</title><rect x="22.9412%" y="644" width="0.1393%" height="15" fill="rgb(248,31,23)" fg:x="1482" fg:w="9"/><text x="23.1912%" y="654.50"></text></g><g><title>at::internal::invoke_parallel&lt;at::parallel_for&lt;at::native::(anonymous namespace)::batch_norm_cpu_contiguous_impl&lt;float&gt;(at::Tensor&amp;, at::Tensor const&amp;, at::Tensor const&amp;, at::Tensor const&amp;, at::Tensor const&amp;, at::Tensor const&amp;, at::Tensor const&amp;, at::Tensor const&amp;, bool, double)::{lambda(long, long)#1}&gt;(long, long, long, at::native::(anonymous namespace)::batch_norm_cpu_contiguous_impl&lt;float&gt;(at::Tensor&amp;, at::Tensor const&amp;, at::Tensor const&amp;, at::Tensor const&amp;, at::Tensor const&amp;, at::Tensor const&amp;, at::Tensor const&amp;, at::Tensor const&amp;, bool, double)::{lambda(long, long)#1} const&amp;)::{lambda(long, long)#1}&gt; (libtorch_cpu.so) (7 samples, 0.11%)</title><rect x="22.9721%" y="660" width="0.1084%" height="15" fill="rgb(245,15,42)" fg:x="1484" fg:w="7"/><text x="23.2221%" y="670.50"></text></g><g><title>at::_ops::native_batch_norm::call (libtorch_cpu.so) (32 samples, 0.50%)</title><rect x="22.8793%" y="500" width="0.4954%" height="15" fill="rgb(222,217,39)" fg:x="1478" fg:w="32"/><text x="23.1293%" y="510.50"></text></g><g><title>c10::impl::wrap_kernel_functor_unboxed_&lt;c10::impl::detail::WrapFunctionIntoFunctor_&lt;c10::CompileTimeFunctionPointer&lt;std::tuple&lt;at::Tensor, at::Tensor, at::Tensor&gt; (c10::DispatchKeySet, at::Tensor const&amp;, std::optional&lt;at::Tensor&gt; const&amp;, std::optional&lt;at::Tensor&gt; const&amp;, std::optional&lt;at::Tensor&gt; const&amp;, std::optional&lt;at::Tensor&gt; const&amp;, bool, double, double), &amp;torch::autograd::VariableType::(anonymous namespace)::native_batch_norm(c10::DispatchKeySet, at::Tensor const&amp;, std::optional&lt;at::Tensor&gt; const&amp;, std::optional&lt;at::Tensor&gt; const&amp;, std::optional&lt;at::Tensor&gt; const&amp;, std::optional&lt;at::Tensor&gt; const&amp;, bool, double, double)&gt;, std::tuple&lt;at::Tensor, at::Tensor, at::Tensor&gt;, c10::guts::typelist::typelist&lt;c10::DispatchKeySet, at::Tensor const&amp;, std::optional&lt;at::Tensor&gt; const&amp;, std::optional&lt;at::Tensor&gt; const&amp;, std::optional&lt;at::Tensor&gt; const&amp;, std::optional&lt;at::Tensor&gt; const&amp;, bool, double, double&gt; &gt;, std::tuple&lt;at::Tensor, at::Tensor, at::Tensor&gt; (c10::DispatchKeySet, at::Tensor const&amp;, std::optional&lt;at::Tensor&gt; const&amp;, std::optional&lt;at::Tensor&gt; const&amp;, std::optional&lt;at::Tensor&gt; const&amp;, std::optional&lt;at::Tensor&gt; const&amp;, bool, double, double)&gt;::call (libtorch_cpu.so) (32 samples, 0.50%)</title><rect x="22.8793%" y="516" width="0.4954%" height="15" fill="rgb(210,219,27)" fg:x="1478" fg:w="32"/><text x="23.1293%" y="526.50"></text></g><g><title>torch::autograd::VariableType::(anonymous namespace)::native_batch_norm (libtorch_cpu.so) (32 samples, 0.50%)</title><rect x="22.8793%" y="532" width="0.4954%" height="15" fill="rgb(252,166,36)" fg:x="1478" fg:w="32"/><text x="23.1293%" y="542.50"></text></g><g><title>at::_ops::native_batch_norm::redispatch (libtorch_cpu.so) (32 samples, 0.50%)</title><rect x="22.8793%" y="548" width="0.4954%" height="15" fill="rgb(245,132,34)" fg:x="1478" fg:w="32"/><text x="23.1293%" y="558.50"></text></g><g><title>c10::impl::wrap_kernel_functor_unboxed_&lt;c10::impl::detail::WrapFunctionIntoFunctor_&lt;c10::CompileTimeFunctionPointer&lt;std::tuple&lt;at::Tensor, at::Tensor, at::Tensor&gt; (at::Tensor const&amp;, std::optional&lt;at::Tensor&gt; const&amp;, std::optional&lt;at::Tensor&gt; const&amp;, std::optional&lt;at::Tensor&gt; const&amp;, std::optional&lt;at::Tensor&gt; const&amp;, bool, double, double), &amp;at::(anonymous namespace)::(anonymous namespace)::wrapper_CPU__native_batch_norm(at::Tensor const&amp;, std::optional&lt;at::Tensor&gt; const&amp;, std::optional&lt;at::Tensor&gt; const&amp;, std::optional&lt;at::Tensor&gt; const&amp;, std::optional&lt;at::Tensor&gt; const&amp;, bool, double, double)&gt;, std::tuple&lt;at::Tensor, at::Tensor, at::Tensor&gt;, c10::guts::typelist::typelist&lt;at::Tensor const&amp;, std::optional&lt;at::Tensor&gt; const&amp;, std::optional&lt;at::Tensor&gt; const&amp;, std::optional&lt;at::Tensor&gt; const&amp;, std::optional&lt;at::Tensor&gt; const&amp;, bool, double, double&gt; &gt;, std::tuple&lt;at::Tensor, at::Tensor, at::Tensor&gt; (at::Tensor const&amp;, std::optional&lt;at::Tensor&gt; const&amp;, std::optional&lt;at::Tensor&gt; const&amp;, std::optional&lt;at::Tensor&gt; const&amp;, std::optional&lt;at::Tensor&gt; const&amp;, bool, double, double)&gt;::call (libtorch_cpu.so) (32 samples, 0.50%)</title><rect x="22.8793%" y="564" width="0.4954%" height="15" fill="rgb(236,54,3)" fg:x="1478" fg:w="32"/><text x="23.1293%" y="574.50"></text></g><g><title>at::native::batch_norm_cpu (libtorch_cpu.so) (32 samples, 0.50%)</title><rect x="22.8793%" y="580" width="0.4954%" height="15" fill="rgb(241,173,43)" fg:x="1478" fg:w="32"/><text x="23.1293%" y="590.50"></text></g><g><title>at::native::batch_norm_cpu_out (libtorch_cpu.so) (32 samples, 0.50%)</title><rect x="22.8793%" y="596" width="0.4954%" height="15" fill="rgb(215,190,9)" fg:x="1478" fg:w="32"/><text x="23.1293%" y="606.50"></text></g><g><title>at::native::batch_norm_cpu_update_stats_template&lt;float, float, at::native::InvStd&gt; (libtorch_cpu.so) (19 samples, 0.29%)</title><rect x="23.0805%" y="612" width="0.2941%" height="15" fill="rgb(242,101,16)" fg:x="1491" fg:w="19"/><text x="23.3305%" y="622.50"></text></g><g><title>at::native::(anonymous namespace)::batch_norm_cpu_collect_stats_kernel (libtorch_cpu.so) (16 samples, 0.25%)</title><rect x="23.1269%" y="628" width="0.2477%" height="15" fill="rgb(223,190,21)" fg:x="1494" fg:w="16"/><text x="23.3769%" y="638.50"></text></g><g><title>GOMP_parallel (libgomp-c9fef706.so.1) (13 samples, 0.20%)</title><rect x="23.1734%" y="644" width="0.2012%" height="15" fill="rgb(215,228,25)" fg:x="1497" fg:w="13"/><text x="23.4234%" y="654.50"></text></g><g><title>at::internal::invoke_parallel&lt;at::parallel_for&lt;at::native::(anonymous namespace)::batch_norm_cpu_collect_stats_contiguous_impl&lt;float&gt;(at::Tensor&amp;, at::Tensor&amp;, at::Tensor const&amp;)::{lambda(long, long)#1}&gt;(long, long, long, at::native::(anonymous namespace)::batch_norm_cpu_collect_stats_contiguous_impl&lt;float&gt;(at::Tensor&amp;, at::Tensor&amp;, at::Tensor const&amp;)::{lambda(long, long)#1} const&amp;)::{lambda(long, long)#1}&gt; (libtorch_cpu.so) (12 samples, 0.19%)</title><rect x="23.1889%" y="660" width="0.1858%" height="15" fill="rgb(225,36,22)" fg:x="1498" fg:w="12"/><text x="23.4389%" y="670.50"></text></g><g><title>forward (torch/nn/modules/batchnorm.py:193) (33 samples, 0.51%)</title><rect x="22.8793%" y="356" width="0.5108%" height="15" fill="rgb(251,106,46)" fg:x="1478" fg:w="33"/><text x="23.1293%" y="366.50"></text></g><g><title>batch_norm (torch/nn/functional.py:2831) (33 samples, 0.51%)</title><rect x="22.8793%" y="372" width="0.5108%" height="15" fill="rgb(208,90,1)" fg:x="1478" fg:w="33"/><text x="23.1293%" y="382.50"></text></g><g><title>torch::autograd::THPVariable_batch_norm (libtorch_python.so) (33 samples, 0.51%)</title><rect x="22.8793%" y="388" width="0.5108%" height="15" fill="rgb(243,10,4)" fg:x="1478" fg:w="33"/><text x="23.1293%" y="398.50"></text></g><g><title>at::_ops::batch_norm::call (libtorch_cpu.so) (33 samples, 0.51%)</title><rect x="22.8793%" y="404" width="0.5108%" height="15" fill="rgb(212,137,27)" fg:x="1478" fg:w="33"/><text x="23.1293%" y="414.50"></text></g><g><title>c10::impl::wrap_kernel_functor_unboxed_&lt;c10::impl::detail::WrapFunctionIntoFunctor_&lt;c10::CompileTimeFunctionPointer&lt;at::Tensor(at::Tensor const&amp;, std::optional&lt;at::Tensor&gt; const&amp;, std::optional&lt;at::Tensor&gt; const&amp;, std::optional&lt;at::Tensor&gt; const&amp;, std::optional&lt;at::Tensor&gt; const&amp;, bool, double, double, bool), &amp;at::(anonymous namespace)::(anonymous namespace)::wrapper_CompositeImplicitAutograd__batch_norm(at::Tensor const&amp;, std::optional&lt;at::Tensor&gt; const&amp;, std::optional&lt;at::Tensor&gt; const&amp;, std::optional&lt;at::Tensor&gt; const&amp;, std::optional&lt;at::Tensor&gt; const&amp;, bool, double, double, bool)&gt;, at::Tensor, c10::guts::typelist::typelist&lt;at::Tensor const&amp;, std::optional&lt;at::Tensor&gt; const&amp;, std::optional&lt;at::Tensor&gt; const&amp;, std::optional&lt;at::Tensor&gt; const&amp;, std::optional&lt;at::Tensor&gt; const&amp;, bool, double, double, bool&gt; &gt;, at::Tensor(at::Tensor const&amp;, std::optional&lt;at::Tensor&gt; const&amp;, std::optional&lt;at::Tensor&gt; const&amp;, std::optional&lt;at::Tensor&gt; const&amp;, std::optional&lt;at::Tensor&gt; const&amp;, bool, double, double, bool)&gt;::call (libtorch_cpu.so) (33 samples, 0.51%)</title><rect x="22.8793%" y="420" width="0.5108%" height="15" fill="rgb(231,220,49)" fg:x="1478" fg:w="33"/><text x="23.1293%" y="430.50"></text></g><g><title>at::native::batch_norm (libtorch_cpu.so) (33 samples, 0.51%)</title><rect x="22.8793%" y="436" width="0.5108%" height="15" fill="rgb(237,96,20)" fg:x="1478" fg:w="33"/><text x="23.1293%" y="446.50"></text></g><g><title>at::_ops::_batch_norm_impl_index::call (libtorch_cpu.so) (33 samples, 0.51%)</title><rect x="22.8793%" y="452" width="0.5108%" height="15" fill="rgb(239,229,30)" fg:x="1478" fg:w="33"/><text x="23.1293%" y="462.50"></text></g><g><title>c10::impl::wrap_kernel_functor_unboxed_&lt;c10::impl::detail::WrapFunctionIntoFunctor_&lt;c10::CompileTimeFunctionPointer&lt;std::tuple&lt;at::Tensor, at::Tensor, at::Tensor, at::Tensor, long&gt; (at::Tensor const&amp;, std::optional&lt;at::Tensor&gt; const&amp;, std::optional&lt;at::Tensor&gt; const&amp;, std::optional&lt;at::Tensor&gt; const&amp;, std::optional&lt;at::Tensor&gt; const&amp;, bool, double, double, bool), &amp;at::(anonymous namespace)::(anonymous namespace)::wrapper_CompositeImplicitAutograd___batch_norm_impl_index(at::Tensor const&amp;, std::optional&lt;at::Tensor&gt; const&amp;, std::optional&lt;at::Tensor&gt; const&amp;, std::optional&lt;at::Tensor&gt; const&amp;, std::optional&lt;at::Tensor&gt; const&amp;, bool, double, double, bool)&gt;, std::tuple&lt;at::Tensor, at::Tensor, at::Tensor, at::Tensor, long&gt;, c10::guts::typelist::typelist&lt;at::Tensor const&amp;, std::optional&lt;at::Tensor&gt; const&amp;, std::optional&lt;at::Tensor&gt; const&amp;, std::optional&lt;at::Tensor&gt; const&amp;, std::optional&lt;at::Tensor&gt; const&amp;, bool, double, double, bool&gt; &gt;, std::tuple&lt;at::Tensor, at::Tensor, at::Tensor, at::Tensor, long&gt; (at::Tensor const&amp;, std::optional&lt;at::Tensor&gt; const&amp;, std::optional&lt;at::Tensor&gt; const&amp;, std::optional&lt;at::Tensor&gt; const&amp;, std::optional&lt;at::Tensor&gt; const&amp;, bool, double, double, bool)&gt;::call (libtorch_cpu.so) (33 samples, 0.51%)</title><rect x="22.8793%" y="468" width="0.5108%" height="15" fill="rgb(219,65,33)" fg:x="1478" fg:w="33"/><text x="23.1293%" y="478.50"></text></g><g><title>at::native::_batch_norm_impl_index (libtorch_cpu.so) (33 samples, 0.51%)</title><rect x="22.8793%" y="484" width="0.5108%" height="15" fill="rgb(243,134,7)" fg:x="1478" fg:w="33"/><text x="23.1293%" y="494.50"></text></g><g><title>dnnl::primitive::execute (libtorch_cpu.so) (11 samples, 0.17%)</title><rect x="23.3901%" y="740" width="0.1703%" height="15" fill="rgb(216,177,54)" fg:x="1511" fg:w="11"/><text x="23.6401%" y="750.50"></text></g><g><title>dnnl_primitive_execute (libtorch_cpu.so) (11 samples, 0.17%)</title><rect x="23.3901%" y="756" width="0.1703%" height="15" fill="rgb(211,160,20)" fg:x="1511" fg:w="11"/><text x="23.6401%" y="766.50"></text></g><g><title>dnnl::impl::primitive_execute (libtorch_cpu.so) (11 samples, 0.17%)</title><rect x="23.3901%" y="772" width="0.1703%" height="15" fill="rgb(239,85,39)" fg:x="1511" fg:w="11"/><text x="23.6401%" y="782.50"></text></g><g><title>dnnl_primitive::execute (libtorch_cpu.so) (11 samples, 0.17%)</title><rect x="23.3901%" y="788" width="0.1703%" height="15" fill="rgb(232,125,22)" fg:x="1511" fg:w="11"/><text x="23.6401%" y="798.50"></text></g><g><title>dnnl::impl::cpu::x64::jit_avx2_1x1_convolution_fwd_t::execute (libtorch_cpu.so) (11 samples, 0.17%)</title><rect x="23.3901%" y="804" width="0.1703%" height="15" fill="rgb(244,57,34)" fg:x="1511" fg:w="11"/><text x="23.6401%" y="814.50"></text></g><g><title>dnnl::impl::cpu::x64::jit_avx2_1x1_convolution_fwd_t::execute_forward (libtorch_cpu.so) (11 samples, 0.17%)</title><rect x="23.3901%" y="820" width="0.1703%" height="15" fill="rgb(214,203,32)" fg:x="1511" fg:w="11"/><text x="23.6401%" y="830.50"></text></g><g><title>GOMP_parallel (libgomp-c9fef706.so.1) (8 samples, 0.12%)</title><rect x="23.4365%" y="836" width="0.1238%" height="15" fill="rgb(207,58,43)" fg:x="1514" fg:w="8"/><text x="23.6865%" y="846.50"></text></g><g><title>at::native::_mkldnn_convolution_out (libtorch_cpu.so) (25 samples, 0.39%)</title><rect x="23.3901%" y="708" width="0.3870%" height="15" fill="rgb(215,193,15)" fg:x="1511" fg:w="25"/><text x="23.6401%" y="718.50"></text></g><g><title>ideep::convolution_forward::compute_dispatch&lt;false, true, true&gt; (libtorch_cpu.so) (25 samples, 0.39%)</title><rect x="23.3901%" y="724" width="0.3870%" height="15" fill="rgb(232,15,44)" fg:x="1511" fg:w="25"/><text x="23.6401%" y="734.50"></text></g><g><title>ideep::tensor::reorder_if_differ_in (libtorch_cpu.so) (14 samples, 0.22%)</title><rect x="23.5604%" y="740" width="0.2167%" height="15" fill="rgb(212,3,48)" fg:x="1522" fg:w="14"/><text x="23.8104%" y="750.50"></text></g><g><title>ideep::tensor::reorder_to (libtorch_cpu.so) (14 samples, 0.22%)</title><rect x="23.5604%" y="756" width="0.2167%" height="15" fill="rgb(218,128,7)" fg:x="1522" fg:w="14"/><text x="23.8104%" y="766.50"></text></g><g><title>dnnl::primitive::execute (libtorch_cpu.so) (14 samples, 0.22%)</title><rect x="23.5604%" y="772" width="0.2167%" height="15" fill="rgb(226,216,39)" fg:x="1522" fg:w="14"/><text x="23.8104%" y="782.50"></text></g><g><title>dnnl_primitive_execute (libtorch_cpu.so) (14 samples, 0.22%)</title><rect x="23.5604%" y="788" width="0.2167%" height="15" fill="rgb(243,47,51)" fg:x="1522" fg:w="14"/><text x="23.8104%" y="798.50"></text></g><g><title>dnnl::impl::primitive_execute (libtorch_cpu.so) (14 samples, 0.22%)</title><rect x="23.5604%" y="804" width="0.2167%" height="15" fill="rgb(241,183,40)" fg:x="1522" fg:w="14"/><text x="23.8104%" y="814.50"></text></g><g><title>dnnl_primitive::execute (libtorch_cpu.so) (14 samples, 0.22%)</title><rect x="23.5604%" y="820" width="0.2167%" height="15" fill="rgb(231,217,32)" fg:x="1522" fg:w="14"/><text x="23.8104%" y="830.50"></text></g><g><title>dnnl::impl::cpu::x64::jit_blk_reorder_t::execute (libtorch_cpu.so) (14 samples, 0.22%)</title><rect x="23.5604%" y="836" width="0.2167%" height="15" fill="rgb(229,61,38)" fg:x="1522" fg:w="14"/><text x="23.8104%" y="846.50"></text></g><g><title>GOMP_parallel (libgomp-c9fef706.so.1) (11 samples, 0.17%)</title><rect x="23.6068%" y="852" width="0.1703%" height="15" fill="rgb(225,210,5)" fg:x="1525" fg:w="11"/><text x="23.8568%" y="862.50"></text></g><g><title>dnnl::impl::parallel (libtorch_cpu.so) (7 samples, 0.11%)</title><rect x="23.6687%" y="868" width="0.1084%" height="15" fill="rgb(231,79,45)" fg:x="1529" fg:w="7"/><text x="23.9187%" y="878.50"></text></g><g><title>0x77d25141ca9d (libgomp-c9fef706.so.1) (8 samples, 0.12%)</title><rect x="23.7771%" y="836" width="0.1238%" height="15" fill="rgb(224,100,7)" fg:x="1536" fg:w="8"/><text x="24.0271%" y="846.50"></text></g><g><title>0x77d25141e02a (libgomp-c9fef706.so.1) (7 samples, 0.11%)</title><rect x="23.7926%" y="852" width="0.1084%" height="15" fill="rgb(241,198,18)" fg:x="1537" fg:w="7"/><text x="24.0426%" y="862.50"></text></g><g><title>forward (torchvision/models/resnet.py:100) (70 samples, 1.08%)</title><rect x="22.8793%" y="260" width="1.0836%" height="15" fill="rgb(252,97,53)" fg:x="1478" fg:w="70"/><text x="23.1293%" y="270.50"></text></g><g><title>_wrapped_call_impl (torch/nn/modules/module.py:1751) (70 samples, 1.08%)</title><rect x="22.8793%" y="276" width="1.0836%" height="15" fill="rgb(220,88,7)" fg:x="1478" fg:w="70"/><text x="23.1293%" y="286.50"></text></g><g><title>_call_impl (torch/nn/modules/module.py:1762) (70 samples, 1.08%)</title><rect x="22.8793%" y="292" width="1.0836%" height="15" fill="rgb(213,176,14)" fg:x="1478" fg:w="70"/><text x="23.1293%" y="302.50"></text></g><g><title>forward (torch/nn/modules/container.py:240) (70 samples, 1.08%)</title><rect x="22.8793%" y="308" width="1.0836%" height="15" fill="rgb(246,73,7)" fg:x="1478" fg:w="70"/><text x="23.1293%" y="318.50"></text></g><g><title>_wrapped_call_impl (torch/nn/modules/module.py:1751) (70 samples, 1.08%)</title><rect x="22.8793%" y="324" width="1.0836%" height="15" fill="rgb(245,64,36)" fg:x="1478" fg:w="70"/><text x="23.1293%" y="334.50"></text></g><g><title>_call_impl (torch/nn/modules/module.py:1762) (70 samples, 1.08%)</title><rect x="22.8793%" y="340" width="1.0836%" height="15" fill="rgb(245,80,10)" fg:x="1478" fg:w="70"/><text x="23.1293%" y="350.50"></text></g><g><title>forward (torch/nn/modules/conv.py:554) (37 samples, 0.57%)</title><rect x="23.3901%" y="356" width="0.5728%" height="15" fill="rgb(232,107,50)" fg:x="1511" fg:w="37"/><text x="23.6401%" y="366.50"></text></g><g><title>_conv_forward (torch/nn/modules/conv.py:550) (37 samples, 0.57%)</title><rect x="23.3901%" y="372" width="0.5728%" height="15" fill="rgb(253,3,0)" fg:x="1511" fg:w="37"/><text x="23.6401%" y="382.50"></text></g><g><title>torch::autograd::THPVariable_conv2d (libtorch_python.so) (37 samples, 0.57%)</title><rect x="23.3901%" y="388" width="0.5728%" height="15" fill="rgb(212,99,53)" fg:x="1511" fg:w="37"/><text x="23.6401%" y="398.50"></text></g><g><title>at::_ops::conv2d::call (libtorch_cpu.so) (37 samples, 0.57%)</title><rect x="23.3901%" y="404" width="0.5728%" height="15" fill="rgb(249,111,54)" fg:x="1511" fg:w="37"/><text x="23.6401%" y="414.50"></text></g><g><title>c10::impl::wrap_kernel_functor_unboxed_&lt;c10::impl::detail::WrapFunctionIntoFunctor_&lt;c10::CompileTimeFunctionPointer&lt;at::Tensor(at::Tensor const&amp;, at::Tensor const&amp;, std::optional&lt;at::Tensor&gt; const&amp;, c10::ArrayRef&lt;c10::SymInt&gt;, c10::ArrayRef&lt;c10::SymInt&gt;, c10::ArrayRef&lt;c10::SymInt&gt;, c10::SymInt), &amp;at::(anonymous namespace)::(anonymous namespace)::wrapper_CompositeImplicitAutograd__conv2d(at::Tensor const&amp;, at::Tensor const&amp;, std::optional&lt;at::Tensor&gt; const&amp;, c10::ArrayRef&lt;c10::SymInt&gt;, c10::ArrayRef&lt;c10::SymInt&gt;, c10::ArrayRef&lt;c10::SymInt&gt;, c10::SymInt)&gt;, at::Tensor, c10::guts::typelist::typelist&lt;at::Tensor const&amp;, at::Tensor const&amp;, std::optional&lt;at::Tensor&gt; const&amp;, c10::ArrayRef&lt;c10::SymInt&gt;, c10::ArrayRef&lt;c10::SymInt&gt;, c10::ArrayRef&lt;c10::SymInt&gt;, c10::SymInt&gt; &gt;, at::Tensor(at::Tensor const&amp;, at::Tensor const&amp;, std::optional&lt;at::Tensor&gt; const&amp;, c10::ArrayRef&lt;c10::SymInt&gt;, c10::ArrayRef&lt;c10::SymInt&gt;, c10::ArrayRef&lt;c10::SymInt&gt;, c10::SymInt)&gt;::call (libtorch_cpu.so) (37 samples, 0.57%)</title><rect x="23.3901%" y="420" width="0.5728%" height="15" fill="rgb(249,55,30)" fg:x="1511" fg:w="37"/><text x="23.6401%" y="430.50"></text></g><g><title>at::native::conv2d_symint (libtorch_cpu.so) (37 samples, 0.57%)</title><rect x="23.3901%" y="436" width="0.5728%" height="15" fill="rgb(237,47,42)" fg:x="1511" fg:w="37"/><text x="23.6401%" y="446.50"></text></g><g><title>at::_ops::convolution::call (libtorch_cpu.so) (37 samples, 0.57%)</title><rect x="23.3901%" y="452" width="0.5728%" height="15" fill="rgb(211,20,18)" fg:x="1511" fg:w="37"/><text x="23.6401%" y="462.50"></text></g><g><title>c10::impl::wrap_kernel_functor_unboxed_&lt;c10::impl::detail::WrapFunctionIntoFunctor_&lt;c10::CompileTimeFunctionPointer&lt;at::Tensor(c10::DispatchKeySet, at::Tensor const&amp;, at::Tensor const&amp;, std::optional&lt;at::Tensor&gt; const&amp;, c10::ArrayRef&lt;c10::SymInt&gt;, c10::ArrayRef&lt;c10::SymInt&gt;, c10::ArrayRef&lt;c10::SymInt&gt;, bool, c10::ArrayRef&lt;c10::SymInt&gt;, c10::SymInt), &amp;torch::autograd::VariableType::(anonymous namespace)::convolution(c10::DispatchKeySet, at::Tensor const&amp;, at::Tensor const&amp;, std::optional&lt;at::Tensor&gt; const&amp;, c10::ArrayRef&lt;c10::SymInt&gt;, c10::ArrayRef&lt;c10::SymInt&gt;, c10::ArrayRef&lt;c10::SymInt&gt;, bool, c10::ArrayRef&lt;c10::SymInt&gt;, c10::SymInt)&gt;, at::Tensor, c10::guts::typelist::typelist&lt;c10::DispatchKeySet, at::Tensor const&amp;, at::Tensor const&amp;, std::optional&lt;at::Tensor&gt; const&amp;, c10::ArrayRef&lt;c10::SymInt&gt;, c10::ArrayRef&lt;c10::SymInt&gt;, c10::ArrayRef&lt;c10::SymInt&gt;, bool, c10::ArrayRef&lt;c10::SymInt&gt;, c10::SymInt&gt; &gt;, at::Tensor(c10::DispatchKeySet, at::Tensor const&amp;, at::Tensor const&amp;, std::optional&lt;at::Tensor&gt; const&amp;, c10::ArrayRef&lt;c10::SymInt&gt;, c10::ArrayRef&lt;c10::SymInt&gt;, c10::ArrayRef&lt;c10::SymInt&gt;, bool, c10::ArrayRef&lt;c10::SymInt&gt;, c10::SymInt)&gt;::call (libtorch_cpu.so) (37 samples, 0.57%)</title><rect x="23.3901%" y="468" width="0.5728%" height="15" fill="rgb(231,203,46)" fg:x="1511" fg:w="37"/><text x="23.6401%" y="478.50"></text></g><g><title>torch::autograd::VariableType::(anonymous namespace)::convolution (libtorch_cpu.so) (37 samples, 0.57%)</title><rect x="23.3901%" y="484" width="0.5728%" height="15" fill="rgb(237,142,3)" fg:x="1511" fg:w="37"/><text x="23.6401%" y="494.50"></text></g><g><title>at::_ops::convolution::redispatch (libtorch_cpu.so) (37 samples, 0.57%)</title><rect x="23.3901%" y="500" width="0.5728%" height="15" fill="rgb(241,107,1)" fg:x="1511" fg:w="37"/><text x="23.6401%" y="510.50"></text></g><g><title>c10::impl::wrap_kernel_functor_unboxed_&lt;c10::impl::detail::WrapFunctionIntoFunctor_&lt;c10::CompileTimeFunctionPointer&lt;at::Tensor(at::Tensor const&amp;, at::Tensor const&amp;, std::optional&lt;at::Tensor&gt; const&amp;, c10::ArrayRef&lt;c10::SymInt&gt;, c10::ArrayRef&lt;c10::SymInt&gt;, c10::ArrayRef&lt;c10::SymInt&gt;, bool, c10::ArrayRef&lt;c10::SymInt&gt;, c10::SymInt), &amp;at::(anonymous namespace)::(anonymous namespace)::wrapper_CompositeExplicitAutograd__convolution(at::Tensor const&amp;, at::Tensor const&amp;, std::optional&lt;at::Tensor&gt; const&amp;, c10::ArrayRef&lt;c10::SymInt&gt;, c10::ArrayRef&lt;c10::SymInt&gt;, c10::ArrayRef&lt;c10::SymInt&gt;, bool, c10::ArrayRef&lt;c10::SymInt&gt;, c10::SymInt)&gt;, at::Tensor, c10::guts::typelist::typelist&lt;at::Tensor const&amp;, at::Tensor const&amp;, std::optional&lt;at::Tensor&gt; const&amp;, c10::ArrayRef&lt;c10::SymInt&gt;, c10::ArrayRef&lt;c10::SymInt&gt;, c10::ArrayRef&lt;c10::SymInt&gt;, bool, c10::ArrayRef&lt;c10::SymInt&gt;, c10::SymInt&gt; &gt;, at::Tensor(at::Tensor const&amp;, at::Tensor const&amp;, std::optional&lt;at::Tensor&gt; const&amp;, c10::ArrayRef&lt;c10::SymInt&gt;, c10::ArrayRef&lt;c10::SymInt&gt;, c10::ArrayRef&lt;c10::SymInt&gt;, bool, c10::ArrayRef&lt;c10::SymInt&gt;, c10::SymInt)&gt;::call (libtorch_cpu.so) (37 samples, 0.57%)</title><rect x="23.3901%" y="516" width="0.5728%" height="15" fill="rgb(229,83,13)" fg:x="1511" fg:w="37"/><text x="23.6401%" y="526.50"></text></g><g><title>at::(anonymous namespace)::(anonymous namespace)::wrapper_CompositeExplicitAutograd__convolution (libtorch_cpu.so) (37 samples, 0.57%)</title><rect x="23.3901%" y="532" width="0.5728%" height="15" fill="rgb(241,91,40)" fg:x="1511" fg:w="37"/><text x="23.6401%" y="542.50"></text></g><g><title>at::native::convolution (libtorch_cpu.so) (37 samples, 0.57%)</title><rect x="23.3901%" y="548" width="0.5728%" height="15" fill="rgb(225,3,45)" fg:x="1511" fg:w="37"/><text x="23.6401%" y="558.50"></text></g><g><title>at::_ops::_convolution::call (libtorch_cpu.so) (37 samples, 0.57%)</title><rect x="23.3901%" y="564" width="0.5728%" height="15" fill="rgb(244,223,14)" fg:x="1511" fg:w="37"/><text x="23.6401%" y="574.50"></text></g><g><title>c10::impl::wrap_kernel_functor_unboxed_&lt;c10::impl::detail::WrapFunctionIntoFunctor_&lt;c10::CompileTimeFunctionPointer&lt;at::Tensor(at::Tensor const&amp;, at::Tensor const&amp;, std::optional&lt;at::Tensor&gt; const&amp;, c10::ArrayRef&lt;c10::SymInt&gt;, c10::ArrayRef&lt;c10::SymInt&gt;, c10::ArrayRef&lt;c10::SymInt&gt;, bool, c10::ArrayRef&lt;c10::SymInt&gt;, c10::SymInt, bool, bool, bool, bool), &amp;at::(anonymous namespace)::(anonymous namespace)::wrapper_CompositeExplicitAutograd___convolution(at::Tensor const&amp;, at::Tensor const&amp;, std::optional&lt;at::Tensor&gt; const&amp;, c10::ArrayRef&lt;c10::SymInt&gt;, c10::ArrayRef&lt;c10::SymInt&gt;, c10::ArrayRef&lt;c10::SymInt&gt;, bool, c10::ArrayRef&lt;c10::SymInt&gt;, c10::SymInt, bool, bool, bool, bool)&gt;, at::Tensor, c10::guts::typelist::typelist&lt;at::Tensor const&amp;, at::Tensor const&amp;, std::optional&lt;at::Tensor&gt; const&amp;, c10::ArrayRef&lt;c10::SymInt&gt;, c10::ArrayRef&lt;c10::SymInt&gt;, c10::ArrayRef&lt;c10::SymInt&gt;, bool, c10::ArrayRef&lt;c10::SymInt&gt;, c10::SymInt, bool, bool, bool, bool&gt; &gt;, at::Tensor(at::Tensor const&amp;, at::Tensor const&amp;, std::optional&lt;at::Tensor&gt; const&amp;, c10::ArrayRef&lt;c10::SymInt&gt;, c10::ArrayRef&lt;c10::SymInt&gt;, c10::ArrayRef&lt;c10::SymInt&gt;, bool, c10::ArrayRef&lt;c10::SymInt&gt;, c10::SymInt, bool, bool, bool, bool)&gt;::call (libtorch_cpu.so) (37 samples, 0.57%)</title><rect x="23.3901%" y="580" width="0.5728%" height="15" fill="rgb(224,124,37)" fg:x="1511" fg:w="37"/><text x="23.6401%" y="590.50"></text></g><g><title>at::(anonymous namespace)::(anonymous namespace)::wrapper_CompositeExplicitAutograd___convolution (libtorch_cpu.so) (37 samples, 0.57%)</title><rect x="23.3901%" y="596" width="0.5728%" height="15" fill="rgb(251,171,30)" fg:x="1511" fg:w="37"/><text x="23.6401%" y="606.50"></text></g><g><title>at::native::_convolution (libtorch_cpu.so) (37 samples, 0.57%)</title><rect x="23.3901%" y="612" width="0.5728%" height="15" fill="rgb(236,46,54)" fg:x="1511" fg:w="37"/><text x="23.6401%" y="622.50"></text></g><g><title>at::_ops::mkldnn_convolution::call (libtorch_cpu.so) (37 samples, 0.57%)</title><rect x="23.3901%" y="628" width="0.5728%" height="15" fill="rgb(245,213,5)" fg:x="1511" fg:w="37"/><text x="23.6401%" y="638.50"></text></g><g><title>c10::impl::wrap_kernel_functor_unboxed_&lt;c10::impl::detail::WrapFunctionIntoFunctor_&lt;c10::CompileTimeFunctionPointer&lt;at::Tensor(at::Tensor const&amp;, at::Tensor const&amp;, std::optional&lt;at::Tensor&gt; const&amp;, c10::ArrayRef&lt;c10::SymInt&gt;, c10::ArrayRef&lt;c10::SymInt&gt;, c10::ArrayRef&lt;c10::SymInt&gt;, c10::SymInt), &amp;at::(anonymous namespace)::(anonymous namespace)::wrapper_CompositeExplicitAutograd__mkldnn_convolution(at::Tensor const&amp;, at::Tensor const&amp;, std::optional&lt;at::Tensor&gt; const&amp;, c10::ArrayRef&lt;c10::SymInt&gt;, c10::ArrayRef&lt;c10::SymInt&gt;, c10::ArrayRef&lt;c10::SymInt&gt;, c10::SymInt)&gt;, at::Tensor, c10::guts::typelist::typelist&lt;at::Tensor const&amp;, at::Tensor const&amp;, std::optional&lt;at::Tensor&gt; const&amp;, c10::ArrayRef&lt;c10::SymInt&gt;, c10::ArrayRef&lt;c10::SymInt&gt;, c10::ArrayRef&lt;c10::SymInt&gt;, c10::SymInt&gt; &gt;, at::Tensor(at::Tensor const&amp;, at::Tensor const&amp;, std::optional&lt;at::Tensor&gt; const&amp;, c10::ArrayRef&lt;c10::SymInt&gt;, c10::ArrayRef&lt;c10::SymInt&gt;, c10::ArrayRef&lt;c10::SymInt&gt;, c10::SymInt)&gt;::call (libtorch_cpu.so) (37 samples, 0.57%)</title><rect x="23.3901%" y="644" width="0.5728%" height="15" fill="rgb(230,144,27)" fg:x="1511" fg:w="37"/><text x="23.6401%" y="654.50"></text></g><g><title>at::(anonymous namespace)::(anonymous namespace)::wrapper_CompositeExplicitAutograd__mkldnn_convolution (libtorch_cpu.so) (37 samples, 0.57%)</title><rect x="23.3901%" y="660" width="0.5728%" height="15" fill="rgb(220,86,6)" fg:x="1511" fg:w="37"/><text x="23.6401%" y="670.50"></text></g><g><title>at::native::mkldnn_convolution (libtorch_cpu.so) (37 samples, 0.57%)</title><rect x="23.3901%" y="676" width="0.5728%" height="15" fill="rgb(240,20,13)" fg:x="1511" fg:w="37"/><text x="23.6401%" y="686.50"></text></g><g><title>at::native::_mkldnn_convolution (libtorch_cpu.so) (37 samples, 0.57%)</title><rect x="23.3901%" y="692" width="0.5728%" height="15" fill="rgb(217,89,34)" fg:x="1511" fg:w="37"/><text x="23.6401%" y="702.50"></text></g><g><title>at::native::mkldnn_to_dense (libtorch_cpu.so) (12 samples, 0.19%)</title><rect x="23.7771%" y="708" width="0.1858%" height="15" fill="rgb(229,13,5)" fg:x="1536" fg:w="12"/><text x="24.0271%" y="718.50"></text></g><g><title>ideep::tensor::to_public (libtorch_cpu.so) (12 samples, 0.19%)</title><rect x="23.7771%" y="724" width="0.1858%" height="15" fill="rgb(244,67,35)" fg:x="1536" fg:w="12"/><text x="24.0271%" y="734.50"></text></g><g><title>ideep::tensor::reorder_to (libtorch_cpu.so) (12 samples, 0.19%)</title><rect x="23.7771%" y="740" width="0.1858%" height="15" fill="rgb(221,40,2)" fg:x="1536" fg:w="12"/><text x="24.0271%" y="750.50"></text></g><g><title>dnnl::primitive::execute (libtorch_cpu.so) (12 samples, 0.19%)</title><rect x="23.7771%" y="756" width="0.1858%" height="15" fill="rgb(237,157,21)" fg:x="1536" fg:w="12"/><text x="24.0271%" y="766.50"></text></g><g><title>dnnl_primitive_execute (libtorch_cpu.so) (12 samples, 0.19%)</title><rect x="23.7771%" y="772" width="0.1858%" height="15" fill="rgb(222,94,11)" fg:x="1536" fg:w="12"/><text x="24.0271%" y="782.50"></text></g><g><title>dnnl::impl::primitive_execute (libtorch_cpu.so) (12 samples, 0.19%)</title><rect x="23.7771%" y="788" width="0.1858%" height="15" fill="rgb(249,113,6)" fg:x="1536" fg:w="12"/><text x="24.0271%" y="798.50"></text></g><g><title>dnnl_primitive::execute (libtorch_cpu.so) (12 samples, 0.19%)</title><rect x="23.7771%" y="804" width="0.1858%" height="15" fill="rgb(238,137,36)" fg:x="1536" fg:w="12"/><text x="24.0271%" y="814.50"></text></g><g><title>dnnl::impl::cpu::x64::jit_blk_reorder_t::execute (libtorch_cpu.so) (12 samples, 0.19%)</title><rect x="23.7771%" y="820" width="0.1858%" height="15" fill="rgb(210,102,26)" fg:x="1536" fg:w="12"/><text x="24.0271%" y="830.50"></text></g><g><title>forward (torchvision/models/resnet.py:102) (21 samples, 0.33%)</title><rect x="23.9628%" y="260" width="0.3251%" height="15" fill="rgb(218,30,30)" fg:x="1548" fg:w="21"/><text x="24.2128%" y="270.50"></text></g><g><title>torch::autograd::TypeError_to_NotImplemented_&lt;&amp;torch::autograd::THPVariable_add_(_object*, _object*, _object*)&gt; (libtorch_python.so) (21 samples, 0.33%)</title><rect x="23.9628%" y="276" width="0.3251%" height="15" fill="rgb(214,67,26)" fg:x="1548" fg:w="21"/><text x="24.2128%" y="286.50"></text></g><g><title>torch::autograd::THPVariable_add_ (libtorch_python.so) (21 samples, 0.33%)</title><rect x="23.9628%" y="292" width="0.3251%" height="15" fill="rgb(251,9,53)" fg:x="1548" fg:w="21"/><text x="24.2128%" y="302.50"></text></g><g><title>at::_ops::add__Tensor::call (libtorch_cpu.so) (21 samples, 0.33%)</title><rect x="23.9628%" y="308" width="0.3251%" height="15" fill="rgb(228,204,25)" fg:x="1548" fg:w="21"/><text x="24.2128%" y="318.50"></text></g><g><title>torch::autograd::VariableType::(anonymous namespace)::add__Tensor (libtorch_cpu.so) (21 samples, 0.33%)</title><rect x="23.9628%" y="324" width="0.3251%" height="15" fill="rgb(207,153,8)" fg:x="1548" fg:w="21"/><text x="24.2128%" y="334.50"></text></g><g><title>c10::impl::wrap_kernel_functor_unboxed_&lt;c10::impl::detail::WrapFunctionIntoFunctor_&lt;c10::CompileTimeFunctionPointer&lt;at::Tensor&amp; (c10::DispatchKeySet, at::Tensor&amp;, at::Tensor const&amp;, c10::Scalar const&amp;), &amp;torch::ADInplaceOrView::(anonymous namespace)::add__Tensor(c10::DispatchKeySet, at::Tensor&amp;, at::Tensor const&amp;, c10::Scalar const&amp;)&gt;, at::Tensor&amp;, c10::guts::typelist::typelist&lt;c10::DispatchKeySet, at::Tensor&amp;, at::Tensor const&amp;, c10::Scalar const&amp;&gt; &gt;, at::Tensor&amp; (c10::DispatchKeySet, at::Tensor&amp;, at::Tensor const&amp;, c10::Scalar const&amp;)&gt;::call (libtorch_cpu.so) (21 samples, 0.33%)</title><rect x="23.9628%" y="340" width="0.3251%" height="15" fill="rgb(242,9,16)" fg:x="1548" fg:w="21"/><text x="24.2128%" y="350.50"></text></g><g><title>at::(anonymous namespace)::wrapper_CPU_add__Tensor (libtorch_cpu.so) (21 samples, 0.33%)</title><rect x="23.9628%" y="356" width="0.3251%" height="15" fill="rgb(217,211,10)" fg:x="1548" fg:w="21"/><text x="24.2128%" y="366.50"></text></g><g><title>at::native::(anonymous namespace)::add_kernel (libtorch_cpu.so) (21 samples, 0.33%)</title><rect x="23.9628%" y="372" width="0.3251%" height="15" fill="rgb(219,228,52)" fg:x="1548" fg:w="21"/><text x="24.2128%" y="382.50"></text></g><g><title>at::native::(anonymous namespace)::add_kernel(at::TensorIteratorBase&amp;, c10::Scalar const&amp;)::{lambda()#1}::operator() const (libtorch_cpu.so) (21 samples, 0.33%)</title><rect x="23.9628%" y="388" width="0.3251%" height="15" fill="rgb(231,92,29)" fg:x="1548" fg:w="21"/><text x="24.2128%" y="398.50"></text></g><g><title>at::TensorIteratorBase::for_each (libtorch_cpu.so) (21 samples, 0.33%)</title><rect x="23.9628%" y="404" width="0.3251%" height="15" fill="rgb(232,8,23)" fg:x="1548" fg:w="21"/><text x="24.2128%" y="414.50"></text></g><g><title>GOMP_parallel (libgomp-c9fef706.so.1) (16 samples, 0.25%)</title><rect x="24.0402%" y="420" width="0.2477%" height="15" fill="rgb(216,211,34)" fg:x="1553" fg:w="16"/><text x="24.2902%" y="430.50"></text></g><g><title>at::internal::invoke_parallel&lt;at::parallel_for&lt;at::TensorIteratorBase::for_each(c10::function_ref&lt;void (char**, long const*, long, long)&gt;, long)::{lambda(long, long)#1}&gt;(long, long, long, at::TensorIteratorBase::for_each(c10::function_ref&lt;void (char**, long const*, long, long)&gt;, long)::{lambda(long, long)#1} const&amp;)::{lambda(long, long)#1}&gt; (libtorch_cpu.so) (11 samples, 0.17%)</title><rect x="24.1176%" y="436" width="0.1703%" height="15" fill="rgb(236,151,0)" fg:x="1558" fg:w="11"/><text x="24.3676%" y="446.50"></text></g><g><title>at::TensorIteratorBase::serial_for_each (libtorch_cpu.so) (11 samples, 0.17%)</title><rect x="24.1176%" y="452" width="0.1703%" height="15" fill="rgb(209,168,3)" fg:x="1558" fg:w="11"/><text x="24.3676%" y="462.50"></text></g><g><title>c10::function_ref&lt;void (char**, long const*, long, long)&gt;::callback_fn&lt;at::native::AVX2::VectorizedLoop2d&lt;at::native::(anonymous namespace)::add_kernel(at::TensorIteratorBase&amp;, c10::Scalar const&amp;)::{lambda()#1}::operator()() const::{lambda()#7}::operator()() const::{lambda(float, float)#1}, at::native::(anonymous namespace)::add_kernel(at::TensorIteratorBase&amp;, c10::Scalar const&amp;)::{lambda()#1}::operator()() const::{lambda()#7}::operator()() const::{lambda(at::vec::AVX2::Vectorized&lt;float&gt;, at::vec::AVX2::Vectorized&lt;float&gt;)#2}&gt; &gt; (libtorch_cpu.so) (11 samples, 0.17%)</title><rect x="24.1176%" y="468" width="0.1703%" height="15" fill="rgb(208,129,28)" fg:x="1558" fg:w="11"/><text x="24.3676%" y="478.50"></text></g><g><title>0x77d25141ca9d (libgomp-c9fef706.so.1) (7 samples, 0.11%)</title><rect x="24.3034%" y="500" width="0.1084%" height="15" fill="rgb(229,78,22)" fg:x="1570" fg:w="7"/><text x="24.5534%" y="510.50"></text></g><g><title>0x77d25141e02a (libgomp-c9fef706.so.1) (7 samples, 0.11%)</title><rect x="24.3034%" y="516" width="0.1084%" height="15" fill="rgb(228,187,13)" fg:x="1570" fg:w="7"/><text x="24.5534%" y="526.50"></text></g><g><title>forward (torchvision/models/resnet.py:103) (15 samples, 0.23%)</title><rect x="24.2879%" y="260" width="0.2322%" height="15" fill="rgb(240,119,24)" fg:x="1569" fg:w="15"/><text x="24.5379%" y="270.50"></text></g><g><title>_wrapped_call_impl (torch/nn/modules/module.py:1751) (14 samples, 0.22%)</title><rect x="24.3034%" y="276" width="0.2167%" height="15" fill="rgb(209,194,42)" fg:x="1570" fg:w="14"/><text x="24.5534%" y="286.50"></text></g><g><title>_call_impl (torch/nn/modules/module.py:1762) (14 samples, 0.22%)</title><rect x="24.3034%" y="292" width="0.2167%" height="15" fill="rgb(247,200,46)" fg:x="1570" fg:w="14"/><text x="24.5534%" y="302.50"></text></g><g><title>forward (torch/nn/modules/activation.py:133) (14 samples, 0.22%)</title><rect x="24.3034%" y="308" width="0.2167%" height="15" fill="rgb(218,76,16)" fg:x="1570" fg:w="14"/><text x="24.5534%" y="318.50"></text></g><g><title>relu (torch/nn/functional.py:1702) (14 samples, 0.22%)</title><rect x="24.3034%" y="324" width="0.2167%" height="15" fill="rgb(225,21,48)" fg:x="1570" fg:w="14"/><text x="24.5534%" y="334.50"></text></g><g><title>torch::autograd::THPVariable_relu_ (libtorch_python.so) (14 samples, 0.22%)</title><rect x="24.3034%" y="340" width="0.2167%" height="15" fill="rgb(239,223,50)" fg:x="1570" fg:w="14"/><text x="24.5534%" y="350.50"></text></g><g><title>at::_ops::relu_::call (libtorch_cpu.so) (14 samples, 0.22%)</title><rect x="24.3034%" y="356" width="0.2167%" height="15" fill="rgb(244,45,21)" fg:x="1570" fg:w="14"/><text x="24.5534%" y="366.50"></text></g><g><title>torch::autograd::VariableType::(anonymous namespace)::relu_ (libtorch_cpu.so) (14 samples, 0.22%)</title><rect x="24.3034%" y="372" width="0.2167%" height="15" fill="rgb(232,33,43)" fg:x="1570" fg:w="14"/><text x="24.5534%" y="382.50"></text></g><g><title>c10::impl::wrap_kernel_functor_unboxed_&lt;c10::impl::detail::WrapFunctionIntoFunctor_&lt;c10::CompileTimeFunctionPointer&lt;at::Tensor&amp; (c10::DispatchKeySet, at::Tensor&amp;), &amp;torch::ADInplaceOrView::(anonymous namespace)::relu_(c10::DispatchKeySet, at::Tensor&amp;)&gt;, at::Tensor&amp;, c10::guts::typelist::typelist&lt;c10::DispatchKeySet, at::Tensor&amp;&gt; &gt;, at::Tensor&amp; (c10::DispatchKeySet, at::Tensor&amp;)&gt;::call (libtorch_cpu.so) (14 samples, 0.22%)</title><rect x="24.3034%" y="388" width="0.2167%" height="15" fill="rgb(209,8,3)" fg:x="1570" fg:w="14"/><text x="24.5534%" y="398.50"></text></g><g><title>at::native::relu_ (libtorch_cpu.so) (14 samples, 0.22%)</title><rect x="24.3034%" y="404" width="0.2167%" height="15" fill="rgb(214,25,53)" fg:x="1570" fg:w="14"/><text x="24.5534%" y="414.50"></text></g><g><title>at::_ops::clamp_min_::call (libtorch_cpu.so) (14 samples, 0.22%)</title><rect x="24.3034%" y="420" width="0.2167%" height="15" fill="rgb(254,186,54)" fg:x="1570" fg:w="14"/><text x="24.5534%" y="430.50"></text></g><g><title>at::(anonymous namespace)::wrapper_CPU_clamp_min_ (libtorch_cpu.so) (14 samples, 0.22%)</title><rect x="24.3034%" y="436" width="0.2167%" height="15" fill="rgb(208,174,49)" fg:x="1570" fg:w="14"/><text x="24.5534%" y="446.50"></text></g><g><title>at::native::structured_clamp_min_out::impl (libtorch_cpu.so) (14 samples, 0.22%)</title><rect x="24.3034%" y="452" width="0.2167%" height="15" fill="rgb(233,191,51)" fg:x="1570" fg:w="14"/><text x="24.5534%" y="462.50"></text></g><g><title>at::native::(anonymous namespace)::clamp_min_scalar_kernel_impl (libtorch_cpu.so) (14 samples, 0.22%)</title><rect x="24.3034%" y="468" width="0.2167%" height="15" fill="rgb(222,134,10)" fg:x="1570" fg:w="14"/><text x="24.5534%" y="478.50"></text></g><g><title>at::TensorIteratorBase::for_each (libtorch_cpu.so) (14 samples, 0.22%)</title><rect x="24.3034%" y="484" width="0.2167%" height="15" fill="rgb(230,226,20)" fg:x="1570" fg:w="14"/><text x="24.5534%" y="494.50"></text></g><g><title>GOMP_parallel (libgomp-c9fef706.so.1) (7 samples, 0.11%)</title><rect x="24.4118%" y="500" width="0.1084%" height="15" fill="rgb(251,111,25)" fg:x="1577" fg:w="7"/><text x="24.6618%" y="510.50"></text></g><g><title>0x77d25141c19a (libgomp-c9fef706.so.1) (7 samples, 0.11%)</title><rect x="24.6130%" y="804" width="0.1084%" height="15" fill="rgb(224,40,46)" fg:x="1590" fg:w="7"/><text x="24.8630%" y="814.50"></text></g><g><title>0x77d25141de62 (libgomp-c9fef706.so.1) (7 samples, 0.11%)</title><rect x="24.6130%" y="820" width="0.1084%" height="15" fill="rgb(236,108,47)" fg:x="1590" fg:w="7"/><text x="24.8630%" y="830.50"></text></g><g><title>dnnl::primitive::execute (libtorch_cpu.so) (105 samples, 1.63%)</title><rect x="24.5356%" y="692" width="1.6254%" height="15" fill="rgb(234,93,0)" fg:x="1585" fg:w="105"/><text x="24.7856%" y="702.50"></text></g><g><title>dnnl_primitive_execute (libtorch_cpu.so) (105 samples, 1.63%)</title><rect x="24.5356%" y="708" width="1.6254%" height="15" fill="rgb(224,213,32)" fg:x="1585" fg:w="105"/><text x="24.7856%" y="718.50"></text></g><g><title>dnnl::impl::primitive_execute (libtorch_cpu.so) (105 samples, 1.63%)</title><rect x="24.5356%" y="724" width="1.6254%" height="15" fill="rgb(251,11,48)" fg:x="1585" fg:w="105"/><text x="24.7856%" y="734.50"></text></g><g><title>dnnl_primitive::execute (libtorch_cpu.so) (105 samples, 1.63%)</title><rect x="24.5356%" y="740" width="1.6254%" height="15" fill="rgb(236,173,5)" fg:x="1585" fg:w="105"/><text x="24.7856%" y="750.50"></text></g><g><title>dnnl::impl::cpu::x64::jit_avx2_convolution_fwd_t::execute (libtorch_cpu.so) (105 samples, 1.63%)</title><rect x="24.5356%" y="756" width="1.6254%" height="15" fill="rgb(230,95,12)" fg:x="1585" fg:w="105"/><text x="24.7856%" y="766.50"></text></g><g><title>dnnl::impl::cpu::x64::jit_avx2_convolution_fwd_t::execute_forward (libtorch_cpu.so) (105 samples, 1.63%)</title><rect x="24.5356%" y="772" width="1.6254%" height="15" fill="rgb(232,209,1)" fg:x="1585" fg:w="105"/><text x="24.7856%" y="782.50"></text></g><g><title>GOMP_parallel (libgomp-c9fef706.so.1) (100 samples, 1.55%)</title><rect x="24.6130%" y="788" width="1.5480%" height="15" fill="rgb(232,6,1)" fg:x="1590" fg:w="100"/><text x="24.8630%" y="798.50"></text></g><g><title>dnnl::impl::parallel (libtorch_cpu.so) (93 samples, 1.44%)</title><rect x="24.7214%" y="804" width="1.4396%" height="15" fill="rgb(210,224,50)" fg:x="1597" fg:w="93"/><text x="24.9714%" y="814.50"></text></g><g><title>dnnl::impl::cpu::x64::jit_avx2_convolution_fwd_t::execute_forward(dnnl::impl::exec_ctx_t const&amp;) const::{lambda(int, int)#1}::operator() const (libtorch_cpu.so) (93 samples, 1.44%)</title><rect x="24.7214%" y="820" width="1.4396%" height="15" fill="rgb(228,127,35)" fg:x="1597" fg:w="93"/><text x="24.9714%" y="830.50"></text></g><g><title>dnnl::impl::cpu::x64::jit_blk_reorder_t::execute (libtorch_cpu.so) (10 samples, 0.15%)</title><rect x="26.2074%" y="788" width="0.1548%" height="15" fill="rgb(245,102,45)" fg:x="1693" fg:w="10"/><text x="26.4574%" y="798.50"></text></g><g><title>GOMP_parallel (libgomp-c9fef706.so.1) (7 samples, 0.11%)</title><rect x="26.2539%" y="804" width="0.1084%" height="15" fill="rgb(214,1,49)" fg:x="1696" fg:w="7"/><text x="26.5039%" y="814.50"></text></g><g><title>0x77d25141ca9d (libgomp-c9fef706.so.1) (8 samples, 0.12%)</title><rect x="26.3622%" y="820" width="0.1238%" height="15" fill="rgb(226,163,40)" fg:x="1703" fg:w="8"/><text x="26.6122%" y="830.50"></text></g><g><title>0x77d25141e02a (libgomp-c9fef706.so.1) (8 samples, 0.12%)</title><rect x="26.3622%" y="836" width="0.1238%" height="15" fill="rgb(239,212,28)" fg:x="1703" fg:w="8"/><text x="26.6122%" y="846.50"></text></g><g><title>dnnl::primitive::execute (libtorch_cpu.so) (20 samples, 0.31%)</title><rect x="26.2074%" y="724" width="0.3096%" height="15" fill="rgb(220,20,13)" fg:x="1693" fg:w="20"/><text x="26.4574%" y="734.50"></text></g><g><title>dnnl_primitive_execute (libtorch_cpu.so) (20 samples, 0.31%)</title><rect x="26.2074%" y="740" width="0.3096%" height="15" fill="rgb(210,164,35)" fg:x="1693" fg:w="20"/><text x="26.4574%" y="750.50"></text></g><g><title>dnnl::impl::primitive_execute (libtorch_cpu.so) (20 samples, 0.31%)</title><rect x="26.2074%" y="756" width="0.3096%" height="15" fill="rgb(248,109,41)" fg:x="1693" fg:w="20"/><text x="26.4574%" y="766.50"></text></g><g><title>dnnl_primitive::execute (libtorch_cpu.so) (20 samples, 0.31%)</title><rect x="26.2074%" y="772" width="0.3096%" height="15" fill="rgb(238,23,50)" fg:x="1693" fg:w="20"/><text x="26.4574%" y="782.50"></text></g><g><title>dnnl::impl::cpu::x64::jit_uni_reorder_t::execute (libtorch_cpu.so) (10 samples, 0.15%)</title><rect x="26.3622%" y="788" width="0.1548%" height="15" fill="rgb(211,48,49)" fg:x="1703" fg:w="10"/><text x="26.6122%" y="798.50"></text></g><g><title>dnnl::impl::cpu::x64::jit_uni_reorder_t::omp_driver (libtorch_cpu.so) (10 samples, 0.15%)</title><rect x="26.3622%" y="804" width="0.1548%" height="15" fill="rgb(223,36,21)" fg:x="1703" fg:w="10"/><text x="26.6122%" y="814.50"></text></g><g><title>at::native::_mkldnn_convolution_out (libtorch_cpu.so) (131 samples, 2.03%)</title><rect x="24.5201%" y="660" width="2.0279%" height="15" fill="rgb(207,123,46)" fg:x="1584" fg:w="131"/><text x="24.7701%" y="670.50">a..</text></g><g><title>ideep::convolution_forward::compute_dispatch&lt;false, true, true&gt; (libtorch_cpu.so) (130 samples, 2.01%)</title><rect x="24.5356%" y="676" width="2.0124%" height="15" fill="rgb(240,218,32)" fg:x="1585" fg:w="130"/><text x="24.7856%" y="686.50">i..</text></g><g><title>ideep::tensor::reorder_if_differ_in (libtorch_cpu.so) (22 samples, 0.34%)</title><rect x="26.2074%" y="692" width="0.3406%" height="15" fill="rgb(252,5,43)" fg:x="1693" fg:w="22"/><text x="26.4574%" y="702.50"></text></g><g><title>ideep::tensor::reorder_to (libtorch_cpu.so) (22 samples, 0.34%)</title><rect x="26.2074%" y="708" width="0.3406%" height="15" fill="rgb(252,84,19)" fg:x="1693" fg:w="22"/><text x="26.4574%" y="718.50"></text></g><g><title>dnnl::primitive::execute (libtorch_cpu.so) (11 samples, 0.17%)</title><rect x="26.5480%" y="708" width="0.1703%" height="15" fill="rgb(243,152,39)" fg:x="1715" fg:w="11"/><text x="26.7980%" y="718.50"></text></g><g><title>dnnl_primitive_execute (libtorch_cpu.so) (11 samples, 0.17%)</title><rect x="26.5480%" y="724" width="0.1703%" height="15" fill="rgb(234,160,15)" fg:x="1715" fg:w="11"/><text x="26.7980%" y="734.50"></text></g><g><title>dnnl::impl::primitive_execute (libtorch_cpu.so) (11 samples, 0.17%)</title><rect x="26.5480%" y="740" width="0.1703%" height="15" fill="rgb(237,34,20)" fg:x="1715" fg:w="11"/><text x="26.7980%" y="750.50"></text></g><g><title>dnnl_primitive::execute (libtorch_cpu.so) (11 samples, 0.17%)</title><rect x="26.5480%" y="756" width="0.1703%" height="15" fill="rgb(229,97,13)" fg:x="1715" fg:w="11"/><text x="26.7980%" y="766.50"></text></g><g><title>dnnl::impl::cpu::x64::jit_blk_reorder_t::execute (libtorch_cpu.so) (11 samples, 0.17%)</title><rect x="26.5480%" y="772" width="0.1703%" height="15" fill="rgb(234,71,50)" fg:x="1715" fg:w="11"/><text x="26.7980%" y="782.50"></text></g><g><title>GOMP_parallel (libgomp-c9fef706.so.1) (8 samples, 0.12%)</title><rect x="26.5944%" y="788" width="0.1238%" height="15" fill="rgb(253,155,4)" fg:x="1718" fg:w="8"/><text x="26.8444%" y="798.50"></text></g><g><title>forward (torchvision/models/resnet.py:92) (144 samples, 2.23%)</title><rect x="24.5201%" y="260" width="2.2291%" height="15" fill="rgb(222,185,37)" fg:x="1584" fg:w="144"/><text x="24.7701%" y="270.50">f..</text></g><g><title>_wrapped_call_impl (torch/nn/modules/module.py:1751) (144 samples, 2.23%)</title><rect x="24.5201%" y="276" width="2.2291%" height="15" fill="rgb(251,177,13)" fg:x="1584" fg:w="144"/><text x="24.7701%" y="286.50">_..</text></g><g><title>_call_impl (torch/nn/modules/module.py:1762) (144 samples, 2.23%)</title><rect x="24.5201%" y="292" width="2.2291%" height="15" fill="rgb(250,179,40)" fg:x="1584" fg:w="144"/><text x="24.7701%" y="302.50">_..</text></g><g><title>forward (torch/nn/modules/conv.py:554) (144 samples, 2.23%)</title><rect x="24.5201%" y="308" width="2.2291%" height="15" fill="rgb(242,44,2)" fg:x="1584" fg:w="144"/><text x="24.7701%" y="318.50">f..</text></g><g><title>_conv_forward (torch/nn/modules/conv.py:550) (144 samples, 2.23%)</title><rect x="24.5201%" y="324" width="2.2291%" height="15" fill="rgb(216,177,13)" fg:x="1584" fg:w="144"/><text x="24.7701%" y="334.50">_..</text></g><g><title>torch::autograd::THPVariable_conv2d (libtorch_python.so) (144 samples, 2.23%)</title><rect x="24.5201%" y="340" width="2.2291%" height="15" fill="rgb(216,106,43)" fg:x="1584" fg:w="144"/><text x="24.7701%" y="350.50">t..</text></g><g><title>at::_ops::conv2d::call (libtorch_cpu.so) (144 samples, 2.23%)</title><rect x="24.5201%" y="356" width="2.2291%" height="15" fill="rgb(216,183,2)" fg:x="1584" fg:w="144"/><text x="24.7701%" y="366.50">a..</text></g><g><title>c10::impl::wrap_kernel_functor_unboxed_&lt;c10::impl::detail::WrapFunctionIntoFunctor_&lt;c10::CompileTimeFunctionPointer&lt;at::Tensor(at::Tensor const&amp;, at::Tensor const&amp;, std::optional&lt;at::Tensor&gt; const&amp;, c10::ArrayRef&lt;c10::SymInt&gt;, c10::ArrayRef&lt;c10::SymInt&gt;, c10::ArrayRef&lt;c10::SymInt&gt;, c10::SymInt), &amp;at::(anonymous namespace)::(anonymous namespace)::wrapper_CompositeImplicitAutograd__conv2d(at::Tensor const&amp;, at::Tensor const&amp;, std::optional&lt;at::Tensor&gt; const&amp;, c10::ArrayRef&lt;c10::SymInt&gt;, c10::ArrayRef&lt;c10::SymInt&gt;, c10::ArrayRef&lt;c10::SymInt&gt;, c10::SymInt)&gt;, at::Tensor, c10::guts::typelist::typelist&lt;at::Tensor const&amp;, at::Tensor const&amp;, std::optional&lt;at::Tensor&gt; const&amp;, c10::ArrayRef&lt;c10::SymInt&gt;, c10::ArrayRef&lt;c10::SymInt&gt;, c10::ArrayRef&lt;c10::SymInt&gt;, c10::SymInt&gt; &gt;, at::Tensor(at::Tensor const&amp;, at::Tensor const&amp;, std::optional&lt;at::Tensor&gt; const&amp;, c10::ArrayRef&lt;c10::SymInt&gt;, c10::ArrayRef&lt;c10::SymInt&gt;, c10::ArrayRef&lt;c10::SymInt&gt;, c10::SymInt)&gt;::call (libtorch_cpu.so) (144 samples, 2.23%)</title><rect x="24.5201%" y="372" width="2.2291%" height="15" fill="rgb(249,75,3)" fg:x="1584" fg:w="144"/><text x="24.7701%" y="382.50">c..</text></g><g><title>at::native::conv2d_symint (libtorch_cpu.so) (144 samples, 2.23%)</title><rect x="24.5201%" y="388" width="2.2291%" height="15" fill="rgb(219,67,39)" fg:x="1584" fg:w="144"/><text x="24.7701%" y="398.50">a..</text></g><g><title>at::_ops::convolution::call (libtorch_cpu.so) (144 samples, 2.23%)</title><rect x="24.5201%" y="404" width="2.2291%" height="15" fill="rgb(253,228,2)" fg:x="1584" fg:w="144"/><text x="24.7701%" y="414.50">a..</text></g><g><title>c10::impl::wrap_kernel_functor_unboxed_&lt;c10::impl::detail::WrapFunctionIntoFunctor_&lt;c10::CompileTimeFunctionPointer&lt;at::Tensor(c10::DispatchKeySet, at::Tensor const&amp;, at::Tensor const&amp;, std::optional&lt;at::Tensor&gt; const&amp;, c10::ArrayRef&lt;c10::SymInt&gt;, c10::ArrayRef&lt;c10::SymInt&gt;, c10::ArrayRef&lt;c10::SymInt&gt;, bool, c10::ArrayRef&lt;c10::SymInt&gt;, c10::SymInt), &amp;torch::autograd::VariableType::(anonymous namespace)::convolution(c10::DispatchKeySet, at::Tensor const&amp;, at::Tensor const&amp;, std::optional&lt;at::Tensor&gt; const&amp;, c10::ArrayRef&lt;c10::SymInt&gt;, c10::ArrayRef&lt;c10::SymInt&gt;, c10::ArrayRef&lt;c10::SymInt&gt;, bool, c10::ArrayRef&lt;c10::SymInt&gt;, c10::SymInt)&gt;, at::Tensor, c10::guts::typelist::typelist&lt;c10::DispatchKeySet, at::Tensor const&amp;, at::Tensor const&amp;, std::optional&lt;at::Tensor&gt; const&amp;, c10::ArrayRef&lt;c10::SymInt&gt;, c10::ArrayRef&lt;c10::SymInt&gt;, c10::ArrayRef&lt;c10::SymInt&gt;, bool, c10::ArrayRef&lt;c10::SymInt&gt;, c10::SymInt&gt; &gt;, at::Tensor(c10::DispatchKeySet, at::Tensor const&amp;, at::Tensor const&amp;, std::optional&lt;at::Tensor&gt; const&amp;, c10::ArrayRef&lt;c10::SymInt&gt;, c10::ArrayRef&lt;c10::SymInt&gt;, c10::ArrayRef&lt;c10::SymInt&gt;, bool, c10::ArrayRef&lt;c10::SymInt&gt;, c10::SymInt)&gt;::call (libtorch_cpu.so) (144 samples, 2.23%)</title><rect x="24.5201%" y="420" width="2.2291%" height="15" fill="rgb(235,138,27)" fg:x="1584" fg:w="144"/><text x="24.7701%" y="430.50">c..</text></g><g><title>torch::autograd::VariableType::(anonymous namespace)::convolution (libtorch_cpu.so) (144 samples, 2.23%)</title><rect x="24.5201%" y="436" width="2.2291%" height="15" fill="rgb(236,97,51)" fg:x="1584" fg:w="144"/><text x="24.7701%" y="446.50">t..</text></g><g><title>at::_ops::convolution::redispatch (libtorch_cpu.so) (144 samples, 2.23%)</title><rect x="24.5201%" y="452" width="2.2291%" height="15" fill="rgb(240,80,30)" fg:x="1584" fg:w="144"/><text x="24.7701%" y="462.50">a..</text></g><g><title>c10::impl::wrap_kernel_functor_unboxed_&lt;c10::impl::detail::WrapFunctionIntoFunctor_&lt;c10::CompileTimeFunctionPointer&lt;at::Tensor(at::Tensor const&amp;, at::Tensor const&amp;, std::optional&lt;at::Tensor&gt; const&amp;, c10::ArrayRef&lt;c10::SymInt&gt;, c10::ArrayRef&lt;c10::SymInt&gt;, c10::ArrayRef&lt;c10::SymInt&gt;, bool, c10::ArrayRef&lt;c10::SymInt&gt;, c10::SymInt), &amp;at::(anonymous namespace)::(anonymous namespace)::wrapper_CompositeExplicitAutograd__convolution(at::Tensor const&amp;, at::Tensor const&amp;, std::optional&lt;at::Tensor&gt; const&amp;, c10::ArrayRef&lt;c10::SymInt&gt;, c10::ArrayRef&lt;c10::SymInt&gt;, c10::ArrayRef&lt;c10::SymInt&gt;, bool, c10::ArrayRef&lt;c10::SymInt&gt;, c10::SymInt)&gt;, at::Tensor, c10::guts::typelist::typelist&lt;at::Tensor const&amp;, at::Tensor const&amp;, std::optional&lt;at::Tensor&gt; const&amp;, c10::ArrayRef&lt;c10::SymInt&gt;, c10::ArrayRef&lt;c10::SymInt&gt;, c10::ArrayRef&lt;c10::SymInt&gt;, bool, c10::ArrayRef&lt;c10::SymInt&gt;, c10::SymInt&gt; &gt;, at::Tensor(at::Tensor const&amp;, at::Tensor const&amp;, std::optional&lt;at::Tensor&gt; const&amp;, c10::ArrayRef&lt;c10::SymInt&gt;, c10::ArrayRef&lt;c10::SymInt&gt;, c10::ArrayRef&lt;c10::SymInt&gt;, bool, c10::ArrayRef&lt;c10::SymInt&gt;, c10::SymInt)&gt;::call (libtorch_cpu.so) (144 samples, 2.23%)</title><rect x="24.5201%" y="468" width="2.2291%" height="15" fill="rgb(230,178,19)" fg:x="1584" fg:w="144"/><text x="24.7701%" y="478.50">c..</text></g><g><title>at::(anonymous namespace)::(anonymous namespace)::wrapper_CompositeExplicitAutograd__convolution (libtorch_cpu.so) (144 samples, 2.23%)</title><rect x="24.5201%" y="484" width="2.2291%" height="15" fill="rgb(210,190,27)" fg:x="1584" fg:w="144"/><text x="24.7701%" y="494.50">a..</text></g><g><title>at::native::convolution (libtorch_cpu.so) (144 samples, 2.23%)</title><rect x="24.5201%" y="500" width="2.2291%" height="15" fill="rgb(222,107,31)" fg:x="1584" fg:w="144"/><text x="24.7701%" y="510.50">a..</text></g><g><title>at::_ops::_convolution::call (libtorch_cpu.so) (144 samples, 2.23%)</title><rect x="24.5201%" y="516" width="2.2291%" height="15" fill="rgb(216,127,34)" fg:x="1584" fg:w="144"/><text x="24.7701%" y="526.50">a..</text></g><g><title>c10::impl::wrap_kernel_functor_unboxed_&lt;c10::impl::detail::WrapFunctionIntoFunctor_&lt;c10::CompileTimeFunctionPointer&lt;at::Tensor(at::Tensor const&amp;, at::Tensor const&amp;, std::optional&lt;at::Tensor&gt; const&amp;, c10::ArrayRef&lt;c10::SymInt&gt;, c10::ArrayRef&lt;c10::SymInt&gt;, c10::ArrayRef&lt;c10::SymInt&gt;, bool, c10::ArrayRef&lt;c10::SymInt&gt;, c10::SymInt, bool, bool, bool, bool), &amp;at::(anonymous namespace)::(anonymous namespace)::wrapper_CompositeExplicitAutograd___convolution(at::Tensor const&amp;, at::Tensor const&amp;, std::optional&lt;at::Tensor&gt; const&amp;, c10::ArrayRef&lt;c10::SymInt&gt;, c10::ArrayRef&lt;c10::SymInt&gt;, c10::ArrayRef&lt;c10::SymInt&gt;, bool, c10::ArrayRef&lt;c10::SymInt&gt;, c10::SymInt, bool, bool, bool, bool)&gt;, at::Tensor, c10::guts::typelist::typelist&lt;at::Tensor const&amp;, at::Tensor const&amp;, std::optional&lt;at::Tensor&gt; const&amp;, c10::ArrayRef&lt;c10::SymInt&gt;, c10::ArrayRef&lt;c10::SymInt&gt;, c10::ArrayRef&lt;c10::SymInt&gt;, bool, c10::ArrayRef&lt;c10::SymInt&gt;, c10::SymInt, bool, bool, bool, bool&gt; &gt;, at::Tensor(at::Tensor const&amp;, at::Tensor const&amp;, std::optional&lt;at::Tensor&gt; const&amp;, c10::ArrayRef&lt;c10::SymInt&gt;, c10::ArrayRef&lt;c10::SymInt&gt;, c10::ArrayRef&lt;c10::SymInt&gt;, bool, c10::ArrayRef&lt;c10::SymInt&gt;, c10::SymInt, bool, bool, bool, bool)&gt;::call (libtorch_cpu.so) (144 samples, 2.23%)</title><rect x="24.5201%" y="532" width="2.2291%" height="15" fill="rgb(234,116,52)" fg:x="1584" fg:w="144"/><text x="24.7701%" y="542.50">c..</text></g><g><title>at::(anonymous namespace)::(anonymous namespace)::wrapper_CompositeExplicitAutograd___convolution (libtorch_cpu.so) (144 samples, 2.23%)</title><rect x="24.5201%" y="548" width="2.2291%" height="15" fill="rgb(222,124,15)" fg:x="1584" fg:w="144"/><text x="24.7701%" y="558.50">a..</text></g><g><title>at::native::_convolution (libtorch_cpu.so) (144 samples, 2.23%)</title><rect x="24.5201%" y="564" width="2.2291%" height="15" fill="rgb(231,179,28)" fg:x="1584" fg:w="144"/><text x="24.7701%" y="574.50">a..</text></g><g><title>at::_ops::mkldnn_convolution::call (libtorch_cpu.so) (144 samples, 2.23%)</title><rect x="24.5201%" y="580" width="2.2291%" height="15" fill="rgb(226,93,45)" fg:x="1584" fg:w="144"/><text x="24.7701%" y="590.50">a..</text></g><g><title>c10::impl::wrap_kernel_functor_unboxed_&lt;c10::impl::detail::WrapFunctionIntoFunctor_&lt;c10::CompileTimeFunctionPointer&lt;at::Tensor(at::Tensor const&amp;, at::Tensor const&amp;, std::optional&lt;at::Tensor&gt; const&amp;, c10::ArrayRef&lt;c10::SymInt&gt;, c10::ArrayRef&lt;c10::SymInt&gt;, c10::ArrayRef&lt;c10::SymInt&gt;, c10::SymInt), &amp;at::(anonymous namespace)::(anonymous namespace)::wrapper_CompositeExplicitAutograd__mkldnn_convolution(at::Tensor const&amp;, at::Tensor const&amp;, std::optional&lt;at::Tensor&gt; const&amp;, c10::ArrayRef&lt;c10::SymInt&gt;, c10::ArrayRef&lt;c10::SymInt&gt;, c10::ArrayRef&lt;c10::SymInt&gt;, c10::SymInt)&gt;, at::Tensor, c10::guts::typelist::typelist&lt;at::Tensor const&amp;, at::Tensor const&amp;, std::optional&lt;at::Tensor&gt; const&amp;, c10::ArrayRef&lt;c10::SymInt&gt;, c10::ArrayRef&lt;c10::SymInt&gt;, c10::ArrayRef&lt;c10::SymInt&gt;, c10::SymInt&gt; &gt;, at::Tensor(at::Tensor const&amp;, at::Tensor const&amp;, std::optional&lt;at::Tensor&gt; const&amp;, c10::ArrayRef&lt;c10::SymInt&gt;, c10::ArrayRef&lt;c10::SymInt&gt;, c10::ArrayRef&lt;c10::SymInt&gt;, c10::SymInt)&gt;::call (libtorch_cpu.so) (144 samples, 2.23%)</title><rect x="24.5201%" y="596" width="2.2291%" height="15" fill="rgb(215,8,51)" fg:x="1584" fg:w="144"/><text x="24.7701%" y="606.50">c..</text></g><g><title>at::(anonymous namespace)::(anonymous namespace)::wrapper_CompositeExplicitAutograd__mkldnn_convolution (libtorch_cpu.so) (144 samples, 2.23%)</title><rect x="24.5201%" y="612" width="2.2291%" height="15" fill="rgb(223,106,5)" fg:x="1584" fg:w="144"/><text x="24.7701%" y="622.50">a..</text></g><g><title>at::native::mkldnn_convolution (libtorch_cpu.so) (144 samples, 2.23%)</title><rect x="24.5201%" y="628" width="2.2291%" height="15" fill="rgb(250,191,5)" fg:x="1584" fg:w="144"/><text x="24.7701%" y="638.50">a..</text></g><g><title>at::native::_mkldnn_convolution (libtorch_cpu.so) (144 samples, 2.23%)</title><rect x="24.5201%" y="644" width="2.2291%" height="15" fill="rgb(242,132,44)" fg:x="1584" fg:w="144"/><text x="24.7701%" y="654.50">a..</text></g><g><title>at::native::mkldnn_to_dense (libtorch_cpu.so) (13 samples, 0.20%)</title><rect x="26.5480%" y="660" width="0.2012%" height="15" fill="rgb(251,152,29)" fg:x="1715" fg:w="13"/><text x="26.7980%" y="670.50"></text></g><g><title>ideep::tensor::to_public (libtorch_cpu.so) (13 samples, 0.20%)</title><rect x="26.5480%" y="676" width="0.2012%" height="15" fill="rgb(218,179,5)" fg:x="1715" fg:w="13"/><text x="26.7980%" y="686.50"></text></g><g><title>ideep::tensor::reorder_to (libtorch_cpu.so) (13 samples, 0.20%)</title><rect x="26.5480%" y="692" width="0.2012%" height="15" fill="rgb(227,67,19)" fg:x="1715" fg:w="13"/><text x="26.7980%" y="702.50"></text></g><g><title>at::native::batch_norm_cpu_transform_input_template&lt;float, float&gt; (libtorch_cpu.so) (10 samples, 0.15%)</title><rect x="26.7492%" y="564" width="0.1548%" height="15" fill="rgb(233,119,31)" fg:x="1728" fg:w="10"/><text x="26.9992%" y="574.50"></text></g><g><title>at::native::(anonymous namespace)::batch_norm_cpu_kernel (libtorch_cpu.so) (10 samples, 0.15%)</title><rect x="26.7492%" y="580" width="0.1548%" height="15" fill="rgb(241,120,22)" fg:x="1728" fg:w="10"/><text x="26.9992%" y="590.50"></text></g><g><title>GOMP_parallel (libgomp-c9fef706.so.1) (8 samples, 0.12%)</title><rect x="26.7802%" y="596" width="0.1238%" height="15" fill="rgb(224,102,30)" fg:x="1730" fg:w="8"/><text x="27.0302%" y="606.50"></text></g><g><title>0x77d25141ca9d (libgomp-c9fef706.so.1) (7 samples, 0.11%)</title><rect x="26.9040%" y="580" width="0.1084%" height="15" fill="rgb(210,164,37)" fg:x="1738" fg:w="7"/><text x="27.1540%" y="590.50"></text></g><g><title>0x77d25141e02a (libgomp-c9fef706.so.1) (7 samples, 0.11%)</title><rect x="26.9040%" y="596" width="0.1084%" height="15" fill="rgb(226,191,16)" fg:x="1738" fg:w="7"/><text x="27.1540%" y="606.50"></text></g><g><title>forward (torchvision/models/resnet.py:93) (39 samples, 0.60%)</title><rect x="26.7492%" y="260" width="0.6037%" height="15" fill="rgb(214,40,45)" fg:x="1728" fg:w="39"/><text x="26.9992%" y="270.50"></text></g><g><title>_wrapped_call_impl (torch/nn/modules/module.py:1751) (39 samples, 0.60%)</title><rect x="26.7492%" y="276" width="0.6037%" height="15" fill="rgb(244,29,26)" fg:x="1728" fg:w="39"/><text x="26.9992%" y="286.50"></text></g><g><title>_call_impl (torch/nn/modules/module.py:1762) (39 samples, 0.60%)</title><rect x="26.7492%" y="292" width="0.6037%" height="15" fill="rgb(216,16,5)" fg:x="1728" fg:w="39"/><text x="26.9992%" y="302.50"></text></g><g><title>forward (torch/nn/modules/batchnorm.py:193) (39 samples, 0.60%)</title><rect x="26.7492%" y="308" width="0.6037%" height="15" fill="rgb(249,76,35)" fg:x="1728" fg:w="39"/><text x="26.9992%" y="318.50"></text></g><g><title>batch_norm (torch/nn/functional.py:2831) (39 samples, 0.60%)</title><rect x="26.7492%" y="324" width="0.6037%" height="15" fill="rgb(207,11,44)" fg:x="1728" fg:w="39"/><text x="26.9992%" y="334.50"></text></g><g><title>torch::autograd::THPVariable_batch_norm (libtorch_python.so) (39 samples, 0.60%)</title><rect x="26.7492%" y="340" width="0.6037%" height="15" fill="rgb(228,190,49)" fg:x="1728" fg:w="39"/><text x="26.9992%" y="350.50"></text></g><g><title>at::_ops::batch_norm::call (libtorch_cpu.so) (39 samples, 0.60%)</title><rect x="26.7492%" y="356" width="0.6037%" height="15" fill="rgb(214,173,12)" fg:x="1728" fg:w="39"/><text x="26.9992%" y="366.50"></text></g><g><title>c10::impl::wrap_kernel_functor_unboxed_&lt;c10::impl::detail::WrapFunctionIntoFunctor_&lt;c10::CompileTimeFunctionPointer&lt;at::Tensor(at::Tensor const&amp;, std::optional&lt;at::Tensor&gt; const&amp;, std::optional&lt;at::Tensor&gt; const&amp;, std::optional&lt;at::Tensor&gt; const&amp;, std::optional&lt;at::Tensor&gt; const&amp;, bool, double, double, bool), &amp;at::(anonymous namespace)::(anonymous namespace)::wrapper_CompositeImplicitAutograd__batch_norm(at::Tensor const&amp;, std::optional&lt;at::Tensor&gt; const&amp;, std::optional&lt;at::Tensor&gt; const&amp;, std::optional&lt;at::Tensor&gt; const&amp;, std::optional&lt;at::Tensor&gt; const&amp;, bool, double, double, bool)&gt;, at::Tensor, c10::guts::typelist::typelist&lt;at::Tensor const&amp;, std::optional&lt;at::Tensor&gt; const&amp;, std::optional&lt;at::Tensor&gt; const&amp;, std::optional&lt;at::Tensor&gt; const&amp;, std::optional&lt;at::Tensor&gt; const&amp;, bool, double, double, bool&gt; &gt;, at::Tensor(at::Tensor const&amp;, std::optional&lt;at::Tensor&gt; const&amp;, std::optional&lt;at::Tensor&gt; const&amp;, std::optional&lt;at::Tensor&gt; const&amp;, std::optional&lt;at::Tensor&gt; const&amp;, bool, double, double, bool)&gt;::call (libtorch_cpu.so) (39 samples, 0.60%)</title><rect x="26.7492%" y="372" width="0.6037%" height="15" fill="rgb(218,26,35)" fg:x="1728" fg:w="39"/><text x="26.9992%" y="382.50"></text></g><g><title>at::native::batch_norm (libtorch_cpu.so) (39 samples, 0.60%)</title><rect x="26.7492%" y="388" width="0.6037%" height="15" fill="rgb(220,200,19)" fg:x="1728" fg:w="39"/><text x="26.9992%" y="398.50"></text></g><g><title>at::_ops::_batch_norm_impl_index::call (libtorch_cpu.so) (39 samples, 0.60%)</title><rect x="26.7492%" y="404" width="0.6037%" height="15" fill="rgb(239,95,49)" fg:x="1728" fg:w="39"/><text x="26.9992%" y="414.50"></text></g><g><title>c10::impl::wrap_kernel_functor_unboxed_&lt;c10::impl::detail::WrapFunctionIntoFunctor_&lt;c10::CompileTimeFunctionPointer&lt;std::tuple&lt;at::Tensor, at::Tensor, at::Tensor, at::Tensor, long&gt; (at::Tensor const&amp;, std::optional&lt;at::Tensor&gt; const&amp;, std::optional&lt;at::Tensor&gt; const&amp;, std::optional&lt;at::Tensor&gt; const&amp;, std::optional&lt;at::Tensor&gt; const&amp;, bool, double, double, bool), &amp;at::(anonymous namespace)::(anonymous namespace)::wrapper_CompositeImplicitAutograd___batch_norm_impl_index(at::Tensor const&amp;, std::optional&lt;at::Tensor&gt; const&amp;, std::optional&lt;at::Tensor&gt; const&amp;, std::optional&lt;at::Tensor&gt; const&amp;, std::optional&lt;at::Tensor&gt; const&amp;, bool, double, double, bool)&gt;, std::tuple&lt;at::Tensor, at::Tensor, at::Tensor, at::Tensor, long&gt;, c10::guts::typelist::typelist&lt;at::Tensor const&amp;, std::optional&lt;at::Tensor&gt; const&amp;, std::optional&lt;at::Tensor&gt; const&amp;, std::optional&lt;at::Tensor&gt; const&amp;, std::optional&lt;at::Tensor&gt; const&amp;, bool, double, double, bool&gt; &gt;, std::tuple&lt;at::Tensor, at::Tensor, at::Tensor, at::Tensor, long&gt; (at::Tensor const&amp;, std::optional&lt;at::Tensor&gt; const&amp;, std::optional&lt;at::Tensor&gt; const&amp;, std::optional&lt;at::Tensor&gt; const&amp;, std::optional&lt;at::Tensor&gt; const&amp;, bool, double, double, bool)&gt;::call (libtorch_cpu.so) (39 samples, 0.60%)</title><rect x="26.7492%" y="420" width="0.6037%" height="15" fill="rgb(235,85,53)" fg:x="1728" fg:w="39"/><text x="26.9992%" y="430.50"></text></g><g><title>at::native::_batch_norm_impl_index (libtorch_cpu.so) (39 samples, 0.60%)</title><rect x="26.7492%" y="436" width="0.6037%" height="15" fill="rgb(233,133,31)" fg:x="1728" fg:w="39"/><text x="26.9992%" y="446.50"></text></g><g><title>at::_ops::native_batch_norm::call (libtorch_cpu.so) (39 samples, 0.60%)</title><rect x="26.7492%" y="452" width="0.6037%" height="15" fill="rgb(218,25,20)" fg:x="1728" fg:w="39"/><text x="26.9992%" y="462.50"></text></g><g><title>c10::impl::wrap_kernel_functor_unboxed_&lt;c10::impl::detail::WrapFunctionIntoFunctor_&lt;c10::CompileTimeFunctionPointer&lt;std::tuple&lt;at::Tensor, at::Tensor, at::Tensor&gt; (c10::DispatchKeySet, at::Tensor const&amp;, std::optional&lt;at::Tensor&gt; const&amp;, std::optional&lt;at::Tensor&gt; const&amp;, std::optional&lt;at::Tensor&gt; const&amp;, std::optional&lt;at::Tensor&gt; const&amp;, bool, double, double), &amp;torch::autograd::VariableType::(anonymous namespace)::native_batch_norm(c10::DispatchKeySet, at::Tensor const&amp;, std::optional&lt;at::Tensor&gt; const&amp;, std::optional&lt;at::Tensor&gt; const&amp;, std::optional&lt;at::Tensor&gt; const&amp;, std::optional&lt;at::Tensor&gt; const&amp;, bool, double, double)&gt;, std::tuple&lt;at::Tensor, at::Tensor, at::Tensor&gt;, c10::guts::typelist::typelist&lt;c10::DispatchKeySet, at::Tensor const&amp;, std::optional&lt;at::Tensor&gt; const&amp;, std::optional&lt;at::Tensor&gt; const&amp;, std::optional&lt;at::Tensor&gt; const&amp;, std::optional&lt;at::Tensor&gt; const&amp;, bool, double, double&gt; &gt;, std::tuple&lt;at::Tensor, at::Tensor, at::Tensor&gt; (c10::DispatchKeySet, at::Tensor const&amp;, std::optional&lt;at::Tensor&gt; const&amp;, std::optional&lt;at::Tensor&gt; const&amp;, std::optional&lt;at::Tensor&gt; const&amp;, std::optional&lt;at::Tensor&gt; const&amp;, bool, double, double)&gt;::call (libtorch_cpu.so) (39 samples, 0.60%)</title><rect x="26.7492%" y="468" width="0.6037%" height="15" fill="rgb(252,210,38)" fg:x="1728" fg:w="39"/><text x="26.9992%" y="478.50"></text></g><g><title>torch::autograd::VariableType::(anonymous namespace)::native_batch_norm (libtorch_cpu.so) (39 samples, 0.60%)</title><rect x="26.7492%" y="484" width="0.6037%" height="15" fill="rgb(242,134,21)" fg:x="1728" fg:w="39"/><text x="26.9992%" y="494.50"></text></g><g><title>at::_ops::native_batch_norm::redispatch (libtorch_cpu.so) (39 samples, 0.60%)</title><rect x="26.7492%" y="500" width="0.6037%" height="15" fill="rgb(213,28,48)" fg:x="1728" fg:w="39"/><text x="26.9992%" y="510.50"></text></g><g><title>c10::impl::wrap_kernel_functor_unboxed_&lt;c10::impl::detail::WrapFunctionIntoFunctor_&lt;c10::CompileTimeFunctionPointer&lt;std::tuple&lt;at::Tensor, at::Tensor, at::Tensor&gt; (at::Tensor const&amp;, std::optional&lt;at::Tensor&gt; const&amp;, std::optional&lt;at::Tensor&gt; const&amp;, std::optional&lt;at::Tensor&gt; const&amp;, std::optional&lt;at::Tensor&gt; const&amp;, bool, double, double), &amp;at::(anonymous namespace)::(anonymous namespace)::wrapper_CPU__native_batch_norm(at::Tensor const&amp;, std::optional&lt;at::Tensor&gt; const&amp;, std::optional&lt;at::Tensor&gt; const&amp;, std::optional&lt;at::Tensor&gt; const&amp;, std::optional&lt;at::Tensor&gt; const&amp;, bool, double, double)&gt;, std::tuple&lt;at::Tensor, at::Tensor, at::Tensor&gt;, c10::guts::typelist::typelist&lt;at::Tensor const&amp;, std::optional&lt;at::Tensor&gt; const&amp;, std::optional&lt;at::Tensor&gt; const&amp;, std::optional&lt;at::Tensor&gt; const&amp;, std::optional&lt;at::Tensor&gt; const&amp;, bool, double, double&gt; &gt;, std::tuple&lt;at::Tensor, at::Tensor, at::Tensor&gt; (at::Tensor const&amp;, std::optional&lt;at::Tensor&gt; const&amp;, std::optional&lt;at::Tensor&gt; const&amp;, std::optional&lt;at::Tensor&gt; const&amp;, std::optional&lt;at::Tensor&gt; const&amp;, bool, double, double)&gt;::call (libtorch_cpu.so) (39 samples, 0.60%)</title><rect x="26.7492%" y="516" width="0.6037%" height="15" fill="rgb(250,196,2)" fg:x="1728" fg:w="39"/><text x="26.9992%" y="526.50"></text></g><g><title>at::native::batch_norm_cpu (libtorch_cpu.so) (39 samples, 0.60%)</title><rect x="26.7492%" y="532" width="0.6037%" height="15" fill="rgb(227,5,17)" fg:x="1728" fg:w="39"/><text x="26.9992%" y="542.50"></text></g><g><title>at::native::batch_norm_cpu_out (libtorch_cpu.so) (39 samples, 0.60%)</title><rect x="26.7492%" y="548" width="0.6037%" height="15" fill="rgb(221,226,24)" fg:x="1728" fg:w="39"/><text x="26.9992%" y="558.50"></text></g><g><title>at::native::batch_norm_cpu_update_stats_template&lt;float, float, at::native::InvStd&gt; (libtorch_cpu.so) (29 samples, 0.45%)</title><rect x="26.9040%" y="564" width="0.4489%" height="15" fill="rgb(211,5,48)" fg:x="1738" fg:w="29"/><text x="27.1540%" y="574.50"></text></g><g><title>at::native::(anonymous namespace)::batch_norm_cpu_collect_stats_kernel (libtorch_cpu.so) (19 samples, 0.29%)</title><rect x="27.0588%" y="580" width="0.2941%" height="15" fill="rgb(219,150,6)" fg:x="1748" fg:w="19"/><text x="27.3088%" y="590.50"></text></g><g><title>GOMP_parallel (libgomp-c9fef706.so.1) (14 samples, 0.22%)</title><rect x="27.1362%" y="596" width="0.2167%" height="15" fill="rgb(251,46,16)" fg:x="1753" fg:w="14"/><text x="27.3862%" y="606.50"></text></g><g><title>at::internal::invoke_parallel&lt;at::parallel_for&lt;at::native::(anonymous namespace)::batch_norm_cpu_collect_stats_contiguous_impl&lt;float&gt;(at::Tensor&amp;, at::Tensor&amp;, at::Tensor const&amp;)::{lambda(long, long)#1}&gt;(long, long, long, at::native::(anonymous namespace)::batch_norm_cpu_collect_stats_contiguous_impl&lt;float&gt;(at::Tensor&amp;, at::Tensor&amp;, at::Tensor const&amp;)::{lambda(long, long)#1} const&amp;)::{lambda(long, long)#1}&gt; (libtorch_cpu.so) (11 samples, 0.17%)</title><rect x="27.1827%" y="612" width="0.1703%" height="15" fill="rgb(220,204,40)" fg:x="1756" fg:w="11"/><text x="27.4327%" y="622.50"></text></g><g><title>forward (torchvision/models/resnet.py:94) (10 samples, 0.15%)</title><rect x="27.3529%" y="260" width="0.1548%" height="15" fill="rgb(211,85,2)" fg:x="1767" fg:w="10"/><text x="27.6029%" y="270.50"></text></g><g><title>_wrapped_call_impl (torch/nn/modules/module.py:1751) (10 samples, 0.15%)</title><rect x="27.3529%" y="276" width="0.1548%" height="15" fill="rgb(229,17,7)" fg:x="1767" fg:w="10"/><text x="27.6029%" y="286.50"></text></g><g><title>_call_impl (torch/nn/modules/module.py:1762) (10 samples, 0.15%)</title><rect x="27.3529%" y="292" width="0.1548%" height="15" fill="rgb(239,72,28)" fg:x="1767" fg:w="10"/><text x="27.6029%" y="302.50"></text></g><g><title>forward (torch/nn/modules/activation.py:133) (10 samples, 0.15%)</title><rect x="27.3529%" y="308" width="0.1548%" height="15" fill="rgb(230,47,54)" fg:x="1767" fg:w="10"/><text x="27.6029%" y="318.50"></text></g><g><title>relu (torch/nn/functional.py:1702) (10 samples, 0.15%)</title><rect x="27.3529%" y="324" width="0.1548%" height="15" fill="rgb(214,50,8)" fg:x="1767" fg:w="10"/><text x="27.6029%" y="334.50"></text></g><g><title>torch::autograd::THPVariable_relu_ (libtorch_python.so) (10 samples, 0.15%)</title><rect x="27.3529%" y="340" width="0.1548%" height="15" fill="rgb(216,198,43)" fg:x="1767" fg:w="10"/><text x="27.6029%" y="350.50"></text></g><g><title>at::_ops::relu_::call (libtorch_cpu.so) (10 samples, 0.15%)</title><rect x="27.3529%" y="356" width="0.1548%" height="15" fill="rgb(234,20,35)" fg:x="1767" fg:w="10"/><text x="27.6029%" y="366.50"></text></g><g><title>torch::autograd::VariableType::(anonymous namespace)::relu_ (libtorch_cpu.so) (10 samples, 0.15%)</title><rect x="27.3529%" y="372" width="0.1548%" height="15" fill="rgb(254,45,19)" fg:x="1767" fg:w="10"/><text x="27.6029%" y="382.50"></text></g><g><title>c10::impl::wrap_kernel_functor_unboxed_&lt;c10::impl::detail::WrapFunctionIntoFunctor_&lt;c10::CompileTimeFunctionPointer&lt;at::Tensor&amp; (c10::DispatchKeySet, at::Tensor&amp;), &amp;torch::ADInplaceOrView::(anonymous namespace)::relu_(c10::DispatchKeySet, at::Tensor&amp;)&gt;, at::Tensor&amp;, c10::guts::typelist::typelist&lt;c10::DispatchKeySet, at::Tensor&amp;&gt; &gt;, at::Tensor&amp; (c10::DispatchKeySet, at::Tensor&amp;)&gt;::call (libtorch_cpu.so) (10 samples, 0.15%)</title><rect x="27.3529%" y="388" width="0.1548%" height="15" fill="rgb(219,14,44)" fg:x="1767" fg:w="10"/><text x="27.6029%" y="398.50"></text></g><g><title>at::native::relu_ (libtorch_cpu.so) (10 samples, 0.15%)</title><rect x="27.3529%" y="404" width="0.1548%" height="15" fill="rgb(217,220,26)" fg:x="1767" fg:w="10"/><text x="27.6029%" y="414.50"></text></g><g><title>at::_ops::clamp_min_::call (libtorch_cpu.so) (10 samples, 0.15%)</title><rect x="27.3529%" y="420" width="0.1548%" height="15" fill="rgb(213,158,28)" fg:x="1767" fg:w="10"/><text x="27.6029%" y="430.50"></text></g><g><title>at::(anonymous namespace)::wrapper_CPU_clamp_min_ (libtorch_cpu.so) (10 samples, 0.15%)</title><rect x="27.3529%" y="436" width="0.1548%" height="15" fill="rgb(252,51,52)" fg:x="1767" fg:w="10"/><text x="27.6029%" y="446.50"></text></g><g><title>at::native::structured_clamp_min_out::impl (libtorch_cpu.so) (10 samples, 0.15%)</title><rect x="27.3529%" y="452" width="0.1548%" height="15" fill="rgb(246,89,16)" fg:x="1767" fg:w="10"/><text x="27.6029%" y="462.50"></text></g><g><title>at::native::(anonymous namespace)::clamp_min_scalar_kernel_impl (libtorch_cpu.so) (10 samples, 0.15%)</title><rect x="27.3529%" y="468" width="0.1548%" height="15" fill="rgb(216,158,49)" fg:x="1767" fg:w="10"/><text x="27.6029%" y="478.50"></text></g><g><title>at::TensorIteratorBase::for_each (libtorch_cpu.so) (10 samples, 0.15%)</title><rect x="27.3529%" y="484" width="0.1548%" height="15" fill="rgb(236,107,19)" fg:x="1767" fg:w="10"/><text x="27.6029%" y="494.50"></text></g><g><title>0x77d25141e02a (libgomp-c9fef706.so.1) (10 samples, 0.15%)</title><rect x="27.5077%" y="804" width="0.1548%" height="15" fill="rgb(228,185,30)" fg:x="1777" fg:w="10"/><text x="27.7577%" y="814.50"></text></g><g><title>0x77d25141ca9d (libgomp-c9fef706.so.1) (11 samples, 0.17%)</title><rect x="27.5077%" y="788" width="0.1703%" height="15" fill="rgb(246,134,8)" fg:x="1777" fg:w="11"/><text x="27.7577%" y="798.50"></text></g><g><title>dnnl::primitive::execute (libtorch_cpu.so) (82 samples, 1.27%)</title><rect x="27.5077%" y="692" width="1.2693%" height="15" fill="rgb(214,143,50)" fg:x="1777" fg:w="82"/><text x="27.7577%" y="702.50"></text></g><g><title>dnnl_primitive_execute (libtorch_cpu.so) (82 samples, 1.27%)</title><rect x="27.5077%" y="708" width="1.2693%" height="15" fill="rgb(228,75,8)" fg:x="1777" fg:w="82"/><text x="27.7577%" y="718.50"></text></g><g><title>dnnl::impl::primitive_execute (libtorch_cpu.so) (82 samples, 1.27%)</title><rect x="27.5077%" y="724" width="1.2693%" height="15" fill="rgb(207,175,4)" fg:x="1777" fg:w="82"/><text x="27.7577%" y="734.50"></text></g><g><title>dnnl_primitive::execute (libtorch_cpu.so) (82 samples, 1.27%)</title><rect x="27.5077%" y="740" width="1.2693%" height="15" fill="rgb(205,108,24)" fg:x="1777" fg:w="82"/><text x="27.7577%" y="750.50"></text></g><g><title>dnnl::impl::cpu::x64::jit_avx2_convolution_fwd_t::execute (libtorch_cpu.so) (82 samples, 1.27%)</title><rect x="27.5077%" y="756" width="1.2693%" height="15" fill="rgb(244,120,49)" fg:x="1777" fg:w="82"/><text x="27.7577%" y="766.50"></text></g><g><title>dnnl::impl::cpu::x64::jit_avx2_convolution_fwd_t::execute_forward (libtorch_cpu.so) (82 samples, 1.27%)</title><rect x="27.5077%" y="772" width="1.2693%" height="15" fill="rgb(223,47,38)" fg:x="1777" fg:w="82"/><text x="27.7577%" y="782.50"></text></g><g><title>GOMP_parallel (libgomp-c9fef706.so.1) (71 samples, 1.10%)</title><rect x="27.6780%" y="788" width="1.0991%" height="15" fill="rgb(229,179,11)" fg:x="1788" fg:w="71"/><text x="27.9280%" y="798.50"></text></g><g><title>dnnl::impl::parallel (libtorch_cpu.so) (67 samples, 1.04%)</title><rect x="27.7399%" y="804" width="1.0372%" height="15" fill="rgb(231,122,1)" fg:x="1792" fg:w="67"/><text x="27.9899%" y="814.50"></text></g><g><title>dnnl::impl::cpu::x64::jit_avx2_convolution_fwd_t::execute_forward(dnnl::impl::exec_ctx_t const&amp;) const::{lambda(int, int)#1}::operator() const (libtorch_cpu.so) (67 samples, 1.04%)</title><rect x="27.7399%" y="820" width="1.0372%" height="15" fill="rgb(245,119,9)" fg:x="1792" fg:w="67"/><text x="27.9899%" y="830.50"></text></g><g><title>0x77d25141ca9d (libgomp-c9fef706.so.1) (7 samples, 0.11%)</title><rect x="28.7771%" y="804" width="0.1084%" height="15" fill="rgb(241,163,25)" fg:x="1859" fg:w="7"/><text x="29.0271%" y="814.50"></text></g><g><title>0x77d25141e02a (libgomp-c9fef706.so.1) (7 samples, 0.11%)</title><rect x="28.7771%" y="820" width="0.1084%" height="15" fill="rgb(217,214,3)" fg:x="1859" fg:w="7"/><text x="29.0271%" y="830.50"></text></g><g><title>dnnl::impl::cpu::x64::jit_blk_reorder_t::execute (libtorch_cpu.so) (15 samples, 0.23%)</title><rect x="28.7771%" y="788" width="0.2322%" height="15" fill="rgb(240,86,28)" fg:x="1859" fg:w="15"/><text x="29.0271%" y="798.50"></text></g><g><title>GOMP_parallel (libgomp-c9fef706.so.1) (8 samples, 0.12%)</title><rect x="28.8854%" y="804" width="0.1238%" height="15" fill="rgb(215,47,9)" fg:x="1866" fg:w="8"/><text x="29.1354%" y="814.50"></text></g><g><title>ideep::tensor::reorder_to (libtorch_cpu.so) (22 samples, 0.34%)</title><rect x="28.7771%" y="708" width="0.3406%" height="15" fill="rgb(252,25,45)" fg:x="1859" fg:w="22"/><text x="29.0271%" y="718.50"></text></g><g><title>dnnl::primitive::execute (libtorch_cpu.so) (22 samples, 0.34%)</title><rect x="28.7771%" y="724" width="0.3406%" height="15" fill="rgb(251,164,9)" fg:x="1859" fg:w="22"/><text x="29.0271%" y="734.50"></text></g><g><title>dnnl_primitive_execute (libtorch_cpu.so) (22 samples, 0.34%)</title><rect x="28.7771%" y="740" width="0.3406%" height="15" fill="rgb(233,194,0)" fg:x="1859" fg:w="22"/><text x="29.0271%" y="750.50"></text></g><g><title>dnnl::impl::primitive_execute (libtorch_cpu.so) (22 samples, 0.34%)</title><rect x="28.7771%" y="756" width="0.3406%" height="15" fill="rgb(249,111,24)" fg:x="1859" fg:w="22"/><text x="29.0271%" y="766.50"></text></g><g><title>dnnl_primitive::execute (libtorch_cpu.so) (22 samples, 0.34%)</title><rect x="28.7771%" y="772" width="0.3406%" height="15" fill="rgb(250,223,3)" fg:x="1859" fg:w="22"/><text x="29.0271%" y="782.50"></text></g><g><title>dnnl::impl::cpu::x64::jit_uni_reorder_t::execute (libtorch_cpu.so) (7 samples, 0.11%)</title><rect x="29.0093%" y="788" width="0.1084%" height="15" fill="rgb(236,178,37)" fg:x="1874" fg:w="7"/><text x="29.2593%" y="798.50"></text></g><g><title>dnnl::impl::cpu::x64::jit_uni_reorder_t::omp_driver (libtorch_cpu.so) (7 samples, 0.11%)</title><rect x="29.0093%" y="804" width="0.1084%" height="15" fill="rgb(241,158,50)" fg:x="1874" fg:w="7"/><text x="29.2593%" y="814.50"></text></g><g><title>at::native::_mkldnn_convolution_out (libtorch_cpu.so) (106 samples, 1.64%)</title><rect x="27.5077%" y="660" width="1.6409%" height="15" fill="rgb(213,121,41)" fg:x="1777" fg:w="106"/><text x="27.7577%" y="670.50"></text></g><g><title>ideep::convolution_forward::compute_dispatch&lt;false, true, true&gt; (libtorch_cpu.so) (106 samples, 1.64%)</title><rect x="27.5077%" y="676" width="1.6409%" height="15" fill="rgb(240,92,3)" fg:x="1777" fg:w="106"/><text x="27.7577%" y="686.50"></text></g><g><title>ideep::tensor::reorder_if_differ_in (libtorch_cpu.so) (24 samples, 0.37%)</title><rect x="28.7771%" y="692" width="0.3715%" height="15" fill="rgb(205,123,3)" fg:x="1859" fg:w="24"/><text x="29.0271%" y="702.50"></text></g><g><title>forward (torchvision/models/resnet.py:96) (117 samples, 1.81%)</title><rect x="27.5077%" y="260" width="1.8111%" height="15" fill="rgb(205,97,47)" fg:x="1777" fg:w="117"/><text x="27.7577%" y="270.50">f..</text></g><g><title>_wrapped_call_impl (torch/nn/modules/module.py:1751) (117 samples, 1.81%)</title><rect x="27.5077%" y="276" width="1.8111%" height="15" fill="rgb(247,152,14)" fg:x="1777" fg:w="117"/><text x="27.7577%" y="286.50">_..</text></g><g><title>_call_impl (torch/nn/modules/module.py:1762) (117 samples, 1.81%)</title><rect x="27.5077%" y="292" width="1.8111%" height="15" fill="rgb(248,195,53)" fg:x="1777" fg:w="117"/><text x="27.7577%" y="302.50">_..</text></g><g><title>forward (torch/nn/modules/conv.py:554) (117 samples, 1.81%)</title><rect x="27.5077%" y="308" width="1.8111%" height="15" fill="rgb(226,201,16)" fg:x="1777" fg:w="117"/><text x="27.7577%" y="318.50">f..</text></g><g><title>_conv_forward (torch/nn/modules/conv.py:550) (117 samples, 1.81%)</title><rect x="27.5077%" y="324" width="1.8111%" height="15" fill="rgb(205,98,0)" fg:x="1777" fg:w="117"/><text x="27.7577%" y="334.50">_..</text></g><g><title>torch::autograd::THPVariable_conv2d (libtorch_python.so) (117 samples, 1.81%)</title><rect x="27.5077%" y="340" width="1.8111%" height="15" fill="rgb(214,191,48)" fg:x="1777" fg:w="117"/><text x="27.7577%" y="350.50">t..</text></g><g><title>at::_ops::conv2d::call (libtorch_cpu.so) (117 samples, 1.81%)</title><rect x="27.5077%" y="356" width="1.8111%" height="15" fill="rgb(237,112,39)" fg:x="1777" fg:w="117"/><text x="27.7577%" y="366.50">a..</text></g><g><title>c10::impl::wrap_kernel_functor_unboxed_&lt;c10::impl::detail::WrapFunctionIntoFunctor_&lt;c10::CompileTimeFunctionPointer&lt;at::Tensor(at::Tensor const&amp;, at::Tensor const&amp;, std::optional&lt;at::Tensor&gt; const&amp;, c10::ArrayRef&lt;c10::SymInt&gt;, c10::ArrayRef&lt;c10::SymInt&gt;, c10::ArrayRef&lt;c10::SymInt&gt;, c10::SymInt), &amp;at::(anonymous namespace)::(anonymous namespace)::wrapper_CompositeImplicitAutograd__conv2d(at::Tensor const&amp;, at::Tensor const&amp;, std::optional&lt;at::Tensor&gt; const&amp;, c10::ArrayRef&lt;c10::SymInt&gt;, c10::ArrayRef&lt;c10::SymInt&gt;, c10::ArrayRef&lt;c10::SymInt&gt;, c10::SymInt)&gt;, at::Tensor, c10::guts::typelist::typelist&lt;at::Tensor const&amp;, at::Tensor const&amp;, std::optional&lt;at::Tensor&gt; const&amp;, c10::ArrayRef&lt;c10::SymInt&gt;, c10::ArrayRef&lt;c10::SymInt&gt;, c10::ArrayRef&lt;c10::SymInt&gt;, c10::SymInt&gt; &gt;, at::Tensor(at::Tensor const&amp;, at::Tensor const&amp;, std::optional&lt;at::Tensor&gt; const&amp;, c10::ArrayRef&lt;c10::SymInt&gt;, c10::ArrayRef&lt;c10::SymInt&gt;, c10::ArrayRef&lt;c10::SymInt&gt;, c10::SymInt)&gt;::call (libtorch_cpu.so) (117 samples, 1.81%)</title><rect x="27.5077%" y="372" width="1.8111%" height="15" fill="rgb(247,203,27)" fg:x="1777" fg:w="117"/><text x="27.7577%" y="382.50">c..</text></g><g><title>at::native::conv2d_symint (libtorch_cpu.so) (117 samples, 1.81%)</title><rect x="27.5077%" y="388" width="1.8111%" height="15" fill="rgb(235,124,28)" fg:x="1777" fg:w="117"/><text x="27.7577%" y="398.50">a..</text></g><g><title>at::_ops::convolution::call (libtorch_cpu.so) (117 samples, 1.81%)</title><rect x="27.5077%" y="404" width="1.8111%" height="15" fill="rgb(208,207,46)" fg:x="1777" fg:w="117"/><text x="27.7577%" y="414.50">a..</text></g><g><title>c10::impl::wrap_kernel_functor_unboxed_&lt;c10::impl::detail::WrapFunctionIntoFunctor_&lt;c10::CompileTimeFunctionPointer&lt;at::Tensor(c10::DispatchKeySet, at::Tensor const&amp;, at::Tensor const&amp;, std::optional&lt;at::Tensor&gt; const&amp;, c10::ArrayRef&lt;c10::SymInt&gt;, c10::ArrayRef&lt;c10::SymInt&gt;, c10::ArrayRef&lt;c10::SymInt&gt;, bool, c10::ArrayRef&lt;c10::SymInt&gt;, c10::SymInt), &amp;torch::autograd::VariableType::(anonymous namespace)::convolution(c10::DispatchKeySet, at::Tensor const&amp;, at::Tensor const&amp;, std::optional&lt;at::Tensor&gt; const&amp;, c10::ArrayRef&lt;c10::SymInt&gt;, c10::ArrayRef&lt;c10::SymInt&gt;, c10::ArrayRef&lt;c10::SymInt&gt;, bool, c10::ArrayRef&lt;c10::SymInt&gt;, c10::SymInt)&gt;, at::Tensor, c10::guts::typelist::typelist&lt;c10::DispatchKeySet, at::Tensor const&amp;, at::Tensor const&amp;, std::optional&lt;at::Tensor&gt; const&amp;, c10::ArrayRef&lt;c10::SymInt&gt;, c10::ArrayRef&lt;c10::SymInt&gt;, c10::ArrayRef&lt;c10::SymInt&gt;, bool, c10::ArrayRef&lt;c10::SymInt&gt;, c10::SymInt&gt; &gt;, at::Tensor(c10::DispatchKeySet, at::Tensor const&amp;, at::Tensor const&amp;, std::optional&lt;at::Tensor&gt; const&amp;, c10::ArrayRef&lt;c10::SymInt&gt;, c10::ArrayRef&lt;c10::SymInt&gt;, c10::ArrayRef&lt;c10::SymInt&gt;, bool, c10::ArrayRef&lt;c10::SymInt&gt;, c10::SymInt)&gt;::call (libtorch_cpu.so) (117 samples, 1.81%)</title><rect x="27.5077%" y="420" width="1.8111%" height="15" fill="rgb(234,176,4)" fg:x="1777" fg:w="117"/><text x="27.7577%" y="430.50">c..</text></g><g><title>torch::autograd::VariableType::(anonymous namespace)::convolution (libtorch_cpu.so) (117 samples, 1.81%)</title><rect x="27.5077%" y="436" width="1.8111%" height="15" fill="rgb(230,133,28)" fg:x="1777" fg:w="117"/><text x="27.7577%" y="446.50">t..</text></g><g><title>at::_ops::convolution::redispatch (libtorch_cpu.so) (117 samples, 1.81%)</title><rect x="27.5077%" y="452" width="1.8111%" height="15" fill="rgb(211,137,40)" fg:x="1777" fg:w="117"/><text x="27.7577%" y="462.50">a..</text></g><g><title>c10::impl::wrap_kernel_functor_unboxed_&lt;c10::impl::detail::WrapFunctionIntoFunctor_&lt;c10::CompileTimeFunctionPointer&lt;at::Tensor(at::Tensor const&amp;, at::Tensor const&amp;, std::optional&lt;at::Tensor&gt; const&amp;, c10::ArrayRef&lt;c10::SymInt&gt;, c10::ArrayRef&lt;c10::SymInt&gt;, c10::ArrayRef&lt;c10::SymInt&gt;, bool, c10::ArrayRef&lt;c10::SymInt&gt;, c10::SymInt), &amp;at::(anonymous namespace)::(anonymous namespace)::wrapper_CompositeExplicitAutograd__convolution(at::Tensor const&amp;, at::Tensor const&amp;, std::optional&lt;at::Tensor&gt; const&amp;, c10::ArrayRef&lt;c10::SymInt&gt;, c10::ArrayRef&lt;c10::SymInt&gt;, c10::ArrayRef&lt;c10::SymInt&gt;, bool, c10::ArrayRef&lt;c10::SymInt&gt;, c10::SymInt)&gt;, at::Tensor, c10::guts::typelist::typelist&lt;at::Tensor const&amp;, at::Tensor const&amp;, std::optional&lt;at::Tensor&gt; const&amp;, c10::ArrayRef&lt;c10::SymInt&gt;, c10::ArrayRef&lt;c10::SymInt&gt;, c10::ArrayRef&lt;c10::SymInt&gt;, bool, c10::ArrayRef&lt;c10::SymInt&gt;, c10::SymInt&gt; &gt;, at::Tensor(at::Tensor const&amp;, at::Tensor const&amp;, std::optional&lt;at::Tensor&gt; const&amp;, c10::ArrayRef&lt;c10::SymInt&gt;, c10::ArrayRef&lt;c10::SymInt&gt;, c10::ArrayRef&lt;c10::SymInt&gt;, bool, c10::ArrayRef&lt;c10::SymInt&gt;, c10::SymInt)&gt;::call (libtorch_cpu.so) (117 samples, 1.81%)</title><rect x="27.5077%" y="468" width="1.8111%" height="15" fill="rgb(254,35,13)" fg:x="1777" fg:w="117"/><text x="27.7577%" y="478.50">c..</text></g><g><title>at::(anonymous namespace)::(anonymous namespace)::wrapper_CompositeExplicitAutograd__convolution (libtorch_cpu.so) (117 samples, 1.81%)</title><rect x="27.5077%" y="484" width="1.8111%" height="15" fill="rgb(225,49,51)" fg:x="1777" fg:w="117"/><text x="27.7577%" y="494.50">a..</text></g><g><title>at::native::convolution (libtorch_cpu.so) (117 samples, 1.81%)</title><rect x="27.5077%" y="500" width="1.8111%" height="15" fill="rgb(251,10,15)" fg:x="1777" fg:w="117"/><text x="27.7577%" y="510.50">a..</text></g><g><title>at::_ops::_convolution::call (libtorch_cpu.so) (117 samples, 1.81%)</title><rect x="27.5077%" y="516" width="1.8111%" height="15" fill="rgb(228,207,15)" fg:x="1777" fg:w="117"/><text x="27.7577%" y="526.50">a..</text></g><g><title>c10::impl::wrap_kernel_functor_unboxed_&lt;c10::impl::detail::WrapFunctionIntoFunctor_&lt;c10::CompileTimeFunctionPointer&lt;at::Tensor(at::Tensor const&amp;, at::Tensor const&amp;, std::optional&lt;at::Tensor&gt; const&amp;, c10::ArrayRef&lt;c10::SymInt&gt;, c10::ArrayRef&lt;c10::SymInt&gt;, c10::ArrayRef&lt;c10::SymInt&gt;, bool, c10::ArrayRef&lt;c10::SymInt&gt;, c10::SymInt, bool, bool, bool, bool), &amp;at::(anonymous namespace)::(anonymous namespace)::wrapper_CompositeExplicitAutograd___convolution(at::Tensor const&amp;, at::Tensor const&amp;, std::optional&lt;at::Tensor&gt; const&amp;, c10::ArrayRef&lt;c10::SymInt&gt;, c10::ArrayRef&lt;c10::SymInt&gt;, c10::ArrayRef&lt;c10::SymInt&gt;, bool, c10::ArrayRef&lt;c10::SymInt&gt;, c10::SymInt, bool, bool, bool, bool)&gt;, at::Tensor, c10::guts::typelist::typelist&lt;at::Tensor const&amp;, at::Tensor const&amp;, std::optional&lt;at::Tensor&gt; const&amp;, c10::ArrayRef&lt;c10::SymInt&gt;, c10::ArrayRef&lt;c10::SymInt&gt;, c10::ArrayRef&lt;c10::SymInt&gt;, bool, c10::ArrayRef&lt;c10::SymInt&gt;, c10::SymInt, bool, bool, bool, bool&gt; &gt;, at::Tensor(at::Tensor const&amp;, at::Tensor const&amp;, std::optional&lt;at::Tensor&gt; const&amp;, c10::ArrayRef&lt;c10::SymInt&gt;, c10::ArrayRef&lt;c10::SymInt&gt;, c10::ArrayRef&lt;c10::SymInt&gt;, bool, c10::ArrayRef&lt;c10::SymInt&gt;, c10::SymInt, bool, bool, bool, bool)&gt;::call (libtorch_cpu.so) (117 samples, 1.81%)</title><rect x="27.5077%" y="532" width="1.8111%" height="15" fill="rgb(241,99,19)" fg:x="1777" fg:w="117"/><text x="27.7577%" y="542.50">c..</text></g><g><title>at::(anonymous namespace)::(anonymous namespace)::wrapper_CompositeExplicitAutograd___convolution (libtorch_cpu.so) (117 samples, 1.81%)</title><rect x="27.5077%" y="548" width="1.8111%" height="15" fill="rgb(207,104,49)" fg:x="1777" fg:w="117"/><text x="27.7577%" y="558.50">a..</text></g><g><title>at::native::_convolution (libtorch_cpu.so) (117 samples, 1.81%)</title><rect x="27.5077%" y="564" width="1.8111%" height="15" fill="rgb(234,99,18)" fg:x="1777" fg:w="117"/><text x="27.7577%" y="574.50">a..</text></g><g><title>at::_ops::mkldnn_convolution::call (libtorch_cpu.so) (117 samples, 1.81%)</title><rect x="27.5077%" y="580" width="1.8111%" height="15" fill="rgb(213,191,49)" fg:x="1777" fg:w="117"/><text x="27.7577%" y="590.50">a..</text></g><g><title>c10::impl::wrap_kernel_functor_unboxed_&lt;c10::impl::detail::WrapFunctionIntoFunctor_&lt;c10::CompileTimeFunctionPointer&lt;at::Tensor(at::Tensor const&amp;, at::Tensor const&amp;, std::optional&lt;at::Tensor&gt; const&amp;, c10::ArrayRef&lt;c10::SymInt&gt;, c10::ArrayRef&lt;c10::SymInt&gt;, c10::ArrayRef&lt;c10::SymInt&gt;, c10::SymInt), &amp;at::(anonymous namespace)::(anonymous namespace)::wrapper_CompositeExplicitAutograd__mkldnn_convolution(at::Tensor const&amp;, at::Tensor const&amp;, std::optional&lt;at::Tensor&gt; const&amp;, c10::ArrayRef&lt;c10::SymInt&gt;, c10::ArrayRef&lt;c10::SymInt&gt;, c10::ArrayRef&lt;c10::SymInt&gt;, c10::SymInt)&gt;, at::Tensor, c10::guts::typelist::typelist&lt;at::Tensor const&amp;, at::Tensor const&amp;, std::optional&lt;at::Tensor&gt; const&amp;, c10::ArrayRef&lt;c10::SymInt&gt;, c10::ArrayRef&lt;c10::SymInt&gt;, c10::ArrayRef&lt;c10::SymInt&gt;, c10::SymInt&gt; &gt;, at::Tensor(at::Tensor const&amp;, at::Tensor const&amp;, std::optional&lt;at::Tensor&gt; const&amp;, c10::ArrayRef&lt;c10::SymInt&gt;, c10::ArrayRef&lt;c10::SymInt&gt;, c10::ArrayRef&lt;c10::SymInt&gt;, c10::SymInt)&gt;::call (libtorch_cpu.so) (117 samples, 1.81%)</title><rect x="27.5077%" y="596" width="1.8111%" height="15" fill="rgb(210,226,19)" fg:x="1777" fg:w="117"/><text x="27.7577%" y="606.50">c..</text></g><g><title>at::(anonymous namespace)::(anonymous namespace)::wrapper_CompositeExplicitAutograd__mkldnn_convolution (libtorch_cpu.so) (117 samples, 1.81%)</title><rect x="27.5077%" y="612" width="1.8111%" height="15" fill="rgb(229,97,18)" fg:x="1777" fg:w="117"/><text x="27.7577%" y="622.50">a..</text></g><g><title>at::native::mkldnn_convolution (libtorch_cpu.so) (117 samples, 1.81%)</title><rect x="27.5077%" y="628" width="1.8111%" height="15" fill="rgb(211,167,15)" fg:x="1777" fg:w="117"/><text x="27.7577%" y="638.50">a..</text></g><g><title>at::native::_mkldnn_convolution (libtorch_cpu.so) (117 samples, 1.81%)</title><rect x="27.5077%" y="644" width="1.8111%" height="15" fill="rgb(210,169,34)" fg:x="1777" fg:w="117"/><text x="27.7577%" y="654.50">a..</text></g><g><title>at::native::mkldnn_to_dense (libtorch_cpu.so) (11 samples, 0.17%)</title><rect x="29.1486%" y="660" width="0.1703%" height="15" fill="rgb(241,121,31)" fg:x="1883" fg:w="11"/><text x="29.3986%" y="670.50"></text></g><g><title>ideep::tensor::to_public (libtorch_cpu.so) (11 samples, 0.17%)</title><rect x="29.1486%" y="676" width="0.1703%" height="15" fill="rgb(232,40,11)" fg:x="1883" fg:w="11"/><text x="29.3986%" y="686.50"></text></g><g><title>ideep::tensor::reorder_to (libtorch_cpu.so) (11 samples, 0.17%)</title><rect x="29.1486%" y="692" width="0.1703%" height="15" fill="rgb(205,86,26)" fg:x="1883" fg:w="11"/><text x="29.3986%" y="702.50"></text></g><g><title>dnnl::primitive::execute (libtorch_cpu.so) (11 samples, 0.17%)</title><rect x="29.1486%" y="708" width="0.1703%" height="15" fill="rgb(231,126,28)" fg:x="1883" fg:w="11"/><text x="29.3986%" y="718.50"></text></g><g><title>dnnl_primitive_execute (libtorch_cpu.so) (11 samples, 0.17%)</title><rect x="29.1486%" y="724" width="0.1703%" height="15" fill="rgb(219,221,18)" fg:x="1883" fg:w="11"/><text x="29.3986%" y="734.50"></text></g><g><title>dnnl::impl::primitive_execute (libtorch_cpu.so) (11 samples, 0.17%)</title><rect x="29.1486%" y="740" width="0.1703%" height="15" fill="rgb(211,40,0)" fg:x="1883" fg:w="11"/><text x="29.3986%" y="750.50"></text></g><g><title>dnnl_primitive::execute (libtorch_cpu.so) (11 samples, 0.17%)</title><rect x="29.1486%" y="756" width="0.1703%" height="15" fill="rgb(239,85,43)" fg:x="1883" fg:w="11"/><text x="29.3986%" y="766.50"></text></g><g><title>dnnl::impl::cpu::x64::jit_blk_reorder_t::execute (libtorch_cpu.so) (11 samples, 0.17%)</title><rect x="29.1486%" y="772" width="0.1703%" height="15" fill="rgb(231,55,21)" fg:x="1883" fg:w="11"/><text x="29.3986%" y="782.50"></text></g><g><title>GOMP_parallel (libgomp-c9fef706.so.1) (7 samples, 0.11%)</title><rect x="29.2105%" y="788" width="0.1084%" height="15" fill="rgb(225,184,43)" fg:x="1887" fg:w="7"/><text x="29.4605%" y="798.50"></text></g><g><title>at::native::batch_norm_cpu_transform_input_template&lt;float, float&gt; (libtorch_cpu.so) (13 samples, 0.20%)</title><rect x="29.3189%" y="564" width="0.2012%" height="15" fill="rgb(251,158,41)" fg:x="1894" fg:w="13"/><text x="29.5689%" y="574.50"></text></g><g><title>at::native::(anonymous namespace)::batch_norm_cpu_kernel (libtorch_cpu.so) (13 samples, 0.20%)</title><rect x="29.3189%" y="580" width="0.2012%" height="15" fill="rgb(234,159,37)" fg:x="1894" fg:w="13"/><text x="29.5689%" y="590.50"></text></g><g><title>GOMP_parallel (libgomp-c9fef706.so.1) (9 samples, 0.14%)</title><rect x="29.3808%" y="596" width="0.1393%" height="15" fill="rgb(216,204,22)" fg:x="1898" fg:w="9"/><text x="29.6308%" y="606.50"></text></g><g><title>_forward_impl (torchvision/models/resnet.py:274) (459 samples, 7.11%)</title><rect x="22.8793%" y="164" width="7.1053%" height="15" fill="rgb(214,17,3)" fg:x="1478" fg:w="459"/><text x="23.1293%" y="174.50">_forward_i..</text></g><g><title>_wrapped_call_impl (torch/nn/modules/module.py:1751) (459 samples, 7.11%)</title><rect x="22.8793%" y="180" width="7.1053%" height="15" fill="rgb(212,111,17)" fg:x="1478" fg:w="459"/><text x="23.1293%" y="190.50">_wrapped_c..</text></g><g><title>_call_impl (torch/nn/modules/module.py:1762) (459 samples, 7.11%)</title><rect x="22.8793%" y="196" width="7.1053%" height="15" fill="rgb(221,157,24)" fg:x="1478" fg:w="459"/><text x="23.1293%" y="206.50">_call_impl..</text></g><g><title>forward (torch/nn/modules/container.py:240) (459 samples, 7.11%)</title><rect x="22.8793%" y="212" width="7.1053%" height="15" fill="rgb(252,16,13)" fg:x="1478" fg:w="459"/><text x="23.1293%" y="222.50">forward (t..</text></g><g><title>_wrapped_call_impl (torch/nn/modules/module.py:1751) (459 samples, 7.11%)</title><rect x="22.8793%" y="228" width="7.1053%" height="15" fill="rgb(221,62,2)" fg:x="1478" fg:w="459"/><text x="23.1293%" y="238.50">_wrapped_c..</text></g><g><title>_call_impl (torch/nn/modules/module.py:1762) (459 samples, 7.11%)</title><rect x="22.8793%" y="244" width="7.1053%" height="15" fill="rgb(247,87,22)" fg:x="1478" fg:w="459"/><text x="23.1293%" y="254.50">_call_impl..</text></g><g><title>forward (torchvision/models/resnet.py:97) (43 samples, 0.67%)</title><rect x="29.3189%" y="260" width="0.6656%" height="15" fill="rgb(215,73,9)" fg:x="1894" fg:w="43"/><text x="29.5689%" y="270.50"></text></g><g><title>_wrapped_call_impl (torch/nn/modules/module.py:1751) (43 samples, 0.67%)</title><rect x="29.3189%" y="276" width="0.6656%" height="15" fill="rgb(207,175,33)" fg:x="1894" fg:w="43"/><text x="29.5689%" y="286.50"></text></g><g><title>_call_impl (torch/nn/modules/module.py:1762) (43 samples, 0.67%)</title><rect x="29.3189%" y="292" width="0.6656%" height="15" fill="rgb(243,129,54)" fg:x="1894" fg:w="43"/><text x="29.5689%" y="302.50"></text></g><g><title>forward (torch/nn/modules/batchnorm.py:193) (43 samples, 0.67%)</title><rect x="29.3189%" y="308" width="0.6656%" height="15" fill="rgb(227,119,45)" fg:x="1894" fg:w="43"/><text x="29.5689%" y="318.50"></text></g><g><title>batch_norm (torch/nn/functional.py:2831) (43 samples, 0.67%)</title><rect x="29.3189%" y="324" width="0.6656%" height="15" fill="rgb(205,109,36)" fg:x="1894" fg:w="43"/><text x="29.5689%" y="334.50"></text></g><g><title>torch::autograd::THPVariable_batch_norm (libtorch_python.so) (43 samples, 0.67%)</title><rect x="29.3189%" y="340" width="0.6656%" height="15" fill="rgb(205,6,39)" fg:x="1894" fg:w="43"/><text x="29.5689%" y="350.50"></text></g><g><title>at::_ops::batch_norm::call (libtorch_cpu.so) (43 samples, 0.67%)</title><rect x="29.3189%" y="356" width="0.6656%" height="15" fill="rgb(221,32,16)" fg:x="1894" fg:w="43"/><text x="29.5689%" y="366.50"></text></g><g><title>c10::impl::wrap_kernel_functor_unboxed_&lt;c10::impl::detail::WrapFunctionIntoFunctor_&lt;c10::CompileTimeFunctionPointer&lt;at::Tensor(at::Tensor const&amp;, std::optional&lt;at::Tensor&gt; const&amp;, std::optional&lt;at::Tensor&gt; const&amp;, std::optional&lt;at::Tensor&gt; const&amp;, std::optional&lt;at::Tensor&gt; const&amp;, bool, double, double, bool), &amp;at::(anonymous namespace)::(anonymous namespace)::wrapper_CompositeImplicitAutograd__batch_norm(at::Tensor const&amp;, std::optional&lt;at::Tensor&gt; const&amp;, std::optional&lt;at::Tensor&gt; const&amp;, std::optional&lt;at::Tensor&gt; const&amp;, std::optional&lt;at::Tensor&gt; const&amp;, bool, double, double, bool)&gt;, at::Tensor, c10::guts::typelist::typelist&lt;at::Tensor const&amp;, std::optional&lt;at::Tensor&gt; const&amp;, std::optional&lt;at::Tensor&gt; const&amp;, std::optional&lt;at::Tensor&gt; const&amp;, std::optional&lt;at::Tensor&gt; const&amp;, bool, double, double, bool&gt; &gt;, at::Tensor(at::Tensor const&amp;, std::optional&lt;at::Tensor&gt; const&amp;, std::optional&lt;at::Tensor&gt; const&amp;, std::optional&lt;at::Tensor&gt; const&amp;, std::optional&lt;at::Tensor&gt; const&amp;, bool, double, double, bool)&gt;::call (libtorch_cpu.so) (43 samples, 0.67%)</title><rect x="29.3189%" y="372" width="0.6656%" height="15" fill="rgb(228,144,50)" fg:x="1894" fg:w="43"/><text x="29.5689%" y="382.50"></text></g><g><title>at::native::batch_norm (libtorch_cpu.so) (43 samples, 0.67%)</title><rect x="29.3189%" y="388" width="0.6656%" height="15" fill="rgb(229,201,53)" fg:x="1894" fg:w="43"/><text x="29.5689%" y="398.50"></text></g><g><title>at::_ops::_batch_norm_impl_index::call (libtorch_cpu.so) (43 samples, 0.67%)</title><rect x="29.3189%" y="404" width="0.6656%" height="15" fill="rgb(249,153,27)" fg:x="1894" fg:w="43"/><text x="29.5689%" y="414.50"></text></g><g><title>c10::impl::wrap_kernel_functor_unboxed_&lt;c10::impl::detail::WrapFunctionIntoFunctor_&lt;c10::CompileTimeFunctionPointer&lt;std::tuple&lt;at::Tensor, at::Tensor, at::Tensor, at::Tensor, long&gt; (at::Tensor const&amp;, std::optional&lt;at::Tensor&gt; const&amp;, std::optional&lt;at::Tensor&gt; const&amp;, std::optional&lt;at::Tensor&gt; const&amp;, std::optional&lt;at::Tensor&gt; const&amp;, bool, double, double, bool), &amp;at::(anonymous namespace)::(anonymous namespace)::wrapper_CompositeImplicitAutograd___batch_norm_impl_index(at::Tensor const&amp;, std::optional&lt;at::Tensor&gt; const&amp;, std::optional&lt;at::Tensor&gt; const&amp;, std::optional&lt;at::Tensor&gt; const&amp;, std::optional&lt;at::Tensor&gt; const&amp;, bool, double, double, bool)&gt;, std::tuple&lt;at::Tensor, at::Tensor, at::Tensor, at::Tensor, long&gt;, c10::guts::typelist::typelist&lt;at::Tensor const&amp;, std::optional&lt;at::Tensor&gt; const&amp;, std::optional&lt;at::Tensor&gt; const&amp;, std::optional&lt;at::Tensor&gt; const&amp;, std::optional&lt;at::Tensor&gt; const&amp;, bool, double, double, bool&gt; &gt;, std::tuple&lt;at::Tensor, at::Tensor, at::Tensor, at::Tensor, long&gt; (at::Tensor const&amp;, std::optional&lt;at::Tensor&gt; const&amp;, std::optional&lt;at::Tensor&gt; const&amp;, std::optional&lt;at::Tensor&gt; const&amp;, std::optional&lt;at::Tensor&gt; const&amp;, bool, double, double, bool)&gt;::call (libtorch_cpu.so) (43 samples, 0.67%)</title><rect x="29.3189%" y="420" width="0.6656%" height="15" fill="rgb(227,106,25)" fg:x="1894" fg:w="43"/><text x="29.5689%" y="430.50"></text></g><g><title>at::native::_batch_norm_impl_index (libtorch_cpu.so) (43 samples, 0.67%)</title><rect x="29.3189%" y="436" width="0.6656%" height="15" fill="rgb(230,65,29)" fg:x="1894" fg:w="43"/><text x="29.5689%" y="446.50"></text></g><g><title>at::_ops::native_batch_norm::call (libtorch_cpu.so) (43 samples, 0.67%)</title><rect x="29.3189%" y="452" width="0.6656%" height="15" fill="rgb(221,57,46)" fg:x="1894" fg:w="43"/><text x="29.5689%" y="462.50"></text></g><g><title>c10::impl::wrap_kernel_functor_unboxed_&lt;c10::impl::detail::WrapFunctionIntoFunctor_&lt;c10::CompileTimeFunctionPointer&lt;std::tuple&lt;at::Tensor, at::Tensor, at::Tensor&gt; (c10::DispatchKeySet, at::Tensor const&amp;, std::optional&lt;at::Tensor&gt; const&amp;, std::optional&lt;at::Tensor&gt; const&amp;, std::optional&lt;at::Tensor&gt; const&amp;, std::optional&lt;at::Tensor&gt; const&amp;, bool, double, double), &amp;torch::autograd::VariableType::(anonymous namespace)::native_batch_norm(c10::DispatchKeySet, at::Tensor const&amp;, std::optional&lt;at::Tensor&gt; const&amp;, std::optional&lt;at::Tensor&gt; const&amp;, std::optional&lt;at::Tensor&gt; const&amp;, std::optional&lt;at::Tensor&gt; const&amp;, bool, double, double)&gt;, std::tuple&lt;at::Tensor, at::Tensor, at::Tensor&gt;, c10::guts::typelist::typelist&lt;c10::DispatchKeySet, at::Tensor const&amp;, std::optional&lt;at::Tensor&gt; const&amp;, std::optional&lt;at::Tensor&gt; const&amp;, std::optional&lt;at::Tensor&gt; const&amp;, std::optional&lt;at::Tensor&gt; const&amp;, bool, double, double&gt; &gt;, std::tuple&lt;at::Tensor, at::Tensor, at::Tensor&gt; (c10::DispatchKeySet, at::Tensor const&amp;, std::optional&lt;at::Tensor&gt; const&amp;, std::optional&lt;at::Tensor&gt; const&amp;, std::optional&lt;at::Tensor&gt; const&amp;, std::optional&lt;at::Tensor&gt; const&amp;, bool, double, double)&gt;::call (libtorch_cpu.so) (43 samples, 0.67%)</title><rect x="29.3189%" y="468" width="0.6656%" height="15" fill="rgb(229,161,17)" fg:x="1894" fg:w="43"/><text x="29.5689%" y="478.50"></text></g><g><title>torch::autograd::VariableType::(anonymous namespace)::native_batch_norm (libtorch_cpu.so) (43 samples, 0.67%)</title><rect x="29.3189%" y="484" width="0.6656%" height="15" fill="rgb(222,213,11)" fg:x="1894" fg:w="43"/><text x="29.5689%" y="494.50"></text></g><g><title>at::_ops::native_batch_norm::redispatch (libtorch_cpu.so) (43 samples, 0.67%)</title><rect x="29.3189%" y="500" width="0.6656%" height="15" fill="rgb(235,35,13)" fg:x="1894" fg:w="43"/><text x="29.5689%" y="510.50"></text></g><g><title>c10::impl::wrap_kernel_functor_unboxed_&lt;c10::impl::detail::WrapFunctionIntoFunctor_&lt;c10::CompileTimeFunctionPointer&lt;std::tuple&lt;at::Tensor, at::Tensor, at::Tensor&gt; (at::Tensor const&amp;, std::optional&lt;at::Tensor&gt; const&amp;, std::optional&lt;at::Tensor&gt; const&amp;, std::optional&lt;at::Tensor&gt; const&amp;, std::optional&lt;at::Tensor&gt; const&amp;, bool, double, double), &amp;at::(anonymous namespace)::(anonymous namespace)::wrapper_CPU__native_batch_norm(at::Tensor const&amp;, std::optional&lt;at::Tensor&gt; const&amp;, std::optional&lt;at::Tensor&gt; const&amp;, std::optional&lt;at::Tensor&gt; const&amp;, std::optional&lt;at::Tensor&gt; const&amp;, bool, double, double)&gt;, std::tuple&lt;at::Tensor, at::Tensor, at::Tensor&gt;, c10::guts::typelist::typelist&lt;at::Tensor const&amp;, std::optional&lt;at::Tensor&gt; const&amp;, std::optional&lt;at::Tensor&gt; const&amp;, std::optional&lt;at::Tensor&gt; const&amp;, std::optional&lt;at::Tensor&gt; const&amp;, bool, double, double&gt; &gt;, std::tuple&lt;at::Tensor, at::Tensor, at::Tensor&gt; (at::Tensor const&amp;, std::optional&lt;at::Tensor&gt; const&amp;, std::optional&lt;at::Tensor&gt; const&amp;, std::optional&lt;at::Tensor&gt; const&amp;, std::optional&lt;at::Tensor&gt; const&amp;, bool, double, double)&gt;::call (libtorch_cpu.so) (43 samples, 0.67%)</title><rect x="29.3189%" y="516" width="0.6656%" height="15" fill="rgb(233,158,34)" fg:x="1894" fg:w="43"/><text x="29.5689%" y="526.50"></text></g><g><title>at::native::batch_norm_cpu (libtorch_cpu.so) (43 samples, 0.67%)</title><rect x="29.3189%" y="532" width="0.6656%" height="15" fill="rgb(215,151,48)" fg:x="1894" fg:w="43"/><text x="29.5689%" y="542.50"></text></g><g><title>at::native::batch_norm_cpu_out (libtorch_cpu.so) (43 samples, 0.67%)</title><rect x="29.3189%" y="548" width="0.6656%" height="15" fill="rgb(229,84,14)" fg:x="1894" fg:w="43"/><text x="29.5689%" y="558.50"></text></g><g><title>at::native::batch_norm_cpu_update_stats_template&lt;float, float, at::native::InvStd&gt; (libtorch_cpu.so) (30 samples, 0.46%)</title><rect x="29.5201%" y="564" width="0.4644%" height="15" fill="rgb(229,68,14)" fg:x="1907" fg:w="30"/><text x="29.7701%" y="574.50"></text></g><g><title>at::native::(anonymous namespace)::batch_norm_cpu_collect_stats_kernel (libtorch_cpu.so) (23 samples, 0.36%)</title><rect x="29.6285%" y="580" width="0.3560%" height="15" fill="rgb(243,106,26)" fg:x="1914" fg:w="23"/><text x="29.8785%" y="590.50"></text></g><g><title>GOMP_parallel (libgomp-c9fef706.so.1) (18 samples, 0.28%)</title><rect x="29.7059%" y="596" width="0.2786%" height="15" fill="rgb(206,45,38)" fg:x="1919" fg:w="18"/><text x="29.9559%" y="606.50"></text></g><g><title>at::internal::invoke_parallel&lt;at::parallel_for&lt;at::native::(anonymous namespace)::batch_norm_cpu_collect_stats_contiguous_impl&lt;float&gt;(at::Tensor&amp;, at::Tensor&amp;, at::Tensor const&amp;)::{lambda(long, long)#1}&gt;(long, long, long, at::native::(anonymous namespace)::batch_norm_cpu_collect_stats_contiguous_impl&lt;float&gt;(at::Tensor&amp;, at::Tensor&amp;, at::Tensor const&amp;)::{lambda(long, long)#1} const&amp;)::{lambda(long, long)#1}&gt; (libtorch_cpu.so) (12 samples, 0.19%)</title><rect x="29.7988%" y="612" width="0.1858%" height="15" fill="rgb(226,6,15)" fg:x="1925" fg:w="12"/><text x="30.0488%" y="622.50"></text></g><g><title>0x77d25141ca9d (libgomp-c9fef706.so.1) (7 samples, 0.11%)</title><rect x="30.1393%" y="852" width="0.1084%" height="15" fill="rgb(232,22,54)" fg:x="1947" fg:w="7"/><text x="30.3893%" y="862.50"></text></g><g><title>0x77d25141e02a (libgomp-c9fef706.so.1) (7 samples, 0.11%)</title><rect x="30.1393%" y="868" width="0.1084%" height="15" fill="rgb(229,222,32)" fg:x="1947" fg:w="7"/><text x="30.3893%" y="878.50"></text></g><g><title>dnnl::primitive::execute (libtorch_cpu.so) (8 samples, 0.12%)</title><rect x="30.1393%" y="772" width="0.1238%" height="15" fill="rgb(228,62,29)" fg:x="1947" fg:w="8"/><text x="30.3893%" y="782.50"></text></g><g><title>dnnl_primitive_execute (libtorch_cpu.so) (8 samples, 0.12%)</title><rect x="30.1393%" y="788" width="0.1238%" height="15" fill="rgb(251,103,34)" fg:x="1947" fg:w="8"/><text x="30.3893%" y="798.50"></text></g><g><title>dnnl::impl::primitive_execute (libtorch_cpu.so) (8 samples, 0.12%)</title><rect x="30.1393%" y="804" width="0.1238%" height="15" fill="rgb(233,12,30)" fg:x="1947" fg:w="8"/><text x="30.3893%" y="814.50"></text></g><g><title>dnnl_primitive::execute (libtorch_cpu.so) (8 samples, 0.12%)</title><rect x="30.1393%" y="820" width="0.1238%" height="15" fill="rgb(238,52,0)" fg:x="1947" fg:w="8"/><text x="30.3893%" y="830.50"></text></g><g><title>dnnl::impl::cpu::x64::jit_blk_reorder_t::execute (libtorch_cpu.so) (8 samples, 0.12%)</title><rect x="30.1393%" y="836" width="0.1238%" height="15" fill="rgb(223,98,5)" fg:x="1947" fg:w="8"/><text x="30.3893%" y="846.50"></text></g><g><title>at::native::_mkldnn_convolution_out (libtorch_cpu.so) (14 samples, 0.22%)</title><rect x="30.0774%" y="708" width="0.2167%" height="15" fill="rgb(228,75,37)" fg:x="1943" fg:w="14"/><text x="30.3274%" y="718.50"></text></g><g><title>ideep::convolution_forward::compute_dispatch&lt;false, true, true&gt; (libtorch_cpu.so) (14 samples, 0.22%)</title><rect x="30.0774%" y="724" width="0.2167%" height="15" fill="rgb(205,115,49)" fg:x="1943" fg:w="14"/><text x="30.3274%" y="734.50"></text></g><g><title>ideep::tensor::reorder_if_differ_in (libtorch_cpu.so) (10 samples, 0.15%)</title><rect x="30.1393%" y="740" width="0.1548%" height="15" fill="rgb(250,154,43)" fg:x="1947" fg:w="10"/><text x="30.3893%" y="750.50"></text></g><g><title>ideep::tensor::reorder_to (libtorch_cpu.so) (10 samples, 0.15%)</title><rect x="30.1393%" y="756" width="0.1548%" height="15" fill="rgb(226,43,29)" fg:x="1947" fg:w="10"/><text x="30.3893%" y="766.50"></text></g><g><title>forward (torchvision/models/resnet.py:100) (22 samples, 0.34%)</title><rect x="29.9845%" y="260" width="0.3406%" height="15" fill="rgb(249,228,39)" fg:x="1937" fg:w="22"/><text x="30.2345%" y="270.50"></text></g><g><title>_wrapped_call_impl (torch/nn/modules/module.py:1751) (22 samples, 0.34%)</title><rect x="29.9845%" y="276" width="0.3406%" height="15" fill="rgb(216,79,43)" fg:x="1937" fg:w="22"/><text x="30.2345%" y="286.50"></text></g><g><title>_call_impl (torch/nn/modules/module.py:1762) (22 samples, 0.34%)</title><rect x="29.9845%" y="292" width="0.3406%" height="15" fill="rgb(228,95,12)" fg:x="1937" fg:w="22"/><text x="30.2345%" y="302.50"></text></g><g><title>forward (torch/nn/modules/container.py:240) (22 samples, 0.34%)</title><rect x="29.9845%" y="308" width="0.3406%" height="15" fill="rgb(249,221,15)" fg:x="1937" fg:w="22"/><text x="30.2345%" y="318.50"></text></g><g><title>_wrapped_call_impl (torch/nn/modules/module.py:1751) (22 samples, 0.34%)</title><rect x="29.9845%" y="324" width="0.3406%" height="15" fill="rgb(233,34,13)" fg:x="1937" fg:w="22"/><text x="30.2345%" y="334.50"></text></g><g><title>_call_impl (torch/nn/modules/module.py:1762) (22 samples, 0.34%)</title><rect x="29.9845%" y="340" width="0.3406%" height="15" fill="rgb(214,103,39)" fg:x="1937" fg:w="22"/><text x="30.2345%" y="350.50"></text></g><g><title>forward (torch/nn/modules/conv.py:554) (16 samples, 0.25%)</title><rect x="30.0774%" y="356" width="0.2477%" height="15" fill="rgb(251,126,39)" fg:x="1943" fg:w="16"/><text x="30.3274%" y="366.50"></text></g><g><title>_conv_forward (torch/nn/modules/conv.py:550) (16 samples, 0.25%)</title><rect x="30.0774%" y="372" width="0.2477%" height="15" fill="rgb(214,216,36)" fg:x="1943" fg:w="16"/><text x="30.3274%" y="382.50"></text></g><g><title>torch::autograd::THPVariable_conv2d (libtorch_python.so) (16 samples, 0.25%)</title><rect x="30.0774%" y="388" width="0.2477%" height="15" fill="rgb(220,221,8)" fg:x="1943" fg:w="16"/><text x="30.3274%" y="398.50"></text></g><g><title>at::_ops::conv2d::call (libtorch_cpu.so) (16 samples, 0.25%)</title><rect x="30.0774%" y="404" width="0.2477%" height="15" fill="rgb(240,216,3)" fg:x="1943" fg:w="16"/><text x="30.3274%" y="414.50"></text></g><g><title>c10::impl::wrap_kernel_functor_unboxed_&lt;c10::impl::detail::WrapFunctionIntoFunctor_&lt;c10::CompileTimeFunctionPointer&lt;at::Tensor(at::Tensor const&amp;, at::Tensor const&amp;, std::optional&lt;at::Tensor&gt; const&amp;, c10::ArrayRef&lt;c10::SymInt&gt;, c10::ArrayRef&lt;c10::SymInt&gt;, c10::ArrayRef&lt;c10::SymInt&gt;, c10::SymInt), &amp;at::(anonymous namespace)::(anonymous namespace)::wrapper_CompositeImplicitAutograd__conv2d(at::Tensor const&amp;, at::Tensor const&amp;, std::optional&lt;at::Tensor&gt; const&amp;, c10::ArrayRef&lt;c10::SymInt&gt;, c10::ArrayRef&lt;c10::SymInt&gt;, c10::ArrayRef&lt;c10::SymInt&gt;, c10::SymInt)&gt;, at::Tensor, c10::guts::typelist::typelist&lt;at::Tensor const&amp;, at::Tensor const&amp;, std::optional&lt;at::Tensor&gt; const&amp;, c10::ArrayRef&lt;c10::SymInt&gt;, c10::ArrayRef&lt;c10::SymInt&gt;, c10::ArrayRef&lt;c10::SymInt&gt;, c10::SymInt&gt; &gt;, at::Tensor(at::Tensor const&amp;, at::Tensor const&amp;, std::optional&lt;at::Tensor&gt; const&amp;, c10::ArrayRef&lt;c10::SymInt&gt;, c10::ArrayRef&lt;c10::SymInt&gt;, c10::ArrayRef&lt;c10::SymInt&gt;, c10::SymInt)&gt;::call (libtorch_cpu.so) (16 samples, 0.25%)</title><rect x="30.0774%" y="420" width="0.2477%" height="15" fill="rgb(232,218,17)" fg:x="1943" fg:w="16"/><text x="30.3274%" y="430.50"></text></g><g><title>at::native::conv2d_symint (libtorch_cpu.so) (16 samples, 0.25%)</title><rect x="30.0774%" y="436" width="0.2477%" height="15" fill="rgb(229,163,45)" fg:x="1943" fg:w="16"/><text x="30.3274%" y="446.50"></text></g><g><title>at::_ops::convolution::call (libtorch_cpu.so) (16 samples, 0.25%)</title><rect x="30.0774%" y="452" width="0.2477%" height="15" fill="rgb(231,110,42)" fg:x="1943" fg:w="16"/><text x="30.3274%" y="462.50"></text></g><g><title>c10::impl::wrap_kernel_functor_unboxed_&lt;c10::impl::detail::WrapFunctionIntoFunctor_&lt;c10::CompileTimeFunctionPointer&lt;at::Tensor(c10::DispatchKeySet, at::Tensor const&amp;, at::Tensor const&amp;, std::optional&lt;at::Tensor&gt; const&amp;, c10::ArrayRef&lt;c10::SymInt&gt;, c10::ArrayRef&lt;c10::SymInt&gt;, c10::ArrayRef&lt;c10::SymInt&gt;, bool, c10::ArrayRef&lt;c10::SymInt&gt;, c10::SymInt), &amp;torch::autograd::VariableType::(anonymous namespace)::convolution(c10::DispatchKeySet, at::Tensor const&amp;, at::Tensor const&amp;, std::optional&lt;at::Tensor&gt; const&amp;, c10::ArrayRef&lt;c10::SymInt&gt;, c10::ArrayRef&lt;c10::SymInt&gt;, c10::ArrayRef&lt;c10::SymInt&gt;, bool, c10::ArrayRef&lt;c10::SymInt&gt;, c10::SymInt)&gt;, at::Tensor, c10::guts::typelist::typelist&lt;c10::DispatchKeySet, at::Tensor const&amp;, at::Tensor const&amp;, std::optional&lt;at::Tensor&gt; const&amp;, c10::ArrayRef&lt;c10::SymInt&gt;, c10::ArrayRef&lt;c10::SymInt&gt;, c10::ArrayRef&lt;c10::SymInt&gt;, bool, c10::ArrayRef&lt;c10::SymInt&gt;, c10::SymInt&gt; &gt;, at::Tensor(c10::DispatchKeySet, at::Tensor const&amp;, at::Tensor const&amp;, std::optional&lt;at::Tensor&gt; const&amp;, c10::ArrayRef&lt;c10::SymInt&gt;, c10::ArrayRef&lt;c10::SymInt&gt;, c10::ArrayRef&lt;c10::SymInt&gt;, bool, c10::ArrayRef&lt;c10::SymInt&gt;, c10::SymInt)&gt;::call (libtorch_cpu.so) (16 samples, 0.25%)</title><rect x="30.0774%" y="468" width="0.2477%" height="15" fill="rgb(208,170,48)" fg:x="1943" fg:w="16"/><text x="30.3274%" y="478.50"></text></g><g><title>torch::autograd::VariableType::(anonymous namespace)::convolution (libtorch_cpu.so) (16 samples, 0.25%)</title><rect x="30.0774%" y="484" width="0.2477%" height="15" fill="rgb(239,116,25)" fg:x="1943" fg:w="16"/><text x="30.3274%" y="494.50"></text></g><g><title>at::_ops::convolution::redispatch (libtorch_cpu.so) (16 samples, 0.25%)</title><rect x="30.0774%" y="500" width="0.2477%" height="15" fill="rgb(219,200,50)" fg:x="1943" fg:w="16"/><text x="30.3274%" y="510.50"></text></g><g><title>c10::impl::wrap_kernel_functor_unboxed_&lt;c10::impl::detail::WrapFunctionIntoFunctor_&lt;c10::CompileTimeFunctionPointer&lt;at::Tensor(at::Tensor const&amp;, at::Tensor const&amp;, std::optional&lt;at::Tensor&gt; const&amp;, c10::ArrayRef&lt;c10::SymInt&gt;, c10::ArrayRef&lt;c10::SymInt&gt;, c10::ArrayRef&lt;c10::SymInt&gt;, bool, c10::ArrayRef&lt;c10::SymInt&gt;, c10::SymInt), &amp;at::(anonymous namespace)::(anonymous namespace)::wrapper_CompositeExplicitAutograd__convolution(at::Tensor const&amp;, at::Tensor const&amp;, std::optional&lt;at::Tensor&gt; const&amp;, c10::ArrayRef&lt;c10::SymInt&gt;, c10::ArrayRef&lt;c10::SymInt&gt;, c10::ArrayRef&lt;c10::SymInt&gt;, bool, c10::ArrayRef&lt;c10::SymInt&gt;, c10::SymInt)&gt;, at::Tensor, c10::guts::typelist::typelist&lt;at::Tensor const&amp;, at::Tensor const&amp;, std::optional&lt;at::Tensor&gt; const&amp;, c10::ArrayRef&lt;c10::SymInt&gt;, c10::ArrayRef&lt;c10::SymInt&gt;, c10::ArrayRef&lt;c10::SymInt&gt;, bool, c10::ArrayRef&lt;c10::SymInt&gt;, c10::SymInt&gt; &gt;, at::Tensor(at::Tensor const&amp;, at::Tensor const&amp;, std::optional&lt;at::Tensor&gt; const&amp;, c10::ArrayRef&lt;c10::SymInt&gt;, c10::ArrayRef&lt;c10::SymInt&gt;, c10::ArrayRef&lt;c10::SymInt&gt;, bool, c10::ArrayRef&lt;c10::SymInt&gt;, c10::SymInt)&gt;::call (libtorch_cpu.so) (16 samples, 0.25%)</title><rect x="30.0774%" y="516" width="0.2477%" height="15" fill="rgb(245,200,0)" fg:x="1943" fg:w="16"/><text x="30.3274%" y="526.50"></text></g><g><title>at::(anonymous namespace)::(anonymous namespace)::wrapper_CompositeExplicitAutograd__convolution (libtorch_cpu.so) (16 samples, 0.25%)</title><rect x="30.0774%" y="532" width="0.2477%" height="15" fill="rgb(245,119,33)" fg:x="1943" fg:w="16"/><text x="30.3274%" y="542.50"></text></g><g><title>at::native::convolution (libtorch_cpu.so) (16 samples, 0.25%)</title><rect x="30.0774%" y="548" width="0.2477%" height="15" fill="rgb(231,125,12)" fg:x="1943" fg:w="16"/><text x="30.3274%" y="558.50"></text></g><g><title>at::_ops::_convolution::call (libtorch_cpu.so) (16 samples, 0.25%)</title><rect x="30.0774%" y="564" width="0.2477%" height="15" fill="rgb(216,96,41)" fg:x="1943" fg:w="16"/><text x="30.3274%" y="574.50"></text></g><g><title>c10::impl::wrap_kernel_functor_unboxed_&lt;c10::impl::detail::WrapFunctionIntoFunctor_&lt;c10::CompileTimeFunctionPointer&lt;at::Tensor(at::Tensor const&amp;, at::Tensor const&amp;, std::optional&lt;at::Tensor&gt; const&amp;, c10::ArrayRef&lt;c10::SymInt&gt;, c10::ArrayRef&lt;c10::SymInt&gt;, c10::ArrayRef&lt;c10::SymInt&gt;, bool, c10::ArrayRef&lt;c10::SymInt&gt;, c10::SymInt, bool, bool, bool, bool), &amp;at::(anonymous namespace)::(anonymous namespace)::wrapper_CompositeExplicitAutograd___convolution(at::Tensor const&amp;, at::Tensor const&amp;, std::optional&lt;at::Tensor&gt; const&amp;, c10::ArrayRef&lt;c10::SymInt&gt;, c10::ArrayRef&lt;c10::SymInt&gt;, c10::ArrayRef&lt;c10::SymInt&gt;, bool, c10::ArrayRef&lt;c10::SymInt&gt;, c10::SymInt, bool, bool, bool, bool)&gt;, at::Tensor, c10::guts::typelist::typelist&lt;at::Tensor const&amp;, at::Tensor const&amp;, std::optional&lt;at::Tensor&gt; const&amp;, c10::ArrayRef&lt;c10::SymInt&gt;, c10::ArrayRef&lt;c10::SymInt&gt;, c10::ArrayRef&lt;c10::SymInt&gt;, bool, c10::ArrayRef&lt;c10::SymInt&gt;, c10::SymInt, bool, bool, bool, bool&gt; &gt;, at::Tensor(at::Tensor const&amp;, at::Tensor const&amp;, std::optional&lt;at::Tensor&gt; const&amp;, c10::ArrayRef&lt;c10::SymInt&gt;, c10::ArrayRef&lt;c10::SymInt&gt;, c10::ArrayRef&lt;c10::SymInt&gt;, bool, c10::ArrayRef&lt;c10::SymInt&gt;, c10::SymInt, bool, bool, bool, bool)&gt;::call (libtorch_cpu.so) (16 samples, 0.25%)</title><rect x="30.0774%" y="580" width="0.2477%" height="15" fill="rgb(248,43,45)" fg:x="1943" fg:w="16"/><text x="30.3274%" y="590.50"></text></g><g><title>at::(anonymous namespace)::(anonymous namespace)::wrapper_CompositeExplicitAutograd___convolution (libtorch_cpu.so) (16 samples, 0.25%)</title><rect x="30.0774%" y="596" width="0.2477%" height="15" fill="rgb(217,222,7)" fg:x="1943" fg:w="16"/><text x="30.3274%" y="606.50"></text></g><g><title>at::native::_convolution (libtorch_cpu.so) (16 samples, 0.25%)</title><rect x="30.0774%" y="612" width="0.2477%" height="15" fill="rgb(233,28,6)" fg:x="1943" fg:w="16"/><text x="30.3274%" y="622.50"></text></g><g><title>at::_ops::mkldnn_convolution::call (libtorch_cpu.so) (16 samples, 0.25%)</title><rect x="30.0774%" y="628" width="0.2477%" height="15" fill="rgb(231,218,15)" fg:x="1943" fg:w="16"/><text x="30.3274%" y="638.50"></text></g><g><title>c10::impl::wrap_kernel_functor_unboxed_&lt;c10::impl::detail::WrapFunctionIntoFunctor_&lt;c10::CompileTimeFunctionPointer&lt;at::Tensor(at::Tensor const&amp;, at::Tensor const&amp;, std::optional&lt;at::Tensor&gt; const&amp;, c10::ArrayRef&lt;c10::SymInt&gt;, c10::ArrayRef&lt;c10::SymInt&gt;, c10::ArrayRef&lt;c10::SymInt&gt;, c10::SymInt), &amp;at::(anonymous namespace)::(anonymous namespace)::wrapper_CompositeExplicitAutograd__mkldnn_convolution(at::Tensor const&amp;, at::Tensor const&amp;, std::optional&lt;at::Tensor&gt; const&amp;, c10::ArrayRef&lt;c10::SymInt&gt;, c10::ArrayRef&lt;c10::SymInt&gt;, c10::ArrayRef&lt;c10::SymInt&gt;, c10::SymInt)&gt;, at::Tensor, c10::guts::typelist::typelist&lt;at::Tensor const&amp;, at::Tensor const&amp;, std::optional&lt;at::Tensor&gt; const&amp;, c10::ArrayRef&lt;c10::SymInt&gt;, c10::ArrayRef&lt;c10::SymInt&gt;, c10::ArrayRef&lt;c10::SymInt&gt;, c10::SymInt&gt; &gt;, at::Tensor(at::Tensor const&amp;, at::Tensor const&amp;, std::optional&lt;at::Tensor&gt; const&amp;, c10::ArrayRef&lt;c10::SymInt&gt;, c10::ArrayRef&lt;c10::SymInt&gt;, c10::ArrayRef&lt;c10::SymInt&gt;, c10::SymInt)&gt;::call (libtorch_cpu.so) (16 samples, 0.25%)</title><rect x="30.0774%" y="644" width="0.2477%" height="15" fill="rgb(226,171,48)" fg:x="1943" fg:w="16"/><text x="30.3274%" y="654.50"></text></g><g><title>at::(anonymous namespace)::(anonymous namespace)::wrapper_CompositeExplicitAutograd__mkldnn_convolution (libtorch_cpu.so) (16 samples, 0.25%)</title><rect x="30.0774%" y="660" width="0.2477%" height="15" fill="rgb(235,201,9)" fg:x="1943" fg:w="16"/><text x="30.3274%" y="670.50"></text></g><g><title>at::native::mkldnn_convolution (libtorch_cpu.so) (16 samples, 0.25%)</title><rect x="30.0774%" y="676" width="0.2477%" height="15" fill="rgb(217,80,15)" fg:x="1943" fg:w="16"/><text x="30.3274%" y="686.50"></text></g><g><title>at::native::_mkldnn_convolution (libtorch_cpu.so) (16 samples, 0.25%)</title><rect x="30.0774%" y="692" width="0.2477%" height="15" fill="rgb(219,152,8)" fg:x="1943" fg:w="16"/><text x="30.3274%" y="702.50"></text></g><g><title>dnnl::primitive::execute (libtorch_cpu.so) (85 samples, 1.32%)</title><rect x="30.5108%" y="692" width="1.3158%" height="15" fill="rgb(243,107,38)" fg:x="1971" fg:w="85"/><text x="30.7608%" y="702.50"></text></g><g><title>dnnl_primitive_execute (libtorch_cpu.so) (85 samples, 1.32%)</title><rect x="30.5108%" y="708" width="1.3158%" height="15" fill="rgb(231,17,5)" fg:x="1971" fg:w="85"/><text x="30.7608%" y="718.50"></text></g><g><title>dnnl::impl::primitive_execute (libtorch_cpu.so) (85 samples, 1.32%)</title><rect x="30.5108%" y="724" width="1.3158%" height="15" fill="rgb(209,25,54)" fg:x="1971" fg:w="85"/><text x="30.7608%" y="734.50"></text></g><g><title>dnnl_primitive::execute (libtorch_cpu.so) (85 samples, 1.32%)</title><rect x="30.5108%" y="740" width="1.3158%" height="15" fill="rgb(219,0,2)" fg:x="1971" fg:w="85"/><text x="30.7608%" y="750.50"></text></g><g><title>dnnl::impl::cpu::x64::jit_avx2_convolution_fwd_t::execute (libtorch_cpu.so) (85 samples, 1.32%)</title><rect x="30.5108%" y="756" width="1.3158%" height="15" fill="rgb(246,9,5)" fg:x="1971" fg:w="85"/><text x="30.7608%" y="766.50"></text></g><g><title>dnnl::impl::cpu::x64::jit_avx2_convolution_fwd_t::execute_forward (libtorch_cpu.so) (85 samples, 1.32%)</title><rect x="30.5108%" y="772" width="1.3158%" height="15" fill="rgb(226,159,4)" fg:x="1971" fg:w="85"/><text x="30.7608%" y="782.50"></text></g><g><title>GOMP_parallel (libgomp-c9fef706.so.1) (79 samples, 1.22%)</title><rect x="30.6037%" y="788" width="1.2229%" height="15" fill="rgb(219,175,34)" fg:x="1977" fg:w="79"/><text x="30.8537%" y="798.50"></text></g><g><title>dnnl::impl::parallel (libtorch_cpu.so) (74 samples, 1.15%)</title><rect x="30.6811%" y="804" width="1.1455%" height="15" fill="rgb(236,10,46)" fg:x="1982" fg:w="74"/><text x="30.9311%" y="814.50"></text></g><g><title>dnnl::impl::cpu::x64::jit_avx2_convolution_fwd_t::execute_forward(dnnl::impl::exec_ctx_t const&amp;) const::{lambda(int, int)#1}::operator() const (libtorch_cpu.so) (74 samples, 1.15%)</title><rect x="30.6811%" y="820" width="1.1455%" height="15" fill="rgb(240,211,16)" fg:x="1982" fg:w="74"/><text x="30.9311%" y="830.50"></text></g><g><title>dnnl::impl::cpu::x64::jit_blk_reorder_t::execute (libtorch_cpu.so) (7 samples, 0.11%)</title><rect x="31.8266%" y="788" width="0.1084%" height="15" fill="rgb(205,3,43)" fg:x="2056" fg:w="7"/><text x="32.0766%" y="798.50"></text></g><g><title>at::native::_mkldnn_convolution_out (libtorch_cpu.so) (100 samples, 1.55%)</title><rect x="30.5108%" y="660" width="1.5480%" height="15" fill="rgb(245,7,22)" fg:x="1971" fg:w="100"/><text x="30.7608%" y="670.50"></text></g><g><title>ideep::convolution_forward::compute_dispatch&lt;false, true, true&gt; (libtorch_cpu.so) (100 samples, 1.55%)</title><rect x="30.5108%" y="676" width="1.5480%" height="15" fill="rgb(239,132,32)" fg:x="1971" fg:w="100"/><text x="30.7608%" y="686.50"></text></g><g><title>ideep::tensor::reorder_if_differ_in (libtorch_cpu.so) (15 samples, 0.23%)</title><rect x="31.8266%" y="692" width="0.2322%" height="15" fill="rgb(228,202,34)" fg:x="2056" fg:w="15"/><text x="32.0766%" y="702.50"></text></g><g><title>ideep::tensor::reorder_to (libtorch_cpu.so) (15 samples, 0.23%)</title><rect x="31.8266%" y="708" width="0.2322%" height="15" fill="rgb(254,200,22)" fg:x="2056" fg:w="15"/><text x="32.0766%" y="718.50"></text></g><g><title>dnnl::primitive::execute (libtorch_cpu.so) (15 samples, 0.23%)</title><rect x="31.8266%" y="724" width="0.2322%" height="15" fill="rgb(219,10,39)" fg:x="2056" fg:w="15"/><text x="32.0766%" y="734.50"></text></g><g><title>dnnl_primitive_execute (libtorch_cpu.so) (15 samples, 0.23%)</title><rect x="31.8266%" y="740" width="0.2322%" height="15" fill="rgb(226,210,39)" fg:x="2056" fg:w="15"/><text x="32.0766%" y="750.50"></text></g><g><title>dnnl::impl::primitive_execute (libtorch_cpu.so) (15 samples, 0.23%)</title><rect x="31.8266%" y="756" width="0.2322%" height="15" fill="rgb(208,219,16)" fg:x="2056" fg:w="15"/><text x="32.0766%" y="766.50"></text></g><g><title>dnnl_primitive::execute (libtorch_cpu.so) (15 samples, 0.23%)</title><rect x="31.8266%" y="772" width="0.2322%" height="15" fill="rgb(216,158,51)" fg:x="2056" fg:w="15"/><text x="32.0766%" y="782.50"></text></g><g><title>dnnl::impl::cpu::x64::jit_uni_reorder_t::execute (libtorch_cpu.so) (8 samples, 0.12%)</title><rect x="31.9350%" y="788" width="0.1238%" height="15" fill="rgb(233,14,44)" fg:x="2063" fg:w="8"/><text x="32.1850%" y="798.50"></text></g><g><title>dnnl::impl::cpu::x64::jit_uni_reorder_t::omp_driver (libtorch_cpu.so) (8 samples, 0.12%)</title><rect x="31.9350%" y="804" width="0.1238%" height="15" fill="rgb(237,97,39)" fg:x="2063" fg:w="8"/><text x="32.1850%" y="814.50"></text></g><g><title>0x77d25141ca9d (libgomp-c9fef706.so.1) (7 samples, 0.11%)</title><rect x="32.0588%" y="788" width="0.1084%" height="15" fill="rgb(218,198,43)" fg:x="2071" fg:w="7"/><text x="32.3088%" y="798.50"></text></g><g><title>0x77d25141e02a (libgomp-c9fef706.so.1) (7 samples, 0.11%)</title><rect x="32.0588%" y="804" width="0.1084%" height="15" fill="rgb(231,104,20)" fg:x="2071" fg:w="7"/><text x="32.3088%" y="814.50"></text></g><g><title>forward (torchvision/models/resnet.py:92) (117 samples, 1.81%)</title><rect x="30.4644%" y="260" width="1.8111%" height="15" fill="rgb(254,36,13)" fg:x="1968" fg:w="117"/><text x="30.7144%" y="270.50">f..</text></g><g><title>_wrapped_call_impl (torch/nn/modules/module.py:1751) (117 samples, 1.81%)</title><rect x="30.4644%" y="276" width="1.8111%" height="15" fill="rgb(248,14,50)" fg:x="1968" fg:w="117"/><text x="30.7144%" y="286.50">_..</text></g><g><title>_call_impl (torch/nn/modules/module.py:1762) (117 samples, 1.81%)</title><rect x="30.4644%" y="292" width="1.8111%" height="15" fill="rgb(217,107,29)" fg:x="1968" fg:w="117"/><text x="30.7144%" y="302.50">_..</text></g><g><title>forward (torch/nn/modules/conv.py:554) (117 samples, 1.81%)</title><rect x="30.4644%" y="308" width="1.8111%" height="15" fill="rgb(251,169,33)" fg:x="1968" fg:w="117"/><text x="30.7144%" y="318.50">f..</text></g><g><title>_conv_forward (torch/nn/modules/conv.py:550) (117 samples, 1.81%)</title><rect x="30.4644%" y="324" width="1.8111%" height="15" fill="rgb(217,108,32)" fg:x="1968" fg:w="117"/><text x="30.7144%" y="334.50">_..</text></g><g><title>torch::autograd::THPVariable_conv2d (libtorch_python.so) (117 samples, 1.81%)</title><rect x="30.4644%" y="340" width="1.8111%" height="15" fill="rgb(219,66,42)" fg:x="1968" fg:w="117"/><text x="30.7144%" y="350.50">t..</text></g><g><title>at::_ops::conv2d::call (libtorch_cpu.so) (117 samples, 1.81%)</title><rect x="30.4644%" y="356" width="1.8111%" height="15" fill="rgb(206,180,7)" fg:x="1968" fg:w="117"/><text x="30.7144%" y="366.50">a..</text></g><g><title>c10::impl::wrap_kernel_functor_unboxed_&lt;c10::impl::detail::WrapFunctionIntoFunctor_&lt;c10::CompileTimeFunctionPointer&lt;at::Tensor(at::Tensor const&amp;, at::Tensor const&amp;, std::optional&lt;at::Tensor&gt; const&amp;, c10::ArrayRef&lt;c10::SymInt&gt;, c10::ArrayRef&lt;c10::SymInt&gt;, c10::ArrayRef&lt;c10::SymInt&gt;, c10::SymInt), &amp;at::(anonymous namespace)::(anonymous namespace)::wrapper_CompositeImplicitAutograd__conv2d(at::Tensor const&amp;, at::Tensor const&amp;, std::optional&lt;at::Tensor&gt; const&amp;, c10::ArrayRef&lt;c10::SymInt&gt;, c10::ArrayRef&lt;c10::SymInt&gt;, c10::ArrayRef&lt;c10::SymInt&gt;, c10::SymInt)&gt;, at::Tensor, c10::guts::typelist::typelist&lt;at::Tensor const&amp;, at::Tensor const&amp;, std::optional&lt;at::Tensor&gt; const&amp;, c10::ArrayRef&lt;c10::SymInt&gt;, c10::ArrayRef&lt;c10::SymInt&gt;, c10::ArrayRef&lt;c10::SymInt&gt;, c10::SymInt&gt; &gt;, at::Tensor(at::Tensor const&amp;, at::Tensor const&amp;, std::optional&lt;at::Tensor&gt; const&amp;, c10::ArrayRef&lt;c10::SymInt&gt;, c10::ArrayRef&lt;c10::SymInt&gt;, c10::ArrayRef&lt;c10::SymInt&gt;, c10::SymInt)&gt;::call (libtorch_cpu.so) (117 samples, 1.81%)</title><rect x="30.4644%" y="372" width="1.8111%" height="15" fill="rgb(208,226,31)" fg:x="1968" fg:w="117"/><text x="30.7144%" y="382.50">c..</text></g><g><title>at::native::conv2d_symint (libtorch_cpu.so) (117 samples, 1.81%)</title><rect x="30.4644%" y="388" width="1.8111%" height="15" fill="rgb(218,26,49)" fg:x="1968" fg:w="117"/><text x="30.7144%" y="398.50">a..</text></g><g><title>at::_ops::convolution::call (libtorch_cpu.so) (117 samples, 1.81%)</title><rect x="30.4644%" y="404" width="1.8111%" height="15" fill="rgb(233,197,48)" fg:x="1968" fg:w="117"/><text x="30.7144%" y="414.50">a..</text></g><g><title>c10::impl::wrap_kernel_functor_unboxed_&lt;c10::impl::detail::WrapFunctionIntoFunctor_&lt;c10::CompileTimeFunctionPointer&lt;at::Tensor(c10::DispatchKeySet, at::Tensor const&amp;, at::Tensor const&amp;, std::optional&lt;at::Tensor&gt; const&amp;, c10::ArrayRef&lt;c10::SymInt&gt;, c10::ArrayRef&lt;c10::SymInt&gt;, c10::ArrayRef&lt;c10::SymInt&gt;, bool, c10::ArrayRef&lt;c10::SymInt&gt;, c10::SymInt), &amp;torch::autograd::VariableType::(anonymous namespace)::convolution(c10::DispatchKeySet, at::Tensor const&amp;, at::Tensor const&amp;, std::optional&lt;at::Tensor&gt; const&amp;, c10::ArrayRef&lt;c10::SymInt&gt;, c10::ArrayRef&lt;c10::SymInt&gt;, c10::ArrayRef&lt;c10::SymInt&gt;, bool, c10::ArrayRef&lt;c10::SymInt&gt;, c10::SymInt)&gt;, at::Tensor, c10::guts::typelist::typelist&lt;c10::DispatchKeySet, at::Tensor const&amp;, at::Tensor const&amp;, std::optional&lt;at::Tensor&gt; const&amp;, c10::ArrayRef&lt;c10::SymInt&gt;, c10::ArrayRef&lt;c10::SymInt&gt;, c10::ArrayRef&lt;c10::SymInt&gt;, bool, c10::ArrayRef&lt;c10::SymInt&gt;, c10::SymInt&gt; &gt;, at::Tensor(c10::DispatchKeySet, at::Tensor const&amp;, at::Tensor const&amp;, std::optional&lt;at::Tensor&gt; const&amp;, c10::ArrayRef&lt;c10::SymInt&gt;, c10::ArrayRef&lt;c10::SymInt&gt;, c10::ArrayRef&lt;c10::SymInt&gt;, bool, c10::ArrayRef&lt;c10::SymInt&gt;, c10::SymInt)&gt;::call (libtorch_cpu.so) (117 samples, 1.81%)</title><rect x="30.4644%" y="420" width="1.8111%" height="15" fill="rgb(252,181,51)" fg:x="1968" fg:w="117"/><text x="30.7144%" y="430.50">c..</text></g><g><title>torch::autograd::VariableType::(anonymous namespace)::convolution (libtorch_cpu.so) (117 samples, 1.81%)</title><rect x="30.4644%" y="436" width="1.8111%" height="15" fill="rgb(253,90,19)" fg:x="1968" fg:w="117"/><text x="30.7144%" y="446.50">t..</text></g><g><title>at::_ops::convolution::redispatch (libtorch_cpu.so) (117 samples, 1.81%)</title><rect x="30.4644%" y="452" width="1.8111%" height="15" fill="rgb(215,171,30)" fg:x="1968" fg:w="117"/><text x="30.7144%" y="462.50">a..</text></g><g><title>c10::impl::wrap_kernel_functor_unboxed_&lt;c10::impl::detail::WrapFunctionIntoFunctor_&lt;c10::CompileTimeFunctionPointer&lt;at::Tensor(at::Tensor const&amp;, at::Tensor const&amp;, std::optional&lt;at::Tensor&gt; const&amp;, c10::ArrayRef&lt;c10::SymInt&gt;, c10::ArrayRef&lt;c10::SymInt&gt;, c10::ArrayRef&lt;c10::SymInt&gt;, bool, c10::ArrayRef&lt;c10::SymInt&gt;, c10::SymInt), &amp;at::(anonymous namespace)::(anonymous namespace)::wrapper_CompositeExplicitAutograd__convolution(at::Tensor const&amp;, at::Tensor const&amp;, std::optional&lt;at::Tensor&gt; const&amp;, c10::ArrayRef&lt;c10::SymInt&gt;, c10::ArrayRef&lt;c10::SymInt&gt;, c10::ArrayRef&lt;c10::SymInt&gt;, bool, c10::ArrayRef&lt;c10::SymInt&gt;, c10::SymInt)&gt;, at::Tensor, c10::guts::typelist::typelist&lt;at::Tensor const&amp;, at::Tensor const&amp;, std::optional&lt;at::Tensor&gt; const&amp;, c10::ArrayRef&lt;c10::SymInt&gt;, c10::ArrayRef&lt;c10::SymInt&gt;, c10::ArrayRef&lt;c10::SymInt&gt;, bool, c10::ArrayRef&lt;c10::SymInt&gt;, c10::SymInt&gt; &gt;, at::Tensor(at::Tensor const&amp;, at::Tensor const&amp;, std::optional&lt;at::Tensor&gt; const&amp;, c10::ArrayRef&lt;c10::SymInt&gt;, c10::ArrayRef&lt;c10::SymInt&gt;, c10::ArrayRef&lt;c10::SymInt&gt;, bool, c10::ArrayRef&lt;c10::SymInt&gt;, c10::SymInt)&gt;::call (libtorch_cpu.so) (117 samples, 1.81%)</title><rect x="30.4644%" y="468" width="1.8111%" height="15" fill="rgb(214,222,9)" fg:x="1968" fg:w="117"/><text x="30.7144%" y="478.50">c..</text></g><g><title>at::(anonymous namespace)::(anonymous namespace)::wrapper_CompositeExplicitAutograd__convolution (libtorch_cpu.so) (117 samples, 1.81%)</title><rect x="30.4644%" y="484" width="1.8111%" height="15" fill="rgb(223,3,22)" fg:x="1968" fg:w="117"/><text x="30.7144%" y="494.50">a..</text></g><g><title>at::native::convolution (libtorch_cpu.so) (117 samples, 1.81%)</title><rect x="30.4644%" y="500" width="1.8111%" height="15" fill="rgb(225,196,46)" fg:x="1968" fg:w="117"/><text x="30.7144%" y="510.50">a..</text></g><g><title>at::_ops::_convolution::call (libtorch_cpu.so) (117 samples, 1.81%)</title><rect x="30.4644%" y="516" width="1.8111%" height="15" fill="rgb(209,110,37)" fg:x="1968" fg:w="117"/><text x="30.7144%" y="526.50">a..</text></g><g><title>c10::impl::wrap_kernel_functor_unboxed_&lt;c10::impl::detail::WrapFunctionIntoFunctor_&lt;c10::CompileTimeFunctionPointer&lt;at::Tensor(at::Tensor const&amp;, at::Tensor const&amp;, std::optional&lt;at::Tensor&gt; const&amp;, c10::ArrayRef&lt;c10::SymInt&gt;, c10::ArrayRef&lt;c10::SymInt&gt;, c10::ArrayRef&lt;c10::SymInt&gt;, bool, c10::ArrayRef&lt;c10::SymInt&gt;, c10::SymInt, bool, bool, bool, bool), &amp;at::(anonymous namespace)::(anonymous namespace)::wrapper_CompositeExplicitAutograd___convolution(at::Tensor const&amp;, at::Tensor const&amp;, std::optional&lt;at::Tensor&gt; const&amp;, c10::ArrayRef&lt;c10::SymInt&gt;, c10::ArrayRef&lt;c10::SymInt&gt;, c10::ArrayRef&lt;c10::SymInt&gt;, bool, c10::ArrayRef&lt;c10::SymInt&gt;, c10::SymInt, bool, bool, bool, bool)&gt;, at::Tensor, c10::guts::typelist::typelist&lt;at::Tensor const&amp;, at::Tensor const&amp;, std::optional&lt;at::Tensor&gt; const&amp;, c10::ArrayRef&lt;c10::SymInt&gt;, c10::ArrayRef&lt;c10::SymInt&gt;, c10::ArrayRef&lt;c10::SymInt&gt;, bool, c10::ArrayRef&lt;c10::SymInt&gt;, c10::SymInt, bool, bool, bool, bool&gt; &gt;, at::Tensor(at::Tensor const&amp;, at::Tensor const&amp;, std::optional&lt;at::Tensor&gt; const&amp;, c10::ArrayRef&lt;c10::SymInt&gt;, c10::ArrayRef&lt;c10::SymInt&gt;, c10::ArrayRef&lt;c10::SymInt&gt;, bool, c10::ArrayRef&lt;c10::SymInt&gt;, c10::SymInt, bool, bool, bool, bool)&gt;::call (libtorch_cpu.so) (117 samples, 1.81%)</title><rect x="30.4644%" y="532" width="1.8111%" height="15" fill="rgb(249,89,12)" fg:x="1968" fg:w="117"/><text x="30.7144%" y="542.50">c..</text></g><g><title>at::(anonymous namespace)::(anonymous namespace)::wrapper_CompositeExplicitAutograd___convolution (libtorch_cpu.so) (117 samples, 1.81%)</title><rect x="30.4644%" y="548" width="1.8111%" height="15" fill="rgb(226,27,33)" fg:x="1968" fg:w="117"/><text x="30.7144%" y="558.50">a..</text></g><g><title>at::native::_convolution (libtorch_cpu.so) (117 samples, 1.81%)</title><rect x="30.4644%" y="564" width="1.8111%" height="15" fill="rgb(213,82,22)" fg:x="1968" fg:w="117"/><text x="30.7144%" y="574.50">a..</text></g><g><title>at::_ops::mkldnn_convolution::call (libtorch_cpu.so) (116 samples, 1.80%)</title><rect x="30.4799%" y="580" width="1.7957%" height="15" fill="rgb(248,140,0)" fg:x="1969" fg:w="116"/><text x="30.7299%" y="590.50">a..</text></g><g><title>c10::impl::wrap_kernel_functor_unboxed_&lt;c10::impl::detail::WrapFunctionIntoFunctor_&lt;c10::CompileTimeFunctionPointer&lt;at::Tensor(at::Tensor const&amp;, at::Tensor const&amp;, std::optional&lt;at::Tensor&gt; const&amp;, c10::ArrayRef&lt;c10::SymInt&gt;, c10::ArrayRef&lt;c10::SymInt&gt;, c10::ArrayRef&lt;c10::SymInt&gt;, c10::SymInt), &amp;at::(anonymous namespace)::(anonymous namespace)::wrapper_CompositeExplicitAutograd__mkldnn_convolution(at::Tensor const&amp;, at::Tensor const&amp;, std::optional&lt;at::Tensor&gt; const&amp;, c10::ArrayRef&lt;c10::SymInt&gt;, c10::ArrayRef&lt;c10::SymInt&gt;, c10::ArrayRef&lt;c10::SymInt&gt;, c10::SymInt)&gt;, at::Tensor, c10::guts::typelist::typelist&lt;at::Tensor const&amp;, at::Tensor const&amp;, std::optional&lt;at::Tensor&gt; const&amp;, c10::ArrayRef&lt;c10::SymInt&gt;, c10::ArrayRef&lt;c10::SymInt&gt;, c10::ArrayRef&lt;c10::SymInt&gt;, c10::SymInt&gt; &gt;, at::Tensor(at::Tensor const&amp;, at::Tensor const&amp;, std::optional&lt;at::Tensor&gt; const&amp;, c10::ArrayRef&lt;c10::SymInt&gt;, c10::ArrayRef&lt;c10::SymInt&gt;, c10::ArrayRef&lt;c10::SymInt&gt;, c10::SymInt)&gt;::call (libtorch_cpu.so) (116 samples, 1.80%)</title><rect x="30.4799%" y="596" width="1.7957%" height="15" fill="rgb(228,106,3)" fg:x="1969" fg:w="116"/><text x="30.7299%" y="606.50">c..</text></g><g><title>at::(anonymous namespace)::(anonymous namespace)::wrapper_CompositeExplicitAutograd__mkldnn_convolution (libtorch_cpu.so) (116 samples, 1.80%)</title><rect x="30.4799%" y="612" width="1.7957%" height="15" fill="rgb(209,23,37)" fg:x="1969" fg:w="116"/><text x="30.7299%" y="622.50">a..</text></g><g><title>at::native::mkldnn_convolution (libtorch_cpu.so) (116 samples, 1.80%)</title><rect x="30.4799%" y="628" width="1.7957%" height="15" fill="rgb(241,93,50)" fg:x="1969" fg:w="116"/><text x="30.7299%" y="638.50">a..</text></g><g><title>at::native::_mkldnn_convolution (libtorch_cpu.so) (116 samples, 1.80%)</title><rect x="30.4799%" y="644" width="1.7957%" height="15" fill="rgb(253,46,43)" fg:x="1969" fg:w="116"/><text x="30.7299%" y="654.50">a..</text></g><g><title>at::native::mkldnn_to_dense (libtorch_cpu.so) (14 samples, 0.22%)</title><rect x="32.0588%" y="660" width="0.2167%" height="15" fill="rgb(226,206,43)" fg:x="2071" fg:w="14"/><text x="32.3088%" y="670.50"></text></g><g><title>ideep::tensor::to_public (libtorch_cpu.so) (14 samples, 0.22%)</title><rect x="32.0588%" y="676" width="0.2167%" height="15" fill="rgb(217,54,7)" fg:x="2071" fg:w="14"/><text x="32.3088%" y="686.50"></text></g><g><title>ideep::tensor::reorder_to (libtorch_cpu.so) (14 samples, 0.22%)</title><rect x="32.0588%" y="692" width="0.2167%" height="15" fill="rgb(223,5,52)" fg:x="2071" fg:w="14"/><text x="32.3088%" y="702.50"></text></g><g><title>dnnl::primitive::execute (libtorch_cpu.so) (14 samples, 0.22%)</title><rect x="32.0588%" y="708" width="0.2167%" height="15" fill="rgb(206,52,46)" fg:x="2071" fg:w="14"/><text x="32.3088%" y="718.50"></text></g><g><title>dnnl_primitive_execute (libtorch_cpu.so) (14 samples, 0.22%)</title><rect x="32.0588%" y="724" width="0.2167%" height="15" fill="rgb(253,136,11)" fg:x="2071" fg:w="14"/><text x="32.3088%" y="734.50"></text></g><g><title>dnnl::impl::primitive_execute (libtorch_cpu.so) (14 samples, 0.22%)</title><rect x="32.0588%" y="740" width="0.2167%" height="15" fill="rgb(208,106,33)" fg:x="2071" fg:w="14"/><text x="32.3088%" y="750.50"></text></g><g><title>dnnl_primitive::execute (libtorch_cpu.so) (14 samples, 0.22%)</title><rect x="32.0588%" y="756" width="0.2167%" height="15" fill="rgb(206,54,4)" fg:x="2071" fg:w="14"/><text x="32.3088%" y="766.50"></text></g><g><title>dnnl::impl::cpu::x64::jit_blk_reorder_t::execute (libtorch_cpu.so) (14 samples, 0.22%)</title><rect x="32.0588%" y="772" width="0.2167%" height="15" fill="rgb(213,3,15)" fg:x="2071" fg:w="14"/><text x="32.3088%" y="782.50"></text></g><g><title>GOMP_parallel (libgomp-c9fef706.so.1) (7 samples, 0.11%)</title><rect x="32.1672%" y="788" width="0.1084%" height="15" fill="rgb(252,211,39)" fg:x="2078" fg:w="7"/><text x="32.4172%" y="798.50"></text></g><g><title>forward (torchvision/models/resnet.py:93) (24 samples, 0.37%)</title><rect x="32.2755%" y="260" width="0.3715%" height="15" fill="rgb(223,6,36)" fg:x="2085" fg:w="24"/><text x="32.5255%" y="270.50"></text></g><g><title>_wrapped_call_impl (torch/nn/modules/module.py:1751) (23 samples, 0.36%)</title><rect x="32.2910%" y="276" width="0.3560%" height="15" fill="rgb(252,169,45)" fg:x="2086" fg:w="23"/><text x="32.5410%" y="286.50"></text></g><g><title>_call_impl (torch/nn/modules/module.py:1762) (22 samples, 0.34%)</title><rect x="32.3065%" y="292" width="0.3406%" height="15" fill="rgb(212,48,26)" fg:x="2087" fg:w="22"/><text x="32.5565%" y="302.50"></text></g><g><title>forward (torch/nn/modules/batchnorm.py:193) (22 samples, 0.34%)</title><rect x="32.3065%" y="308" width="0.3406%" height="15" fill="rgb(251,102,48)" fg:x="2087" fg:w="22"/><text x="32.5565%" y="318.50"></text></g><g><title>batch_norm (torch/nn/functional.py:2831) (22 samples, 0.34%)</title><rect x="32.3065%" y="324" width="0.3406%" height="15" fill="rgb(243,208,16)" fg:x="2087" fg:w="22"/><text x="32.5565%" y="334.50"></text></g><g><title>torch::autograd::THPVariable_batch_norm (libtorch_python.so) (21 samples, 0.33%)</title><rect x="32.3220%" y="340" width="0.3251%" height="15" fill="rgb(219,96,24)" fg:x="2088" fg:w="21"/><text x="32.5720%" y="350.50"></text></g><g><title>at::_ops::batch_norm::call (libtorch_cpu.so) (21 samples, 0.33%)</title><rect x="32.3220%" y="356" width="0.3251%" height="15" fill="rgb(219,33,29)" fg:x="2088" fg:w="21"/><text x="32.5720%" y="366.50"></text></g><g><title>c10::impl::wrap_kernel_functor_unboxed_&lt;c10::impl::detail::WrapFunctionIntoFunctor_&lt;c10::CompileTimeFunctionPointer&lt;at::Tensor(at::Tensor const&amp;, std::optional&lt;at::Tensor&gt; const&amp;, std::optional&lt;at::Tensor&gt; const&amp;, std::optional&lt;at::Tensor&gt; const&amp;, std::optional&lt;at::Tensor&gt; const&amp;, bool, double, double, bool), &amp;at::(anonymous namespace)::(anonymous namespace)::wrapper_CompositeImplicitAutograd__batch_norm(at::Tensor const&amp;, std::optional&lt;at::Tensor&gt; const&amp;, std::optional&lt;at::Tensor&gt; const&amp;, std::optional&lt;at::Tensor&gt; const&amp;, std::optional&lt;at::Tensor&gt; const&amp;, bool, double, double, bool)&gt;, at::Tensor, c10::guts::typelist::typelist&lt;at::Tensor const&amp;, std::optional&lt;at::Tensor&gt; const&amp;, std::optional&lt;at::Tensor&gt; const&amp;, std::optional&lt;at::Tensor&gt; const&amp;, std::optional&lt;at::Tensor&gt; const&amp;, bool, double, double, bool&gt; &gt;, at::Tensor(at::Tensor const&amp;, std::optional&lt;at::Tensor&gt; const&amp;, std::optional&lt;at::Tensor&gt; const&amp;, std::optional&lt;at::Tensor&gt; const&amp;, std::optional&lt;at::Tensor&gt; const&amp;, bool, double, double, bool)&gt;::call (libtorch_cpu.so) (21 samples, 0.33%)</title><rect x="32.3220%" y="372" width="0.3251%" height="15" fill="rgb(223,176,5)" fg:x="2088" fg:w="21"/><text x="32.5720%" y="382.50"></text></g><g><title>at::native::batch_norm (libtorch_cpu.so) (21 samples, 0.33%)</title><rect x="32.3220%" y="388" width="0.3251%" height="15" fill="rgb(228,140,14)" fg:x="2088" fg:w="21"/><text x="32.5720%" y="398.50"></text></g><g><title>at::_ops::_batch_norm_impl_index::call (libtorch_cpu.so) (21 samples, 0.33%)</title><rect x="32.3220%" y="404" width="0.3251%" height="15" fill="rgb(217,179,31)" fg:x="2088" fg:w="21"/><text x="32.5720%" y="414.50"></text></g><g><title>c10::impl::wrap_kernel_functor_unboxed_&lt;c10::impl::detail::WrapFunctionIntoFunctor_&lt;c10::CompileTimeFunctionPointer&lt;std::tuple&lt;at::Tensor, at::Tensor, at::Tensor, at::Tensor, long&gt; (at::Tensor const&amp;, std::optional&lt;at::Tensor&gt; const&amp;, std::optional&lt;at::Tensor&gt; const&amp;, std::optional&lt;at::Tensor&gt; const&amp;, std::optional&lt;at::Tensor&gt; const&amp;, bool, double, double, bool), &amp;at::(anonymous namespace)::(anonymous namespace)::wrapper_CompositeImplicitAutograd___batch_norm_impl_index(at::Tensor const&amp;, std::optional&lt;at::Tensor&gt; const&amp;, std::optional&lt;at::Tensor&gt; const&amp;, std::optional&lt;at::Tensor&gt; const&amp;, std::optional&lt;at::Tensor&gt; const&amp;, bool, double, double, bool)&gt;, std::tuple&lt;at::Tensor, at::Tensor, at::Tensor, at::Tensor, long&gt;, c10::guts::typelist::typelist&lt;at::Tensor const&amp;, std::optional&lt;at::Tensor&gt; const&amp;, std::optional&lt;at::Tensor&gt; const&amp;, std::optional&lt;at::Tensor&gt; const&amp;, std::optional&lt;at::Tensor&gt; const&amp;, bool, double, double, bool&gt; &gt;, std::tuple&lt;at::Tensor, at::Tensor, at::Tensor, at::Tensor, long&gt; (at::Tensor const&amp;, std::optional&lt;at::Tensor&gt; const&amp;, std::optional&lt;at::Tensor&gt; const&amp;, std::optional&lt;at::Tensor&gt; const&amp;, std::optional&lt;at::Tensor&gt; const&amp;, bool, double, double, bool)&gt;::call (libtorch_cpu.so) (21 samples, 0.33%)</title><rect x="32.3220%" y="420" width="0.3251%" height="15" fill="rgb(230,9,30)" fg:x="2088" fg:w="21"/><text x="32.5720%" y="430.50"></text></g><g><title>at::native::_batch_norm_impl_index (libtorch_cpu.so) (21 samples, 0.33%)</title><rect x="32.3220%" y="436" width="0.3251%" height="15" fill="rgb(230,136,20)" fg:x="2088" fg:w="21"/><text x="32.5720%" y="446.50"></text></g><g><title>at::_ops::native_batch_norm::call (libtorch_cpu.so) (21 samples, 0.33%)</title><rect x="32.3220%" y="452" width="0.3251%" height="15" fill="rgb(215,210,22)" fg:x="2088" fg:w="21"/><text x="32.5720%" y="462.50"></text></g><g><title>c10::impl::wrap_kernel_functor_unboxed_&lt;c10::impl::detail::WrapFunctionIntoFunctor_&lt;c10::CompileTimeFunctionPointer&lt;std::tuple&lt;at::Tensor, at::Tensor, at::Tensor&gt; (c10::DispatchKeySet, at::Tensor const&amp;, std::optional&lt;at::Tensor&gt; const&amp;, std::optional&lt;at::Tensor&gt; const&amp;, std::optional&lt;at::Tensor&gt; const&amp;, std::optional&lt;at::Tensor&gt; const&amp;, bool, double, double), &amp;torch::autograd::VariableType::(anonymous namespace)::native_batch_norm(c10::DispatchKeySet, at::Tensor const&amp;, std::optional&lt;at::Tensor&gt; const&amp;, std::optional&lt;at::Tensor&gt; const&amp;, std::optional&lt;at::Tensor&gt; const&amp;, std::optional&lt;at::Tensor&gt; const&amp;, bool, double, double)&gt;, std::tuple&lt;at::Tensor, at::Tensor, at::Tensor&gt;, c10::guts::typelist::typelist&lt;c10::DispatchKeySet, at::Tensor const&amp;, std::optional&lt;at::Tensor&gt; const&amp;, std::optional&lt;at::Tensor&gt; const&amp;, std::optional&lt;at::Tensor&gt; const&amp;, std::optional&lt;at::Tensor&gt; const&amp;, bool, double, double&gt; &gt;, std::tuple&lt;at::Tensor, at::Tensor, at::Tensor&gt; (c10::DispatchKeySet, at::Tensor const&amp;, std::optional&lt;at::Tensor&gt; const&amp;, std::optional&lt;at::Tensor&gt; const&amp;, std::optional&lt;at::Tensor&gt; const&amp;, std::optional&lt;at::Tensor&gt; const&amp;, bool, double, double)&gt;::call (libtorch_cpu.so) (21 samples, 0.33%)</title><rect x="32.3220%" y="468" width="0.3251%" height="15" fill="rgb(218,43,5)" fg:x="2088" fg:w="21"/><text x="32.5720%" y="478.50"></text></g><g><title>torch::autograd::VariableType::(anonymous namespace)::native_batch_norm (libtorch_cpu.so) (21 samples, 0.33%)</title><rect x="32.3220%" y="484" width="0.3251%" height="15" fill="rgb(216,11,5)" fg:x="2088" fg:w="21"/><text x="32.5720%" y="494.50"></text></g><g><title>at::_ops::native_batch_norm::redispatch (libtorch_cpu.so) (21 samples, 0.33%)</title><rect x="32.3220%" y="500" width="0.3251%" height="15" fill="rgb(209,82,29)" fg:x="2088" fg:w="21"/><text x="32.5720%" y="510.50"></text></g><g><title>c10::impl::wrap_kernel_functor_unboxed_&lt;c10::impl::detail::WrapFunctionIntoFunctor_&lt;c10::CompileTimeFunctionPointer&lt;std::tuple&lt;at::Tensor, at::Tensor, at::Tensor&gt; (at::Tensor const&amp;, std::optional&lt;at::Tensor&gt; const&amp;, std::optional&lt;at::Tensor&gt; const&amp;, std::optional&lt;at::Tensor&gt; const&amp;, std::optional&lt;at::Tensor&gt; const&amp;, bool, double, double), &amp;at::(anonymous namespace)::(anonymous namespace)::wrapper_CPU__native_batch_norm(at::Tensor const&amp;, std::optional&lt;at::Tensor&gt; const&amp;, std::optional&lt;at::Tensor&gt; const&amp;, std::optional&lt;at::Tensor&gt; const&amp;, std::optional&lt;at::Tensor&gt; const&amp;, bool, double, double)&gt;, std::tuple&lt;at::Tensor, at::Tensor, at::Tensor&gt;, c10::guts::typelist::typelist&lt;at::Tensor const&amp;, std::optional&lt;at::Tensor&gt; const&amp;, std::optional&lt;at::Tensor&gt; const&amp;, std::optional&lt;at::Tensor&gt; const&amp;, std::optional&lt;at::Tensor&gt; const&amp;, bool, double, double&gt; &gt;, std::tuple&lt;at::Tensor, at::Tensor, at::Tensor&gt; (at::Tensor const&amp;, std::optional&lt;at::Tensor&gt; const&amp;, std::optional&lt;at::Tensor&gt; const&amp;, std::optional&lt;at::Tensor&gt; const&amp;, std::optional&lt;at::Tensor&gt; const&amp;, bool, double, double)&gt;::call (libtorch_cpu.so) (21 samples, 0.33%)</title><rect x="32.3220%" y="516" width="0.3251%" height="15" fill="rgb(244,115,12)" fg:x="2088" fg:w="21"/><text x="32.5720%" y="526.50"></text></g><g><title>at::native::batch_norm_cpu (libtorch_cpu.so) (21 samples, 0.33%)</title><rect x="32.3220%" y="532" width="0.3251%" height="15" fill="rgb(222,82,18)" fg:x="2088" fg:w="21"/><text x="32.5720%" y="542.50"></text></g><g><title>at::native::batch_norm_cpu_out (libtorch_cpu.so) (21 samples, 0.33%)</title><rect x="32.3220%" y="548" width="0.3251%" height="15" fill="rgb(249,227,8)" fg:x="2088" fg:w="21"/><text x="32.5720%" y="558.50"></text></g><g><title>at::native::batch_norm_cpu_update_stats_template&lt;float, float, at::native::InvStd&gt; (libtorch_cpu.so) (16 samples, 0.25%)</title><rect x="32.3994%" y="564" width="0.2477%" height="15" fill="rgb(253,141,45)" fg:x="2093" fg:w="16"/><text x="32.6494%" y="574.50"></text></g><g><title>at::native::(anonymous namespace)::batch_norm_cpu_collect_stats_kernel (libtorch_cpu.so) (13 samples, 0.20%)</title><rect x="32.4458%" y="580" width="0.2012%" height="15" fill="rgb(234,184,4)" fg:x="2096" fg:w="13"/><text x="32.6958%" y="590.50"></text></g><g><title>GOMP_parallel (libgomp-c9fef706.so.1) (9 samples, 0.14%)</title><rect x="32.5077%" y="596" width="0.1393%" height="15" fill="rgb(218,194,23)" fg:x="2100" fg:w="9"/><text x="32.7577%" y="606.50"></text></g><g><title>at::internal::invoke_parallel&lt;at::parallel_for&lt;at::native::(anonymous namespace)::batch_norm_cpu_collect_stats_contiguous_impl&lt;float&gt;(at::Tensor&amp;, at::Tensor&amp;, at::Tensor const&amp;)::{lambda(long, long)#1}&gt;(long, long, long, at::native::(anonymous namespace)::batch_norm_cpu_collect_stats_contiguous_impl&lt;float&gt;(at::Tensor&amp;, at::Tensor&amp;, at::Tensor const&amp;)::{lambda(long, long)#1} const&amp;)::{lambda(long, long)#1}&gt; (libtorch_cpu.so) (7 samples, 0.11%)</title><rect x="32.5387%" y="612" width="0.1084%" height="15" fill="rgb(235,66,41)" fg:x="2102" fg:w="7"/><text x="32.7887%" y="622.50"></text></g><g><title>dnnl::primitive::execute (libtorch_cpu.so) (66 samples, 1.02%)</title><rect x="32.7399%" y="692" width="1.0217%" height="15" fill="rgb(245,217,1)" fg:x="2115" fg:w="66"/><text x="32.9899%" y="702.50"></text></g><g><title>dnnl_primitive_execute (libtorch_cpu.so) (66 samples, 1.02%)</title><rect x="32.7399%" y="708" width="1.0217%" height="15" fill="rgb(229,91,1)" fg:x="2115" fg:w="66"/><text x="32.9899%" y="718.50"></text></g><g><title>dnnl::impl::primitive_execute (libtorch_cpu.so) (66 samples, 1.02%)</title><rect x="32.7399%" y="724" width="1.0217%" height="15" fill="rgb(207,101,30)" fg:x="2115" fg:w="66"/><text x="32.9899%" y="734.50"></text></g><g><title>dnnl_primitive::execute (libtorch_cpu.so) (66 samples, 1.02%)</title><rect x="32.7399%" y="740" width="1.0217%" height="15" fill="rgb(223,82,49)" fg:x="2115" fg:w="66"/><text x="32.9899%" y="750.50"></text></g><g><title>dnnl::impl::cpu::x64::jit_avx2_convolution_fwd_t::execute (libtorch_cpu.so) (66 samples, 1.02%)</title><rect x="32.7399%" y="756" width="1.0217%" height="15" fill="rgb(218,167,17)" fg:x="2115" fg:w="66"/><text x="32.9899%" y="766.50"></text></g><g><title>dnnl::impl::cpu::x64::jit_avx2_convolution_fwd_t::execute_forward (libtorch_cpu.so) (66 samples, 1.02%)</title><rect x="32.7399%" y="772" width="1.0217%" height="15" fill="rgb(208,103,14)" fg:x="2115" fg:w="66"/><text x="32.9899%" y="782.50"></text></g><g><title>GOMP_parallel (libgomp-c9fef706.so.1) (65 samples, 1.01%)</title><rect x="32.7554%" y="788" width="1.0062%" height="15" fill="rgb(238,20,8)" fg:x="2116" fg:w="65"/><text x="33.0054%" y="798.50"></text></g><g><title>dnnl::impl::parallel (libtorch_cpu.so) (62 samples, 0.96%)</title><rect x="32.8019%" y="804" width="0.9598%" height="15" fill="rgb(218,80,54)" fg:x="2119" fg:w="62"/><text x="33.0519%" y="814.50"></text></g><g><title>dnnl::impl::cpu::x64::jit_avx2_convolution_fwd_t::execute_forward(dnnl::impl::exec_ctx_t const&amp;) const::{lambda(int, int)#1}::operator() const (libtorch_cpu.so) (62 samples, 0.96%)</title><rect x="32.8019%" y="820" width="0.9598%" height="15" fill="rgb(240,144,17)" fg:x="2119" fg:w="62"/><text x="33.0519%" y="830.50"></text></g><g><title>dnnl::impl::cpu::x64::jit_blk_reorder_t::execute (libtorch_cpu.so) (9 samples, 0.14%)</title><rect x="33.7616%" y="788" width="0.1393%" height="15" fill="rgb(245,27,50)" fg:x="2181" fg:w="9"/><text x="34.0116%" y="798.50"></text></g><g><title>at::native::_mkldnn_convolution_out (libtorch_cpu.so) (79 samples, 1.22%)</title><rect x="32.7399%" y="660" width="1.2229%" height="15" fill="rgb(251,51,7)" fg:x="2115" fg:w="79"/><text x="32.9899%" y="670.50"></text></g><g><title>ideep::convolution_forward::compute_dispatch&lt;false, true, true&gt; (libtorch_cpu.so) (79 samples, 1.22%)</title><rect x="32.7399%" y="676" width="1.2229%" height="15" fill="rgb(245,217,29)" fg:x="2115" fg:w="79"/><text x="32.9899%" y="686.50"></text></g><g><title>ideep::tensor::reorder_if_differ_in (libtorch_cpu.so) (13 samples, 0.20%)</title><rect x="33.7616%" y="692" width="0.2012%" height="15" fill="rgb(221,176,29)" fg:x="2181" fg:w="13"/><text x="34.0116%" y="702.50"></text></g><g><title>ideep::tensor::reorder_to (libtorch_cpu.so) (13 samples, 0.20%)</title><rect x="33.7616%" y="708" width="0.2012%" height="15" fill="rgb(212,180,24)" fg:x="2181" fg:w="13"/><text x="34.0116%" y="718.50"></text></g><g><title>dnnl::primitive::execute (libtorch_cpu.so) (13 samples, 0.20%)</title><rect x="33.7616%" y="724" width="0.2012%" height="15" fill="rgb(254,24,2)" fg:x="2181" fg:w="13"/><text x="34.0116%" y="734.50"></text></g><g><title>dnnl_primitive_execute (libtorch_cpu.so) (13 samples, 0.20%)</title><rect x="33.7616%" y="740" width="0.2012%" height="15" fill="rgb(230,100,2)" fg:x="2181" fg:w="13"/><text x="34.0116%" y="750.50"></text></g><g><title>dnnl::impl::primitive_execute (libtorch_cpu.so) (13 samples, 0.20%)</title><rect x="33.7616%" y="756" width="0.2012%" height="15" fill="rgb(219,142,25)" fg:x="2181" fg:w="13"/><text x="34.0116%" y="766.50"></text></g><g><title>dnnl_primitive::execute (libtorch_cpu.so) (13 samples, 0.20%)</title><rect x="33.7616%" y="772" width="0.2012%" height="15" fill="rgb(240,73,43)" fg:x="2181" fg:w="13"/><text x="34.0116%" y="782.50"></text></g><g><title>forward (torchvision/models/resnet.py:96) (85 samples, 1.32%)</title><rect x="32.7399%" y="260" width="1.3158%" height="15" fill="rgb(214,114,15)" fg:x="2115" fg:w="85"/><text x="32.9899%" y="270.50"></text></g><g><title>_wrapped_call_impl (torch/nn/modules/module.py:1751) (85 samples, 1.32%)</title><rect x="32.7399%" y="276" width="1.3158%" height="15" fill="rgb(207,130,4)" fg:x="2115" fg:w="85"/><text x="32.9899%" y="286.50"></text></g><g><title>_call_impl (torch/nn/modules/module.py:1762) (85 samples, 1.32%)</title><rect x="32.7399%" y="292" width="1.3158%" height="15" fill="rgb(221,25,40)" fg:x="2115" fg:w="85"/><text x="32.9899%" y="302.50"></text></g><g><title>forward (torch/nn/modules/conv.py:554) (85 samples, 1.32%)</title><rect x="32.7399%" y="308" width="1.3158%" height="15" fill="rgb(241,184,7)" fg:x="2115" fg:w="85"/><text x="32.9899%" y="318.50"></text></g><g><title>_conv_forward (torch/nn/modules/conv.py:550) (85 samples, 1.32%)</title><rect x="32.7399%" y="324" width="1.3158%" height="15" fill="rgb(235,159,4)" fg:x="2115" fg:w="85"/><text x="32.9899%" y="334.50"></text></g><g><title>torch::autograd::THPVariable_conv2d (libtorch_python.so) (85 samples, 1.32%)</title><rect x="32.7399%" y="340" width="1.3158%" height="15" fill="rgb(214,87,48)" fg:x="2115" fg:w="85"/><text x="32.9899%" y="350.50"></text></g><g><title>at::_ops::conv2d::call (libtorch_cpu.so) (85 samples, 1.32%)</title><rect x="32.7399%" y="356" width="1.3158%" height="15" fill="rgb(246,198,24)" fg:x="2115" fg:w="85"/><text x="32.9899%" y="366.50"></text></g><g><title>c10::impl::wrap_kernel_functor_unboxed_&lt;c10::impl::detail::WrapFunctionIntoFunctor_&lt;c10::CompileTimeFunctionPointer&lt;at::Tensor(at::Tensor const&amp;, at::Tensor const&amp;, std::optional&lt;at::Tensor&gt; const&amp;, c10::ArrayRef&lt;c10::SymInt&gt;, c10::ArrayRef&lt;c10::SymInt&gt;, c10::ArrayRef&lt;c10::SymInt&gt;, c10::SymInt), &amp;at::(anonymous namespace)::(anonymous namespace)::wrapper_CompositeImplicitAutograd__conv2d(at::Tensor const&amp;, at::Tensor const&amp;, std::optional&lt;at::Tensor&gt; const&amp;, c10::ArrayRef&lt;c10::SymInt&gt;, c10::ArrayRef&lt;c10::SymInt&gt;, c10::ArrayRef&lt;c10::SymInt&gt;, c10::SymInt)&gt;, at::Tensor, c10::guts::typelist::typelist&lt;at::Tensor const&amp;, at::Tensor const&amp;, std::optional&lt;at::Tensor&gt; const&amp;, c10::ArrayRef&lt;c10::SymInt&gt;, c10::ArrayRef&lt;c10::SymInt&gt;, c10::ArrayRef&lt;c10::SymInt&gt;, c10::SymInt&gt; &gt;, at::Tensor(at::Tensor const&amp;, at::Tensor const&amp;, std::optional&lt;at::Tensor&gt; const&amp;, c10::ArrayRef&lt;c10::SymInt&gt;, c10::ArrayRef&lt;c10::SymInt&gt;, c10::ArrayRef&lt;c10::SymInt&gt;, c10::SymInt)&gt;::call (libtorch_cpu.so) (85 samples, 1.32%)</title><rect x="32.7399%" y="372" width="1.3158%" height="15" fill="rgb(209,66,40)" fg:x="2115" fg:w="85"/><text x="32.9899%" y="382.50"></text></g><g><title>at::native::conv2d_symint (libtorch_cpu.so) (85 samples, 1.32%)</title><rect x="32.7399%" y="388" width="1.3158%" height="15" fill="rgb(233,147,39)" fg:x="2115" fg:w="85"/><text x="32.9899%" y="398.50"></text></g><g><title>at::_ops::convolution::call (libtorch_cpu.so) (85 samples, 1.32%)</title><rect x="32.7399%" y="404" width="1.3158%" height="15" fill="rgb(231,145,52)" fg:x="2115" fg:w="85"/><text x="32.9899%" y="414.50"></text></g><g><title>c10::impl::wrap_kernel_functor_unboxed_&lt;c10::impl::detail::WrapFunctionIntoFunctor_&lt;c10::CompileTimeFunctionPointer&lt;at::Tensor(c10::DispatchKeySet, at::Tensor const&amp;, at::Tensor const&amp;, std::optional&lt;at::Tensor&gt; const&amp;, c10::ArrayRef&lt;c10::SymInt&gt;, c10::ArrayRef&lt;c10::SymInt&gt;, c10::ArrayRef&lt;c10::SymInt&gt;, bool, c10::ArrayRef&lt;c10::SymInt&gt;, c10::SymInt), &amp;torch::autograd::VariableType::(anonymous namespace)::convolution(c10::DispatchKeySet, at::Tensor const&amp;, at::Tensor const&amp;, std::optional&lt;at::Tensor&gt; const&amp;, c10::ArrayRef&lt;c10::SymInt&gt;, c10::ArrayRef&lt;c10::SymInt&gt;, c10::ArrayRef&lt;c10::SymInt&gt;, bool, c10::ArrayRef&lt;c10::SymInt&gt;, c10::SymInt)&gt;, at::Tensor, c10::guts::typelist::typelist&lt;c10::DispatchKeySet, at::Tensor const&amp;, at::Tensor const&amp;, std::optional&lt;at::Tensor&gt; const&amp;, c10::ArrayRef&lt;c10::SymInt&gt;, c10::ArrayRef&lt;c10::SymInt&gt;, c10::ArrayRef&lt;c10::SymInt&gt;, bool, c10::ArrayRef&lt;c10::SymInt&gt;, c10::SymInt&gt; &gt;, at::Tensor(c10::DispatchKeySet, at::Tensor const&amp;, at::Tensor const&amp;, std::optional&lt;at::Tensor&gt; const&amp;, c10::ArrayRef&lt;c10::SymInt&gt;, c10::ArrayRef&lt;c10::SymInt&gt;, c10::ArrayRef&lt;c10::SymInt&gt;, bool, c10::ArrayRef&lt;c10::SymInt&gt;, c10::SymInt)&gt;::call (libtorch_cpu.so) (85 samples, 1.32%)</title><rect x="32.7399%" y="420" width="1.3158%" height="15" fill="rgb(206,20,26)" fg:x="2115" fg:w="85"/><text x="32.9899%" y="430.50"></text></g><g><title>torch::autograd::VariableType::(anonymous namespace)::convolution (libtorch_cpu.so) (85 samples, 1.32%)</title><rect x="32.7399%" y="436" width="1.3158%" height="15" fill="rgb(238,220,4)" fg:x="2115" fg:w="85"/><text x="32.9899%" y="446.50"></text></g><g><title>at::_ops::convolution::redispatch (libtorch_cpu.so) (85 samples, 1.32%)</title><rect x="32.7399%" y="452" width="1.3158%" height="15" fill="rgb(252,195,42)" fg:x="2115" fg:w="85"/><text x="32.9899%" y="462.50"></text></g><g><title>c10::impl::wrap_kernel_functor_unboxed_&lt;c10::impl::detail::WrapFunctionIntoFunctor_&lt;c10::CompileTimeFunctionPointer&lt;at::Tensor(at::Tensor const&amp;, at::Tensor const&amp;, std::optional&lt;at::Tensor&gt; const&amp;, c10::ArrayRef&lt;c10::SymInt&gt;, c10::ArrayRef&lt;c10::SymInt&gt;, c10::ArrayRef&lt;c10::SymInt&gt;, bool, c10::ArrayRef&lt;c10::SymInt&gt;, c10::SymInt), &amp;at::(anonymous namespace)::(anonymous namespace)::wrapper_CompositeExplicitAutograd__convolution(at::Tensor const&amp;, at::Tensor const&amp;, std::optional&lt;at::Tensor&gt; const&amp;, c10::ArrayRef&lt;c10::SymInt&gt;, c10::ArrayRef&lt;c10::SymInt&gt;, c10::ArrayRef&lt;c10::SymInt&gt;, bool, c10::ArrayRef&lt;c10::SymInt&gt;, c10::SymInt)&gt;, at::Tensor, c10::guts::typelist::typelist&lt;at::Tensor const&amp;, at::Tensor const&amp;, std::optional&lt;at::Tensor&gt; const&amp;, c10::ArrayRef&lt;c10::SymInt&gt;, c10::ArrayRef&lt;c10::SymInt&gt;, c10::ArrayRef&lt;c10::SymInt&gt;, bool, c10::ArrayRef&lt;c10::SymInt&gt;, c10::SymInt&gt; &gt;, at::Tensor(at::Tensor const&amp;, at::Tensor const&amp;, std::optional&lt;at::Tensor&gt; const&amp;, c10::ArrayRef&lt;c10::SymInt&gt;, c10::ArrayRef&lt;c10::SymInt&gt;, c10::ArrayRef&lt;c10::SymInt&gt;, bool, c10::ArrayRef&lt;c10::SymInt&gt;, c10::SymInt)&gt;::call (libtorch_cpu.so) (85 samples, 1.32%)</title><rect x="32.7399%" y="468" width="1.3158%" height="15" fill="rgb(209,10,6)" fg:x="2115" fg:w="85"/><text x="32.9899%" y="478.50"></text></g><g><title>at::(anonymous namespace)::(anonymous namespace)::wrapper_CompositeExplicitAutograd__convolution (libtorch_cpu.so) (85 samples, 1.32%)</title><rect x="32.7399%" y="484" width="1.3158%" height="15" fill="rgb(229,3,52)" fg:x="2115" fg:w="85"/><text x="32.9899%" y="494.50"></text></g><g><title>at::native::convolution (libtorch_cpu.so) (85 samples, 1.32%)</title><rect x="32.7399%" y="500" width="1.3158%" height="15" fill="rgb(253,49,37)" fg:x="2115" fg:w="85"/><text x="32.9899%" y="510.50"></text></g><g><title>at::_ops::_convolution::call (libtorch_cpu.so) (85 samples, 1.32%)</title><rect x="32.7399%" y="516" width="1.3158%" height="15" fill="rgb(240,103,49)" fg:x="2115" fg:w="85"/><text x="32.9899%" y="526.50"></text></g><g><title>c10::impl::wrap_kernel_functor_unboxed_&lt;c10::impl::detail::WrapFunctionIntoFunctor_&lt;c10::CompileTimeFunctionPointer&lt;at::Tensor(at::Tensor const&amp;, at::Tensor const&amp;, std::optional&lt;at::Tensor&gt; const&amp;, c10::ArrayRef&lt;c10::SymInt&gt;, c10::ArrayRef&lt;c10::SymInt&gt;, c10::ArrayRef&lt;c10::SymInt&gt;, bool, c10::ArrayRef&lt;c10::SymInt&gt;, c10::SymInt, bool, bool, bool, bool), &amp;at::(anonymous namespace)::(anonymous namespace)::wrapper_CompositeExplicitAutograd___convolution(at::Tensor const&amp;, at::Tensor const&amp;, std::optional&lt;at::Tensor&gt; const&amp;, c10::ArrayRef&lt;c10::SymInt&gt;, c10::ArrayRef&lt;c10::SymInt&gt;, c10::ArrayRef&lt;c10::SymInt&gt;, bool, c10::ArrayRef&lt;c10::SymInt&gt;, c10::SymInt, bool, bool, bool, bool)&gt;, at::Tensor, c10::guts::typelist::typelist&lt;at::Tensor const&amp;, at::Tensor const&amp;, std::optional&lt;at::Tensor&gt; const&amp;, c10::ArrayRef&lt;c10::SymInt&gt;, c10::ArrayRef&lt;c10::SymInt&gt;, c10::ArrayRef&lt;c10::SymInt&gt;, bool, c10::ArrayRef&lt;c10::SymInt&gt;, c10::SymInt, bool, bool, bool, bool&gt; &gt;, at::Tensor(at::Tensor const&amp;, at::Tensor const&amp;, std::optional&lt;at::Tensor&gt; const&amp;, c10::ArrayRef&lt;c10::SymInt&gt;, c10::ArrayRef&lt;c10::SymInt&gt;, c10::ArrayRef&lt;c10::SymInt&gt;, bool, c10::ArrayRef&lt;c10::SymInt&gt;, c10::SymInt, bool, bool, bool, bool)&gt;::call (libtorch_cpu.so) (85 samples, 1.32%)</title><rect x="32.7399%" y="532" width="1.3158%" height="15" fill="rgb(250,182,30)" fg:x="2115" fg:w="85"/><text x="32.9899%" y="542.50"></text></g><g><title>at::(anonymous namespace)::(anonymous namespace)::wrapper_CompositeExplicitAutograd___convolution (libtorch_cpu.so) (85 samples, 1.32%)</title><rect x="32.7399%" y="548" width="1.3158%" height="15" fill="rgb(248,8,30)" fg:x="2115" fg:w="85"/><text x="32.9899%" y="558.50"></text></g><g><title>at::native::_convolution (libtorch_cpu.so) (85 samples, 1.32%)</title><rect x="32.7399%" y="564" width="1.3158%" height="15" fill="rgb(237,120,30)" fg:x="2115" fg:w="85"/><text x="32.9899%" y="574.50"></text></g><g><title>at::_ops::mkldnn_convolution::call (libtorch_cpu.so) (85 samples, 1.32%)</title><rect x="32.7399%" y="580" width="1.3158%" height="15" fill="rgb(221,146,34)" fg:x="2115" fg:w="85"/><text x="32.9899%" y="590.50"></text></g><g><title>c10::impl::wrap_kernel_functor_unboxed_&lt;c10::impl::detail::WrapFunctionIntoFunctor_&lt;c10::CompileTimeFunctionPointer&lt;at::Tensor(at::Tensor const&amp;, at::Tensor const&amp;, std::optional&lt;at::Tensor&gt; const&amp;, c10::ArrayRef&lt;c10::SymInt&gt;, c10::ArrayRef&lt;c10::SymInt&gt;, c10::ArrayRef&lt;c10::SymInt&gt;, c10::SymInt), &amp;at::(anonymous namespace)::(anonymous namespace)::wrapper_CompositeExplicitAutograd__mkldnn_convolution(at::Tensor const&amp;, at::Tensor const&amp;, std::optional&lt;at::Tensor&gt; const&amp;, c10::ArrayRef&lt;c10::SymInt&gt;, c10::ArrayRef&lt;c10::SymInt&gt;, c10::ArrayRef&lt;c10::SymInt&gt;, c10::SymInt)&gt;, at::Tensor, c10::guts::typelist::typelist&lt;at::Tensor const&amp;, at::Tensor const&amp;, std::optional&lt;at::Tensor&gt; const&amp;, c10::ArrayRef&lt;c10::SymInt&gt;, c10::ArrayRef&lt;c10::SymInt&gt;, c10::ArrayRef&lt;c10::SymInt&gt;, c10::SymInt&gt; &gt;, at::Tensor(at::Tensor const&amp;, at::Tensor const&amp;, std::optional&lt;at::Tensor&gt; const&amp;, c10::ArrayRef&lt;c10::SymInt&gt;, c10::ArrayRef&lt;c10::SymInt&gt;, c10::ArrayRef&lt;c10::SymInt&gt;, c10::SymInt)&gt;::call (libtorch_cpu.so) (85 samples, 1.32%)</title><rect x="32.7399%" y="596" width="1.3158%" height="15" fill="rgb(242,55,13)" fg:x="2115" fg:w="85"/><text x="32.9899%" y="606.50"></text></g><g><title>at::(anonymous namespace)::(anonymous namespace)::wrapper_CompositeExplicitAutograd__mkldnn_convolution (libtorch_cpu.so) (85 samples, 1.32%)</title><rect x="32.7399%" y="612" width="1.3158%" height="15" fill="rgb(242,112,31)" fg:x="2115" fg:w="85"/><text x="32.9899%" y="622.50"></text></g><g><title>at::native::mkldnn_convolution (libtorch_cpu.so) (85 samples, 1.32%)</title><rect x="32.7399%" y="628" width="1.3158%" height="15" fill="rgb(249,192,27)" fg:x="2115" fg:w="85"/><text x="32.9899%" y="638.50"></text></g><g><title>at::native::_mkldnn_convolution (libtorch_cpu.so) (85 samples, 1.32%)</title><rect x="32.7399%" y="644" width="1.3158%" height="15" fill="rgb(208,204,44)" fg:x="2115" fg:w="85"/><text x="32.9899%" y="654.50"></text></g><g><title>at::native::batch_norm_cpu_transform_input_template&lt;float, float&gt; (libtorch_cpu.so) (10 samples, 0.15%)</title><rect x="34.0557%" y="564" width="0.1548%" height="15" fill="rgb(208,93,54)" fg:x="2200" fg:w="10"/><text x="34.3057%" y="574.50"></text></g><g><title>at::native::(anonymous namespace)::batch_norm_cpu_kernel (libtorch_cpu.so) (10 samples, 0.15%)</title><rect x="34.0557%" y="580" width="0.1548%" height="15" fill="rgb(242,1,31)" fg:x="2200" fg:w="10"/><text x="34.3057%" y="590.50"></text></g><g><title>_forward_impl (torchvision/models/resnet.py:275) (287 samples, 4.44%)</title><rect x="29.9845%" y="164" width="4.4427%" height="15" fill="rgb(241,83,25)" fg:x="1937" fg:w="287"/><text x="30.2345%" y="174.50">_forw..</text></g><g><title>_wrapped_call_impl (torch/nn/modules/module.py:1751) (287 samples, 4.44%)</title><rect x="29.9845%" y="180" width="4.4427%" height="15" fill="rgb(205,169,50)" fg:x="1937" fg:w="287"/><text x="30.2345%" y="190.50">_wrap..</text></g><g><title>_call_impl (torch/nn/modules/module.py:1762) (287 samples, 4.44%)</title><rect x="29.9845%" y="196" width="4.4427%" height="15" fill="rgb(239,186,37)" fg:x="1937" fg:w="287"/><text x="30.2345%" y="206.50">_call..</text></g><g><title>forward (torch/nn/modules/container.py:240) (287 samples, 4.44%)</title><rect x="29.9845%" y="212" width="4.4427%" height="15" fill="rgb(205,221,10)" fg:x="1937" fg:w="287"/><text x="30.2345%" y="222.50">forwa..</text></g><g><title>_wrapped_call_impl (torch/nn/modules/module.py:1751) (287 samples, 4.44%)</title><rect x="29.9845%" y="228" width="4.4427%" height="15" fill="rgb(218,196,15)" fg:x="1937" fg:w="287"/><text x="30.2345%" y="238.50">_wrap..</text></g><g><title>_call_impl (torch/nn/modules/module.py:1762) (287 samples, 4.44%)</title><rect x="29.9845%" y="244" width="4.4427%" height="15" fill="rgb(218,196,35)" fg:x="1937" fg:w="287"/><text x="30.2345%" y="254.50">_call..</text></g><g><title>forward (torchvision/models/resnet.py:97) (24 samples, 0.37%)</title><rect x="34.0557%" y="260" width="0.3715%" height="15" fill="rgb(233,63,24)" fg:x="2200" fg:w="24"/><text x="34.3057%" y="270.50"></text></g><g><title>_wrapped_call_impl (torch/nn/modules/module.py:1751) (24 samples, 0.37%)</title><rect x="34.0557%" y="276" width="0.3715%" height="15" fill="rgb(225,8,4)" fg:x="2200" fg:w="24"/><text x="34.3057%" y="286.50"></text></g><g><title>_call_impl (torch/nn/modules/module.py:1762) (24 samples, 0.37%)</title><rect x="34.0557%" y="292" width="0.3715%" height="15" fill="rgb(234,105,35)" fg:x="2200" fg:w="24"/><text x="34.3057%" y="302.50"></text></g><g><title>forward (torch/nn/modules/batchnorm.py:193) (24 samples, 0.37%)</title><rect x="34.0557%" y="308" width="0.3715%" height="15" fill="rgb(236,21,32)" fg:x="2200" fg:w="24"/><text x="34.3057%" y="318.50"></text></g><g><title>batch_norm (torch/nn/functional.py:2831) (24 samples, 0.37%)</title><rect x="34.0557%" y="324" width="0.3715%" height="15" fill="rgb(228,109,6)" fg:x="2200" fg:w="24"/><text x="34.3057%" y="334.50"></text></g><g><title>torch::autograd::THPVariable_batch_norm (libtorch_python.so) (24 samples, 0.37%)</title><rect x="34.0557%" y="340" width="0.3715%" height="15" fill="rgb(229,215,31)" fg:x="2200" fg:w="24"/><text x="34.3057%" y="350.50"></text></g><g><title>at::_ops::batch_norm::call (libtorch_cpu.so) (24 samples, 0.37%)</title><rect x="34.0557%" y="356" width="0.3715%" height="15" fill="rgb(221,52,54)" fg:x="2200" fg:w="24"/><text x="34.3057%" y="366.50"></text></g><g><title>c10::impl::wrap_kernel_functor_unboxed_&lt;c10::impl::detail::WrapFunctionIntoFunctor_&lt;c10::CompileTimeFunctionPointer&lt;at::Tensor(at::Tensor const&amp;, std::optional&lt;at::Tensor&gt; const&amp;, std::optional&lt;at::Tensor&gt; const&amp;, std::optional&lt;at::Tensor&gt; const&amp;, std::optional&lt;at::Tensor&gt; const&amp;, bool, double, double, bool), &amp;at::(anonymous namespace)::(anonymous namespace)::wrapper_CompositeImplicitAutograd__batch_norm(at::Tensor const&amp;, std::optional&lt;at::Tensor&gt; const&amp;, std::optional&lt;at::Tensor&gt; const&amp;, std::optional&lt;at::Tensor&gt; const&amp;, std::optional&lt;at::Tensor&gt; const&amp;, bool, double, double, bool)&gt;, at::Tensor, c10::guts::typelist::typelist&lt;at::Tensor const&amp;, std::optional&lt;at::Tensor&gt; const&amp;, std::optional&lt;at::Tensor&gt; const&amp;, std::optional&lt;at::Tensor&gt; const&amp;, std::optional&lt;at::Tensor&gt; const&amp;, bool, double, double, bool&gt; &gt;, at::Tensor(at::Tensor const&amp;, std::optional&lt;at::Tensor&gt; const&amp;, std::optional&lt;at::Tensor&gt; const&amp;, std::optional&lt;at::Tensor&gt; const&amp;, std::optional&lt;at::Tensor&gt; const&amp;, bool, double, double, bool)&gt;::call (libtorch_cpu.so) (24 samples, 0.37%)</title><rect x="34.0557%" y="372" width="0.3715%" height="15" fill="rgb(252,129,43)" fg:x="2200" fg:w="24"/><text x="34.3057%" y="382.50"></text></g><g><title>at::native::batch_norm (libtorch_cpu.so) (24 samples, 0.37%)</title><rect x="34.0557%" y="388" width="0.3715%" height="15" fill="rgb(248,183,27)" fg:x="2200" fg:w="24"/><text x="34.3057%" y="398.50"></text></g><g><title>at::_ops::_batch_norm_impl_index::call (libtorch_cpu.so) (24 samples, 0.37%)</title><rect x="34.0557%" y="404" width="0.3715%" height="15" fill="rgb(250,0,22)" fg:x="2200" fg:w="24"/><text x="34.3057%" y="414.50"></text></g><g><title>c10::impl::wrap_kernel_functor_unboxed_&lt;c10::impl::detail::WrapFunctionIntoFunctor_&lt;c10::CompileTimeFunctionPointer&lt;std::tuple&lt;at::Tensor, at::Tensor, at::Tensor, at::Tensor, long&gt; (at::Tensor const&amp;, std::optional&lt;at::Tensor&gt; const&amp;, std::optional&lt;at::Tensor&gt; const&amp;, std::optional&lt;at::Tensor&gt; const&amp;, std::optional&lt;at::Tensor&gt; const&amp;, bool, double, double, bool), &amp;at::(anonymous namespace)::(anonymous namespace)::wrapper_CompositeImplicitAutograd___batch_norm_impl_index(at::Tensor const&amp;, std::optional&lt;at::Tensor&gt; const&amp;, std::optional&lt;at::Tensor&gt; const&amp;, std::optional&lt;at::Tensor&gt; const&amp;, std::optional&lt;at::Tensor&gt; const&amp;, bool, double, double, bool)&gt;, std::tuple&lt;at::Tensor, at::Tensor, at::Tensor, at::Tensor, long&gt;, c10::guts::typelist::typelist&lt;at::Tensor const&amp;, std::optional&lt;at::Tensor&gt; const&amp;, std::optional&lt;at::Tensor&gt; const&amp;, std::optional&lt;at::Tensor&gt; const&amp;, std::optional&lt;at::Tensor&gt; const&amp;, bool, double, double, bool&gt; &gt;, std::tuple&lt;at::Tensor, at::Tensor, at::Tensor, at::Tensor, long&gt; (at::Tensor const&amp;, std::optional&lt;at::Tensor&gt; const&amp;, std::optional&lt;at::Tensor&gt; const&amp;, std::optional&lt;at::Tensor&gt; const&amp;, std::optional&lt;at::Tensor&gt; const&amp;, bool, double, double, bool)&gt;::call (libtorch_cpu.so) (24 samples, 0.37%)</title><rect x="34.0557%" y="420" width="0.3715%" height="15" fill="rgb(213,166,10)" fg:x="2200" fg:w="24"/><text x="34.3057%" y="430.50"></text></g><g><title>at::native::_batch_norm_impl_index (libtorch_cpu.so) (24 samples, 0.37%)</title><rect x="34.0557%" y="436" width="0.3715%" height="15" fill="rgb(207,163,36)" fg:x="2200" fg:w="24"/><text x="34.3057%" y="446.50"></text></g><g><title>at::_ops::native_batch_norm::call (libtorch_cpu.so) (24 samples, 0.37%)</title><rect x="34.0557%" y="452" width="0.3715%" height="15" fill="rgb(208,122,22)" fg:x="2200" fg:w="24"/><text x="34.3057%" y="462.50"></text></g><g><title>c10::impl::wrap_kernel_functor_unboxed_&lt;c10::impl::detail::WrapFunctionIntoFunctor_&lt;c10::CompileTimeFunctionPointer&lt;std::tuple&lt;at::Tensor, at::Tensor, at::Tensor&gt; (c10::DispatchKeySet, at::Tensor const&amp;, std::optional&lt;at::Tensor&gt; const&amp;, std::optional&lt;at::Tensor&gt; const&amp;, std::optional&lt;at::Tensor&gt; const&amp;, std::optional&lt;at::Tensor&gt; const&amp;, bool, double, double), &amp;torch::autograd::VariableType::(anonymous namespace)::native_batch_norm(c10::DispatchKeySet, at::Tensor const&amp;, std::optional&lt;at::Tensor&gt; const&amp;, std::optional&lt;at::Tensor&gt; const&amp;, std::optional&lt;at::Tensor&gt; const&amp;, std::optional&lt;at::Tensor&gt; const&amp;, bool, double, double)&gt;, std::tuple&lt;at::Tensor, at::Tensor, at::Tensor&gt;, c10::guts::typelist::typelist&lt;c10::DispatchKeySet, at::Tensor const&amp;, std::optional&lt;at::Tensor&gt; const&amp;, std::optional&lt;at::Tensor&gt; const&amp;, std::optional&lt;at::Tensor&gt; const&amp;, std::optional&lt;at::Tensor&gt; const&amp;, bool, double, double&gt; &gt;, std::tuple&lt;at::Tensor, at::Tensor, at::Tensor&gt; (c10::DispatchKeySet, at::Tensor const&amp;, std::optional&lt;at::Tensor&gt; const&amp;, std::optional&lt;at::Tensor&gt; const&amp;, std::optional&lt;at::Tensor&gt; const&amp;, std::optional&lt;at::Tensor&gt; const&amp;, bool, double, double)&gt;::call (libtorch_cpu.so) (24 samples, 0.37%)</title><rect x="34.0557%" y="468" width="0.3715%" height="15" fill="rgb(207,104,49)" fg:x="2200" fg:w="24"/><text x="34.3057%" y="478.50"></text></g><g><title>torch::autograd::VariableType::(anonymous namespace)::native_batch_norm (libtorch_cpu.so) (24 samples, 0.37%)</title><rect x="34.0557%" y="484" width="0.3715%" height="15" fill="rgb(248,211,50)" fg:x="2200" fg:w="24"/><text x="34.3057%" y="494.50"></text></g><g><title>at::_ops::native_batch_norm::redispatch (libtorch_cpu.so) (24 samples, 0.37%)</title><rect x="34.0557%" y="500" width="0.3715%" height="15" fill="rgb(217,13,45)" fg:x="2200" fg:w="24"/><text x="34.3057%" y="510.50"></text></g><g><title>c10::impl::wrap_kernel_functor_unboxed_&lt;c10::impl::detail::WrapFunctionIntoFunctor_&lt;c10::CompileTimeFunctionPointer&lt;std::tuple&lt;at::Tensor, at::Tensor, at::Tensor&gt; (at::Tensor const&amp;, std::optional&lt;at::Tensor&gt; const&amp;, std::optional&lt;at::Tensor&gt; const&amp;, std::optional&lt;at::Tensor&gt; const&amp;, std::optional&lt;at::Tensor&gt; const&amp;, bool, double, double), &amp;at::(anonymous namespace)::(anonymous namespace)::wrapper_CPU__native_batch_norm(at::Tensor const&amp;, std::optional&lt;at::Tensor&gt; const&amp;, std::optional&lt;at::Tensor&gt; const&amp;, std::optional&lt;at::Tensor&gt; const&amp;, std::optional&lt;at::Tensor&gt; const&amp;, bool, double, double)&gt;, std::tuple&lt;at::Tensor, at::Tensor, at::Tensor&gt;, c10::guts::typelist::typelist&lt;at::Tensor const&amp;, std::optional&lt;at::Tensor&gt; const&amp;, std::optional&lt;at::Tensor&gt; const&amp;, std::optional&lt;at::Tensor&gt; const&amp;, std::optional&lt;at::Tensor&gt; const&amp;, bool, double, double&gt; &gt;, std::tuple&lt;at::Tensor, at::Tensor, at::Tensor&gt; (at::Tensor const&amp;, std::optional&lt;at::Tensor&gt; const&amp;, std::optional&lt;at::Tensor&gt; const&amp;, std::optional&lt;at::Tensor&gt; const&amp;, std::optional&lt;at::Tensor&gt; const&amp;, bool, double, double)&gt;::call (libtorch_cpu.so) (24 samples, 0.37%)</title><rect x="34.0557%" y="516" width="0.3715%" height="15" fill="rgb(211,216,49)" fg:x="2200" fg:w="24"/><text x="34.3057%" y="526.50"></text></g><g><title>at::native::batch_norm_cpu (libtorch_cpu.so) (24 samples, 0.37%)</title><rect x="34.0557%" y="532" width="0.3715%" height="15" fill="rgb(221,58,53)" fg:x="2200" fg:w="24"/><text x="34.3057%" y="542.50"></text></g><g><title>at::native::batch_norm_cpu_out (libtorch_cpu.so) (24 samples, 0.37%)</title><rect x="34.0557%" y="548" width="0.3715%" height="15" fill="rgb(220,112,41)" fg:x="2200" fg:w="24"/><text x="34.3057%" y="558.50"></text></g><g><title>at::native::batch_norm_cpu_update_stats_template&lt;float, float, at::native::InvStd&gt; (libtorch_cpu.so) (14 samples, 0.22%)</title><rect x="34.2105%" y="564" width="0.2167%" height="15" fill="rgb(236,38,28)" fg:x="2210" fg:w="14"/><text x="34.4605%" y="574.50"></text></g><g><title>at::native::(anonymous namespace)::batch_norm_cpu_collect_stats_kernel (libtorch_cpu.so) (8 samples, 0.12%)</title><rect x="34.3034%" y="580" width="0.1238%" height="15" fill="rgb(227,195,22)" fg:x="2216" fg:w="8"/><text x="34.5534%" y="590.50"></text></g><g><title>GOMP_parallel (libgomp-c9fef706.so.1) (8 samples, 0.12%)</title><rect x="34.3034%" y="596" width="0.1238%" height="15" fill="rgb(214,55,33)" fg:x="2216" fg:w="8"/><text x="34.5534%" y="606.50"></text></g><g><title>forward (torch/nn/modules/batchnorm.py:193) (10 samples, 0.15%)</title><rect x="34.4427%" y="356" width="0.1548%" height="15" fill="rgb(248,80,13)" fg:x="2225" fg:w="10"/><text x="34.6927%" y="366.50"></text></g><g><title>batch_norm (torch/nn/functional.py:2831) (10 samples, 0.15%)</title><rect x="34.4427%" y="372" width="0.1548%" height="15" fill="rgb(238,52,6)" fg:x="2225" fg:w="10"/><text x="34.6927%" y="382.50"></text></g><g><title>torch::autograd::THPVariable_batch_norm (libtorch_python.so) (10 samples, 0.15%)</title><rect x="34.4427%" y="388" width="0.1548%" height="15" fill="rgb(224,198,47)" fg:x="2225" fg:w="10"/><text x="34.6927%" y="398.50"></text></g><g><title>at::_ops::batch_norm::call (libtorch_cpu.so) (10 samples, 0.15%)</title><rect x="34.4427%" y="404" width="0.1548%" height="15" fill="rgb(233,171,20)" fg:x="2225" fg:w="10"/><text x="34.6927%" y="414.50"></text></g><g><title>c10::impl::wrap_kernel_functor_unboxed_&lt;c10::impl::detail::WrapFunctionIntoFunctor_&lt;c10::CompileTimeFunctionPointer&lt;at::Tensor(at::Tensor const&amp;, std::optional&lt;at::Tensor&gt; const&amp;, std::optional&lt;at::Tensor&gt; const&amp;, std::optional&lt;at::Tensor&gt; const&amp;, std::optional&lt;at::Tensor&gt; const&amp;, bool, double, double, bool), &amp;at::(anonymous namespace)::(anonymous namespace)::wrapper_CompositeImplicitAutograd__batch_norm(at::Tensor const&amp;, std::optional&lt;at::Tensor&gt; const&amp;, std::optional&lt;at::Tensor&gt; const&amp;, std::optional&lt;at::Tensor&gt; const&amp;, std::optional&lt;at::Tensor&gt; const&amp;, bool, double, double, bool)&gt;, at::Tensor, c10::guts::typelist::typelist&lt;at::Tensor const&amp;, std::optional&lt;at::Tensor&gt; const&amp;, std::optional&lt;at::Tensor&gt; const&amp;, std::optional&lt;at::Tensor&gt; const&amp;, std::optional&lt;at::Tensor&gt; const&amp;, bool, double, double, bool&gt; &gt;, at::Tensor(at::Tensor const&amp;, std::optional&lt;at::Tensor&gt; const&amp;, std::optional&lt;at::Tensor&gt; const&amp;, std::optional&lt;at::Tensor&gt; const&amp;, std::optional&lt;at::Tensor&gt; const&amp;, bool, double, double, bool)&gt;::call (libtorch_cpu.so) (10 samples, 0.15%)</title><rect x="34.4427%" y="420" width="0.1548%" height="15" fill="rgb(241,30,25)" fg:x="2225" fg:w="10"/><text x="34.6927%" y="430.50"></text></g><g><title>at::native::batch_norm (libtorch_cpu.so) (10 samples, 0.15%)</title><rect x="34.4427%" y="436" width="0.1548%" height="15" fill="rgb(207,171,38)" fg:x="2225" fg:w="10"/><text x="34.6927%" y="446.50"></text></g><g><title>at::_ops::_batch_norm_impl_index::call (libtorch_cpu.so) (10 samples, 0.15%)</title><rect x="34.4427%" y="452" width="0.1548%" height="15" fill="rgb(234,70,1)" fg:x="2225" fg:w="10"/><text x="34.6927%" y="462.50"></text></g><g><title>c10::impl::wrap_kernel_functor_unboxed_&lt;c10::impl::detail::WrapFunctionIntoFunctor_&lt;c10::CompileTimeFunctionPointer&lt;std::tuple&lt;at::Tensor, at::Tensor, at::Tensor, at::Tensor, long&gt; (at::Tensor const&amp;, std::optional&lt;at::Tensor&gt; const&amp;, std::optional&lt;at::Tensor&gt; const&amp;, std::optional&lt;at::Tensor&gt; const&amp;, std::optional&lt;at::Tensor&gt; const&amp;, bool, double, double, bool), &amp;at::(anonymous namespace)::(anonymous namespace)::wrapper_CompositeImplicitAutograd___batch_norm_impl_index(at::Tensor const&amp;, std::optional&lt;at::Tensor&gt; const&amp;, std::optional&lt;at::Tensor&gt; const&amp;, std::optional&lt;at::Tensor&gt; const&amp;, std::optional&lt;at::Tensor&gt; const&amp;, bool, double, double, bool)&gt;, std::tuple&lt;at::Tensor, at::Tensor, at::Tensor, at::Tensor, long&gt;, c10::guts::typelist::typelist&lt;at::Tensor const&amp;, std::optional&lt;at::Tensor&gt; const&amp;, std::optional&lt;at::Tensor&gt; const&amp;, std::optional&lt;at::Tensor&gt; const&amp;, std::optional&lt;at::Tensor&gt; const&amp;, bool, double, double, bool&gt; &gt;, std::tuple&lt;at::Tensor, at::Tensor, at::Tensor, at::Tensor, long&gt; (at::Tensor const&amp;, std::optional&lt;at::Tensor&gt; const&amp;, std::optional&lt;at::Tensor&gt; const&amp;, std::optional&lt;at::Tensor&gt; const&amp;, std::optional&lt;at::Tensor&gt; const&amp;, bool, double, double, bool)&gt;::call (libtorch_cpu.so) (10 samples, 0.15%)</title><rect x="34.4427%" y="468" width="0.1548%" height="15" fill="rgb(232,178,18)" fg:x="2225" fg:w="10"/><text x="34.6927%" y="478.50"></text></g><g><title>at::native::_batch_norm_impl_index (libtorch_cpu.so) (10 samples, 0.15%)</title><rect x="34.4427%" y="484" width="0.1548%" height="15" fill="rgb(241,78,40)" fg:x="2225" fg:w="10"/><text x="34.6927%" y="494.50"></text></g><g><title>at::_ops::native_batch_norm::call (libtorch_cpu.so) (10 samples, 0.15%)</title><rect x="34.4427%" y="500" width="0.1548%" height="15" fill="rgb(222,35,25)" fg:x="2225" fg:w="10"/><text x="34.6927%" y="510.50"></text></g><g><title>c10::impl::wrap_kernel_functor_unboxed_&lt;c10::impl::detail::WrapFunctionIntoFunctor_&lt;c10::CompileTimeFunctionPointer&lt;std::tuple&lt;at::Tensor, at::Tensor, at::Tensor&gt; (c10::DispatchKeySet, at::Tensor const&amp;, std::optional&lt;at::Tensor&gt; const&amp;, std::optional&lt;at::Tensor&gt; const&amp;, std::optional&lt;at::Tensor&gt; const&amp;, std::optional&lt;at::Tensor&gt; const&amp;, bool, double, double), &amp;torch::autograd::VariableType::(anonymous namespace)::native_batch_norm(c10::DispatchKeySet, at::Tensor const&amp;, std::optional&lt;at::Tensor&gt; const&amp;, std::optional&lt;at::Tensor&gt; const&amp;, std::optional&lt;at::Tensor&gt; const&amp;, std::optional&lt;at::Tensor&gt; const&amp;, bool, double, double)&gt;, std::tuple&lt;at::Tensor, at::Tensor, at::Tensor&gt;, c10::guts::typelist::typelist&lt;c10::DispatchKeySet, at::Tensor const&amp;, std::optional&lt;at::Tensor&gt; const&amp;, std::optional&lt;at::Tensor&gt; const&amp;, std::optional&lt;at::Tensor&gt; const&amp;, std::optional&lt;at::Tensor&gt; const&amp;, bool, double, double&gt; &gt;, std::tuple&lt;at::Tensor, at::Tensor, at::Tensor&gt; (c10::DispatchKeySet, at::Tensor const&amp;, std::optional&lt;at::Tensor&gt; const&amp;, std::optional&lt;at::Tensor&gt; const&amp;, std::optional&lt;at::Tensor&gt; const&amp;, std::optional&lt;at::Tensor&gt; const&amp;, bool, double, double)&gt;::call (libtorch_cpu.so) (10 samples, 0.15%)</title><rect x="34.4427%" y="516" width="0.1548%" height="15" fill="rgb(207,92,16)" fg:x="2225" fg:w="10"/><text x="34.6927%" y="526.50"></text></g><g><title>torch::autograd::VariableType::(anonymous namespace)::native_batch_norm (libtorch_cpu.so) (10 samples, 0.15%)</title><rect x="34.4427%" y="532" width="0.1548%" height="15" fill="rgb(216,59,51)" fg:x="2225" fg:w="10"/><text x="34.6927%" y="542.50"></text></g><g><title>at::_ops::native_batch_norm::redispatch (libtorch_cpu.so) (10 samples, 0.15%)</title><rect x="34.4427%" y="548" width="0.1548%" height="15" fill="rgb(213,80,28)" fg:x="2225" fg:w="10"/><text x="34.6927%" y="558.50"></text></g><g><title>c10::impl::wrap_kernel_functor_unboxed_&lt;c10::impl::detail::WrapFunctionIntoFunctor_&lt;c10::CompileTimeFunctionPointer&lt;std::tuple&lt;at::Tensor, at::Tensor, at::Tensor&gt; (at::Tensor const&amp;, std::optional&lt;at::Tensor&gt; const&amp;, std::optional&lt;at::Tensor&gt; const&amp;, std::optional&lt;at::Tensor&gt; const&amp;, std::optional&lt;at::Tensor&gt; const&amp;, bool, double, double), &amp;at::(anonymous namespace)::(anonymous namespace)::wrapper_CPU__native_batch_norm(at::Tensor const&amp;, std::optional&lt;at::Tensor&gt; const&amp;, std::optional&lt;at::Tensor&gt; const&amp;, std::optional&lt;at::Tensor&gt; const&amp;, std::optional&lt;at::Tensor&gt; const&amp;, bool, double, double)&gt;, std::tuple&lt;at::Tensor, at::Tensor, at::Tensor&gt;, c10::guts::typelist::typelist&lt;at::Tensor const&amp;, std::optional&lt;at::Tensor&gt; const&amp;, std::optional&lt;at::Tensor&gt; const&amp;, std::optional&lt;at::Tensor&gt; const&amp;, std::optional&lt;at::Tensor&gt; const&amp;, bool, double, double&gt; &gt;, std::tuple&lt;at::Tensor, at::Tensor, at::Tensor&gt; (at::Tensor const&amp;, std::optional&lt;at::Tensor&gt; const&amp;, std::optional&lt;at::Tensor&gt; const&amp;, std::optional&lt;at::Tensor&gt; const&amp;, std::optional&lt;at::Tensor&gt; const&amp;, bool, double, double)&gt;::call (libtorch_cpu.so) (10 samples, 0.15%)</title><rect x="34.4427%" y="564" width="0.1548%" height="15" fill="rgb(220,93,7)" fg:x="2225" fg:w="10"/><text x="34.6927%" y="574.50"></text></g><g><title>at::native::batch_norm_cpu (libtorch_cpu.so) (10 samples, 0.15%)</title><rect x="34.4427%" y="580" width="0.1548%" height="15" fill="rgb(225,24,44)" fg:x="2225" fg:w="10"/><text x="34.6927%" y="590.50"></text></g><g><title>at::native::batch_norm_cpu_out (libtorch_cpu.so) (10 samples, 0.15%)</title><rect x="34.4427%" y="596" width="0.1548%" height="15" fill="rgb(243,74,40)" fg:x="2225" fg:w="10"/><text x="34.6927%" y="606.50"></text></g><g><title>at::native::batch_norm_cpu_update_stats_template&lt;float, float, at::native::InvStd&gt; (libtorch_cpu.so) (8 samples, 0.12%)</title><rect x="34.4737%" y="612" width="0.1238%" height="15" fill="rgb(228,39,7)" fg:x="2227" fg:w="8"/><text x="34.7237%" y="622.50"></text></g><g><title>dnnl::primitive::execute (libtorch_cpu.so) (7 samples, 0.11%)</title><rect x="34.5975%" y="740" width="0.1084%" height="15" fill="rgb(227,79,8)" fg:x="2235" fg:w="7"/><text x="34.8475%" y="750.50"></text></g><g><title>dnnl_primitive_execute (libtorch_cpu.so) (7 samples, 0.11%)</title><rect x="34.5975%" y="756" width="0.1084%" height="15" fill="rgb(236,58,11)" fg:x="2235" fg:w="7"/><text x="34.8475%" y="766.50"></text></g><g><title>dnnl::impl::primitive_execute (libtorch_cpu.so) (7 samples, 0.11%)</title><rect x="34.5975%" y="772" width="0.1084%" height="15" fill="rgb(249,63,35)" fg:x="2235" fg:w="7"/><text x="34.8475%" y="782.50"></text></g><g><title>dnnl_primitive::execute (libtorch_cpu.so) (7 samples, 0.11%)</title><rect x="34.5975%" y="788" width="0.1084%" height="15" fill="rgb(252,114,16)" fg:x="2235" fg:w="7"/><text x="34.8475%" y="798.50"></text></g><g><title>dnnl::impl::cpu::x64::jit_avx2_1x1_convolution_fwd_t::execute (libtorch_cpu.so) (7 samples, 0.11%)</title><rect x="34.5975%" y="804" width="0.1084%" height="15" fill="rgb(254,151,24)" fg:x="2235" fg:w="7"/><text x="34.8475%" y="814.50"></text></g><g><title>dnnl::impl::cpu::x64::jit_avx2_1x1_convolution_fwd_t::execute_forward (libtorch_cpu.so) (7 samples, 0.11%)</title><rect x="34.5975%" y="820" width="0.1084%" height="15" fill="rgb(253,54,39)" fg:x="2235" fg:w="7"/><text x="34.8475%" y="830.50"></text></g><g><title>GOMP_parallel (libgomp-c9fef706.so.1) (7 samples, 0.11%)</title><rect x="34.5975%" y="836" width="0.1084%" height="15" fill="rgb(243,25,45)" fg:x="2235" fg:w="7"/><text x="34.8475%" y="846.50"></text></g><g><title>at::native::_mkldnn_convolution_out (libtorch_cpu.so) (16 samples, 0.25%)</title><rect x="34.5975%" y="708" width="0.2477%" height="15" fill="rgb(234,134,9)" fg:x="2235" fg:w="16"/><text x="34.8475%" y="718.50"></text></g><g><title>ideep::convolution_forward::compute_dispatch&lt;false, true, true&gt; (libtorch_cpu.so) (16 samples, 0.25%)</title><rect x="34.5975%" y="724" width="0.2477%" height="15" fill="rgb(227,166,31)" fg:x="2235" fg:w="16"/><text x="34.8475%" y="734.50"></text></g><g><title>ideep::tensor::reorder_if_differ_in (libtorch_cpu.so) (9 samples, 0.14%)</title><rect x="34.7059%" y="740" width="0.1393%" height="15" fill="rgb(245,143,41)" fg:x="2242" fg:w="9"/><text x="34.9559%" y="750.50"></text></g><g><title>ideep::tensor::reorder_to (libtorch_cpu.so) (9 samples, 0.14%)</title><rect x="34.7059%" y="756" width="0.1393%" height="15" fill="rgb(238,181,32)" fg:x="2242" fg:w="9"/><text x="34.9559%" y="766.50"></text></g><g><title>dnnl::primitive::execute (libtorch_cpu.so) (9 samples, 0.14%)</title><rect x="34.7059%" y="772" width="0.1393%" height="15" fill="rgb(224,113,18)" fg:x="2242" fg:w="9"/><text x="34.9559%" y="782.50"></text></g><g><title>dnnl_primitive_execute (libtorch_cpu.so) (9 samples, 0.14%)</title><rect x="34.7059%" y="788" width="0.1393%" height="15" fill="rgb(240,229,28)" fg:x="2242" fg:w="9"/><text x="34.9559%" y="798.50"></text></g><g><title>dnnl::impl::primitive_execute (libtorch_cpu.so) (9 samples, 0.14%)</title><rect x="34.7059%" y="804" width="0.1393%" height="15" fill="rgb(250,185,3)" fg:x="2242" fg:w="9"/><text x="34.9559%" y="814.50"></text></g><g><title>dnnl_primitive::execute (libtorch_cpu.so) (9 samples, 0.14%)</title><rect x="34.7059%" y="820" width="0.1393%" height="15" fill="rgb(212,59,25)" fg:x="2242" fg:w="9"/><text x="34.9559%" y="830.50"></text></g><g><title>dnnl::impl::cpu::x64::jit_blk_reorder_t::execute (libtorch_cpu.so) (9 samples, 0.14%)</title><rect x="34.7059%" y="836" width="0.1393%" height="15" fill="rgb(221,87,20)" fg:x="2242" fg:w="9"/><text x="34.9559%" y="846.50"></text></g><g><title>forward (torchvision/models/resnet.py:100) (31 samples, 0.48%)</title><rect x="34.4272%" y="260" width="0.4799%" height="15" fill="rgb(213,74,28)" fg:x="2224" fg:w="31"/><text x="34.6772%" y="270.50"></text></g><g><title>_wrapped_call_impl (torch/nn/modules/module.py:1751) (31 samples, 0.48%)</title><rect x="34.4272%" y="276" width="0.4799%" height="15" fill="rgb(224,132,34)" fg:x="2224" fg:w="31"/><text x="34.6772%" y="286.50"></text></g><g><title>_call_impl (torch/nn/modules/module.py:1762) (31 samples, 0.48%)</title><rect x="34.4272%" y="292" width="0.4799%" height="15" fill="rgb(222,101,24)" fg:x="2224" fg:w="31"/><text x="34.6772%" y="302.50"></text></g><g><title>forward (torch/nn/modules/container.py:240) (31 samples, 0.48%)</title><rect x="34.4272%" y="308" width="0.4799%" height="15" fill="rgb(254,142,4)" fg:x="2224" fg:w="31"/><text x="34.6772%" y="318.50"></text></g><g><title>_wrapped_call_impl (torch/nn/modules/module.py:1751) (31 samples, 0.48%)</title><rect x="34.4272%" y="324" width="0.4799%" height="15" fill="rgb(230,229,49)" fg:x="2224" fg:w="31"/><text x="34.6772%" y="334.50"></text></g><g><title>_call_impl (torch/nn/modules/module.py:1762) (30 samples, 0.46%)</title><rect x="34.4427%" y="340" width="0.4644%" height="15" fill="rgb(238,70,47)" fg:x="2225" fg:w="30"/><text x="34.6927%" y="350.50"></text></g><g><title>forward (torch/nn/modules/conv.py:554) (20 samples, 0.31%)</title><rect x="34.5975%" y="356" width="0.3096%" height="15" fill="rgb(231,160,17)" fg:x="2235" fg:w="20"/><text x="34.8475%" y="366.50"></text></g><g><title>_conv_forward (torch/nn/modules/conv.py:550) (20 samples, 0.31%)</title><rect x="34.5975%" y="372" width="0.3096%" height="15" fill="rgb(218,68,53)" fg:x="2235" fg:w="20"/><text x="34.8475%" y="382.50"></text></g><g><title>torch::autograd::THPVariable_conv2d (libtorch_python.so) (20 samples, 0.31%)</title><rect x="34.5975%" y="388" width="0.3096%" height="15" fill="rgb(236,111,10)" fg:x="2235" fg:w="20"/><text x="34.8475%" y="398.50"></text></g><g><title>at::_ops::conv2d::call (libtorch_cpu.so) (20 samples, 0.31%)</title><rect x="34.5975%" y="404" width="0.3096%" height="15" fill="rgb(224,34,41)" fg:x="2235" fg:w="20"/><text x="34.8475%" y="414.50"></text></g><g><title>c10::impl::wrap_kernel_functor_unboxed_&lt;c10::impl::detail::WrapFunctionIntoFunctor_&lt;c10::CompileTimeFunctionPointer&lt;at::Tensor(at::Tensor const&amp;, at::Tensor const&amp;, std::optional&lt;at::Tensor&gt; const&amp;, c10::ArrayRef&lt;c10::SymInt&gt;, c10::ArrayRef&lt;c10::SymInt&gt;, c10::ArrayRef&lt;c10::SymInt&gt;, c10::SymInt), &amp;at::(anonymous namespace)::(anonymous namespace)::wrapper_CompositeImplicitAutograd__conv2d(at::Tensor const&amp;, at::Tensor const&amp;, std::optional&lt;at::Tensor&gt; const&amp;, c10::ArrayRef&lt;c10::SymInt&gt;, c10::ArrayRef&lt;c10::SymInt&gt;, c10::ArrayRef&lt;c10::SymInt&gt;, c10::SymInt)&gt;, at::Tensor, c10::guts::typelist::typelist&lt;at::Tensor const&amp;, at::Tensor const&amp;, std::optional&lt;at::Tensor&gt; const&amp;, c10::ArrayRef&lt;c10::SymInt&gt;, c10::ArrayRef&lt;c10::SymInt&gt;, c10::ArrayRef&lt;c10::SymInt&gt;, c10::SymInt&gt; &gt;, at::Tensor(at::Tensor const&amp;, at::Tensor const&amp;, std::optional&lt;at::Tensor&gt; const&amp;, c10::ArrayRef&lt;c10::SymInt&gt;, c10::ArrayRef&lt;c10::SymInt&gt;, c10::ArrayRef&lt;c10::SymInt&gt;, c10::SymInt)&gt;::call (libtorch_cpu.so) (20 samples, 0.31%)</title><rect x="34.5975%" y="420" width="0.3096%" height="15" fill="rgb(241,118,19)" fg:x="2235" fg:w="20"/><text x="34.8475%" y="430.50"></text></g><g><title>at::native::conv2d_symint (libtorch_cpu.so) (20 samples, 0.31%)</title><rect x="34.5975%" y="436" width="0.3096%" height="15" fill="rgb(238,129,25)" fg:x="2235" fg:w="20"/><text x="34.8475%" y="446.50"></text></g><g><title>at::_ops::convolution::call (libtorch_cpu.so) (20 samples, 0.31%)</title><rect x="34.5975%" y="452" width="0.3096%" height="15" fill="rgb(238,22,31)" fg:x="2235" fg:w="20"/><text x="34.8475%" y="462.50"></text></g><g><title>c10::impl::wrap_kernel_functor_unboxed_&lt;c10::impl::detail::WrapFunctionIntoFunctor_&lt;c10::CompileTimeFunctionPointer&lt;at::Tensor(c10::DispatchKeySet, at::Tensor const&amp;, at::Tensor const&amp;, std::optional&lt;at::Tensor&gt; const&amp;, c10::ArrayRef&lt;c10::SymInt&gt;, c10::ArrayRef&lt;c10::SymInt&gt;, c10::ArrayRef&lt;c10::SymInt&gt;, bool, c10::ArrayRef&lt;c10::SymInt&gt;, c10::SymInt), &amp;torch::autograd::VariableType::(anonymous namespace)::convolution(c10::DispatchKeySet, at::Tensor const&amp;, at::Tensor const&amp;, std::optional&lt;at::Tensor&gt; const&amp;, c10::ArrayRef&lt;c10::SymInt&gt;, c10::ArrayRef&lt;c10::SymInt&gt;, c10::ArrayRef&lt;c10::SymInt&gt;, bool, c10::ArrayRef&lt;c10::SymInt&gt;, c10::SymInt)&gt;, at::Tensor, c10::guts::typelist::typelist&lt;c10::DispatchKeySet, at::Tensor const&amp;, at::Tensor const&amp;, std::optional&lt;at::Tensor&gt; const&amp;, c10::ArrayRef&lt;c10::SymInt&gt;, c10::ArrayRef&lt;c10::SymInt&gt;, c10::ArrayRef&lt;c10::SymInt&gt;, bool, c10::ArrayRef&lt;c10::SymInt&gt;, c10::SymInt&gt; &gt;, at::Tensor(c10::DispatchKeySet, at::Tensor const&amp;, at::Tensor const&amp;, std::optional&lt;at::Tensor&gt; const&amp;, c10::ArrayRef&lt;c10::SymInt&gt;, c10::ArrayRef&lt;c10::SymInt&gt;, c10::ArrayRef&lt;c10::SymInt&gt;, bool, c10::ArrayRef&lt;c10::SymInt&gt;, c10::SymInt)&gt;::call (libtorch_cpu.so) (20 samples, 0.31%)</title><rect x="34.5975%" y="468" width="0.3096%" height="15" fill="rgb(222,174,48)" fg:x="2235" fg:w="20"/><text x="34.8475%" y="478.50"></text></g><g><title>torch::autograd::VariableType::(anonymous namespace)::convolution (libtorch_cpu.so) (20 samples, 0.31%)</title><rect x="34.5975%" y="484" width="0.3096%" height="15" fill="rgb(206,152,40)" fg:x="2235" fg:w="20"/><text x="34.8475%" y="494.50"></text></g><g><title>at::_ops::convolution::redispatch (libtorch_cpu.so) (20 samples, 0.31%)</title><rect x="34.5975%" y="500" width="0.3096%" height="15" fill="rgb(218,99,54)" fg:x="2235" fg:w="20"/><text x="34.8475%" y="510.50"></text></g><g><title>c10::impl::wrap_kernel_functor_unboxed_&lt;c10::impl::detail::WrapFunctionIntoFunctor_&lt;c10::CompileTimeFunctionPointer&lt;at::Tensor(at::Tensor const&amp;, at::Tensor const&amp;, std::optional&lt;at::Tensor&gt; const&amp;, c10::ArrayRef&lt;c10::SymInt&gt;, c10::ArrayRef&lt;c10::SymInt&gt;, c10::ArrayRef&lt;c10::SymInt&gt;, bool, c10::ArrayRef&lt;c10::SymInt&gt;, c10::SymInt), &amp;at::(anonymous namespace)::(anonymous namespace)::wrapper_CompositeExplicitAutograd__convolution(at::Tensor const&amp;, at::Tensor const&amp;, std::optional&lt;at::Tensor&gt; const&amp;, c10::ArrayRef&lt;c10::SymInt&gt;, c10::ArrayRef&lt;c10::SymInt&gt;, c10::ArrayRef&lt;c10::SymInt&gt;, bool, c10::ArrayRef&lt;c10::SymInt&gt;, c10::SymInt)&gt;, at::Tensor, c10::guts::typelist::typelist&lt;at::Tensor const&amp;, at::Tensor const&amp;, std::optional&lt;at::Tensor&gt; const&amp;, c10::ArrayRef&lt;c10::SymInt&gt;, c10::ArrayRef&lt;c10::SymInt&gt;, c10::ArrayRef&lt;c10::SymInt&gt;, bool, c10::ArrayRef&lt;c10::SymInt&gt;, c10::SymInt&gt; &gt;, at::Tensor(at::Tensor const&amp;, at::Tensor const&amp;, std::optional&lt;at::Tensor&gt; const&amp;, c10::ArrayRef&lt;c10::SymInt&gt;, c10::ArrayRef&lt;c10::SymInt&gt;, c10::ArrayRef&lt;c10::SymInt&gt;, bool, c10::ArrayRef&lt;c10::SymInt&gt;, c10::SymInt)&gt;::call (libtorch_cpu.so) (20 samples, 0.31%)</title><rect x="34.5975%" y="516" width="0.3096%" height="15" fill="rgb(220,174,26)" fg:x="2235" fg:w="20"/><text x="34.8475%" y="526.50"></text></g><g><title>at::(anonymous namespace)::(anonymous namespace)::wrapper_CompositeExplicitAutograd__convolution (libtorch_cpu.so) (20 samples, 0.31%)</title><rect x="34.5975%" y="532" width="0.3096%" height="15" fill="rgb(245,116,9)" fg:x="2235" fg:w="20"/><text x="34.8475%" y="542.50"></text></g><g><title>at::native::convolution (libtorch_cpu.so) (20 samples, 0.31%)</title><rect x="34.5975%" y="548" width="0.3096%" height="15" fill="rgb(209,72,35)" fg:x="2235" fg:w="20"/><text x="34.8475%" y="558.50"></text></g><g><title>at::_ops::_convolution::call (libtorch_cpu.so) (20 samples, 0.31%)</title><rect x="34.5975%" y="564" width="0.3096%" height="15" fill="rgb(226,126,21)" fg:x="2235" fg:w="20"/><text x="34.8475%" y="574.50"></text></g><g><title>c10::impl::wrap_kernel_functor_unboxed_&lt;c10::impl::detail::WrapFunctionIntoFunctor_&lt;c10::CompileTimeFunctionPointer&lt;at::Tensor(at::Tensor const&amp;, at::Tensor const&amp;, std::optional&lt;at::Tensor&gt; const&amp;, c10::ArrayRef&lt;c10::SymInt&gt;, c10::ArrayRef&lt;c10::SymInt&gt;, c10::ArrayRef&lt;c10::SymInt&gt;, bool, c10::ArrayRef&lt;c10::SymInt&gt;, c10::SymInt, bool, bool, bool, bool), &amp;at::(anonymous namespace)::(anonymous namespace)::wrapper_CompositeExplicitAutograd___convolution(at::Tensor const&amp;, at::Tensor const&amp;, std::optional&lt;at::Tensor&gt; const&amp;, c10::ArrayRef&lt;c10::SymInt&gt;, c10::ArrayRef&lt;c10::SymInt&gt;, c10::ArrayRef&lt;c10::SymInt&gt;, bool, c10::ArrayRef&lt;c10::SymInt&gt;, c10::SymInt, bool, bool, bool, bool)&gt;, at::Tensor, c10::guts::typelist::typelist&lt;at::Tensor const&amp;, at::Tensor const&amp;, std::optional&lt;at::Tensor&gt; const&amp;, c10::ArrayRef&lt;c10::SymInt&gt;, c10::ArrayRef&lt;c10::SymInt&gt;, c10::ArrayRef&lt;c10::SymInt&gt;, bool, c10::ArrayRef&lt;c10::SymInt&gt;, c10::SymInt, bool, bool, bool, bool&gt; &gt;, at::Tensor(at::Tensor const&amp;, at::Tensor const&amp;, std::optional&lt;at::Tensor&gt; const&amp;, c10::ArrayRef&lt;c10::SymInt&gt;, c10::ArrayRef&lt;c10::SymInt&gt;, c10::ArrayRef&lt;c10::SymInt&gt;, bool, c10::ArrayRef&lt;c10::SymInt&gt;, c10::SymInt, bool, bool, bool, bool)&gt;::call (libtorch_cpu.so) (20 samples, 0.31%)</title><rect x="34.5975%" y="580" width="0.3096%" height="15" fill="rgb(227,192,1)" fg:x="2235" fg:w="20"/><text x="34.8475%" y="590.50"></text></g><g><title>at::(anonymous namespace)::(anonymous namespace)::wrapper_CompositeExplicitAutograd___convolution (libtorch_cpu.so) (20 samples, 0.31%)</title><rect x="34.5975%" y="596" width="0.3096%" height="15" fill="rgb(237,180,29)" fg:x="2235" fg:w="20"/><text x="34.8475%" y="606.50"></text></g><g><title>at::native::_convolution (libtorch_cpu.so) (20 samples, 0.31%)</title><rect x="34.5975%" y="612" width="0.3096%" height="15" fill="rgb(230,197,35)" fg:x="2235" fg:w="20"/><text x="34.8475%" y="622.50"></text></g><g><title>at::_ops::mkldnn_convolution::call (libtorch_cpu.so) (20 samples, 0.31%)</title><rect x="34.5975%" y="628" width="0.3096%" height="15" fill="rgb(246,193,31)" fg:x="2235" fg:w="20"/><text x="34.8475%" y="638.50"></text></g><g><title>c10::impl::wrap_kernel_functor_unboxed_&lt;c10::impl::detail::WrapFunctionIntoFunctor_&lt;c10::CompileTimeFunctionPointer&lt;at::Tensor(at::Tensor const&amp;, at::Tensor const&amp;, std::optional&lt;at::Tensor&gt; const&amp;, c10::ArrayRef&lt;c10::SymInt&gt;, c10::ArrayRef&lt;c10::SymInt&gt;, c10::ArrayRef&lt;c10::SymInt&gt;, c10::SymInt), &amp;at::(anonymous namespace)::(anonymous namespace)::wrapper_CompositeExplicitAutograd__mkldnn_convolution(at::Tensor const&amp;, at::Tensor const&amp;, std::optional&lt;at::Tensor&gt; const&amp;, c10::ArrayRef&lt;c10::SymInt&gt;, c10::ArrayRef&lt;c10::SymInt&gt;, c10::ArrayRef&lt;c10::SymInt&gt;, c10::SymInt)&gt;, at::Tensor, c10::guts::typelist::typelist&lt;at::Tensor const&amp;, at::Tensor const&amp;, std::optional&lt;at::Tensor&gt; const&amp;, c10::ArrayRef&lt;c10::SymInt&gt;, c10::ArrayRef&lt;c10::SymInt&gt;, c10::ArrayRef&lt;c10::SymInt&gt;, c10::SymInt&gt; &gt;, at::Tensor(at::Tensor const&amp;, at::Tensor const&amp;, std::optional&lt;at::Tensor&gt; const&amp;, c10::ArrayRef&lt;c10::SymInt&gt;, c10::ArrayRef&lt;c10::SymInt&gt;, c10::ArrayRef&lt;c10::SymInt&gt;, c10::SymInt)&gt;::call (libtorch_cpu.so) (20 samples, 0.31%)</title><rect x="34.5975%" y="644" width="0.3096%" height="15" fill="rgb(241,36,4)" fg:x="2235" fg:w="20"/><text x="34.8475%" y="654.50"></text></g><g><title>at::(anonymous namespace)::(anonymous namespace)::wrapper_CompositeExplicitAutograd__mkldnn_convolution (libtorch_cpu.so) (20 samples, 0.31%)</title><rect x="34.5975%" y="660" width="0.3096%" height="15" fill="rgb(241,130,17)" fg:x="2235" fg:w="20"/><text x="34.8475%" y="670.50"></text></g><g><title>at::native::mkldnn_convolution (libtorch_cpu.so) (20 samples, 0.31%)</title><rect x="34.5975%" y="676" width="0.3096%" height="15" fill="rgb(206,137,32)" fg:x="2235" fg:w="20"/><text x="34.8475%" y="686.50"></text></g><g><title>at::native::_mkldnn_convolution (libtorch_cpu.so) (20 samples, 0.31%)</title><rect x="34.5975%" y="692" width="0.3096%" height="15" fill="rgb(237,228,51)" fg:x="2235" fg:w="20"/><text x="34.8475%" y="702.50"></text></g><g><title>forward (torchvision/models/resnet.py:102) (9 samples, 0.14%)</title><rect x="34.9071%" y="260" width="0.1393%" height="15" fill="rgb(243,6,42)" fg:x="2255" fg:w="9"/><text x="35.1571%" y="270.50"></text></g><g><title>torch::autograd::TypeError_to_NotImplemented_&lt;&amp;torch::autograd::THPVariable_add_(_object*, _object*, _object*)&gt; (libtorch_python.so) (9 samples, 0.14%)</title><rect x="34.9071%" y="276" width="0.1393%" height="15" fill="rgb(251,74,28)" fg:x="2255" fg:w="9"/><text x="35.1571%" y="286.50"></text></g><g><title>torch::autograd::THPVariable_add_ (libtorch_python.so) (9 samples, 0.14%)</title><rect x="34.9071%" y="292" width="0.1393%" height="15" fill="rgb(218,20,49)" fg:x="2255" fg:w="9"/><text x="35.1571%" y="302.50"></text></g><g><title>at::_ops::add__Tensor::call (libtorch_cpu.so) (9 samples, 0.14%)</title><rect x="34.9071%" y="308" width="0.1393%" height="15" fill="rgb(238,28,14)" fg:x="2255" fg:w="9"/><text x="35.1571%" y="318.50"></text></g><g><title>torch::autograd::VariableType::(anonymous namespace)::add__Tensor (libtorch_cpu.so) (9 samples, 0.14%)</title><rect x="34.9071%" y="324" width="0.1393%" height="15" fill="rgb(229,40,46)" fg:x="2255" fg:w="9"/><text x="35.1571%" y="334.50"></text></g><g><title>0x77d25141ca9d (libgomp-c9fef706.so.1) (8 samples, 0.12%)</title><rect x="35.1393%" y="788" width="0.1238%" height="15" fill="rgb(244,195,20)" fg:x="2270" fg:w="8"/><text x="35.3893%" y="798.50"></text></g><g><title>0x77d25141e02a (libgomp-c9fef706.so.1) (8 samples, 0.12%)</title><rect x="35.1393%" y="804" width="0.1238%" height="15" fill="rgb(253,56,35)" fg:x="2270" fg:w="8"/><text x="35.3893%" y="814.50"></text></g><g><title>dnnl::primitive::execute (libtorch_cpu.so) (107 samples, 1.66%)</title><rect x="35.1393%" y="692" width="1.6563%" height="15" fill="rgb(210,149,44)" fg:x="2270" fg:w="107"/><text x="35.3893%" y="702.50"></text></g><g><title>dnnl_primitive_execute (libtorch_cpu.so) (107 samples, 1.66%)</title><rect x="35.1393%" y="708" width="1.6563%" height="15" fill="rgb(240,135,12)" fg:x="2270" fg:w="107"/><text x="35.3893%" y="718.50"></text></g><g><title>dnnl::impl::primitive_execute (libtorch_cpu.so) (107 samples, 1.66%)</title><rect x="35.1393%" y="724" width="1.6563%" height="15" fill="rgb(251,24,50)" fg:x="2270" fg:w="107"/><text x="35.3893%" y="734.50"></text></g><g><title>dnnl_primitive::execute (libtorch_cpu.so) (107 samples, 1.66%)</title><rect x="35.1393%" y="740" width="1.6563%" height="15" fill="rgb(243,200,47)" fg:x="2270" fg:w="107"/><text x="35.3893%" y="750.50"></text></g><g><title>dnnl::impl::cpu::x64::jit_avx2_convolution_fwd_t::execute (libtorch_cpu.so) (107 samples, 1.66%)</title><rect x="35.1393%" y="756" width="1.6563%" height="15" fill="rgb(224,166,26)" fg:x="2270" fg:w="107"/><text x="35.3893%" y="766.50"></text></g><g><title>dnnl::impl::cpu::x64::jit_avx2_convolution_fwd_t::execute_forward (libtorch_cpu.so) (107 samples, 1.66%)</title><rect x="35.1393%" y="772" width="1.6563%" height="15" fill="rgb(233,0,47)" fg:x="2270" fg:w="107"/><text x="35.3893%" y="782.50"></text></g><g><title>GOMP_parallel (libgomp-c9fef706.so.1) (99 samples, 1.53%)</title><rect x="35.2632%" y="788" width="1.5325%" height="15" fill="rgb(253,80,5)" fg:x="2278" fg:w="99"/><text x="35.5132%" y="798.50"></text></g><g><title>dnnl::impl::parallel (libtorch_cpu.so) (95 samples, 1.47%)</title><rect x="35.3251%" y="804" width="1.4706%" height="15" fill="rgb(214,133,25)" fg:x="2282" fg:w="95"/><text x="35.5751%" y="814.50"></text></g><g><title>dnnl::impl::cpu::x64::jit_avx2_convolution_fwd_t::execute_forward(dnnl::impl::exec_ctx_t const&amp;) const::{lambda(int, int)#1}::operator() const (libtorch_cpu.so) (95 samples, 1.47%)</title><rect x="35.3251%" y="820" width="1.4706%" height="15" fill="rgb(209,27,14)" fg:x="2282" fg:w="95"/><text x="35.5751%" y="830.50"></text></g><g><title>at::native::_mkldnn_convolution_out (libtorch_cpu.so) (114 samples, 1.76%)</title><rect x="35.1393%" y="660" width="1.7647%" height="15" fill="rgb(219,102,51)" fg:x="2270" fg:w="114"/><text x="35.3893%" y="670.50"></text></g><g><title>ideep::convolution_forward::compute_dispatch&lt;false, true, true&gt; (libtorch_cpu.so) (114 samples, 1.76%)</title><rect x="35.1393%" y="676" width="1.7647%" height="15" fill="rgb(237,18,16)" fg:x="2270" fg:w="114"/><text x="35.3893%" y="686.50"></text></g><g><title>ideep::tensor::reorder_if_differ_in (libtorch_cpu.so) (7 samples, 0.11%)</title><rect x="36.7957%" y="692" width="0.1084%" height="15" fill="rgb(241,85,17)" fg:x="2377" fg:w="7"/><text x="37.0457%" y="702.50"></text></g><g><title>ideep::tensor::reorder_to (libtorch_cpu.so) (7 samples, 0.11%)</title><rect x="36.7957%" y="708" width="0.1084%" height="15" fill="rgb(236,90,42)" fg:x="2377" fg:w="7"/><text x="37.0457%" y="718.50"></text></g><g><title>forward (torchvision/models/resnet.py:92) (123 samples, 1.90%)</title><rect x="35.1393%" y="260" width="1.9040%" height="15" fill="rgb(249,57,21)" fg:x="2270" fg:w="123"/><text x="35.3893%" y="270.50">f..</text></g><g><title>_wrapped_call_impl (torch/nn/modules/module.py:1751) (123 samples, 1.90%)</title><rect x="35.1393%" y="276" width="1.9040%" height="15" fill="rgb(243,12,36)" fg:x="2270" fg:w="123"/><text x="35.3893%" y="286.50">_..</text></g><g><title>_call_impl (torch/nn/modules/module.py:1762) (123 samples, 1.90%)</title><rect x="35.1393%" y="292" width="1.9040%" height="15" fill="rgb(253,128,47)" fg:x="2270" fg:w="123"/><text x="35.3893%" y="302.50">_..</text></g><g><title>forward (torch/nn/modules/conv.py:554) (123 samples, 1.90%)</title><rect x="35.1393%" y="308" width="1.9040%" height="15" fill="rgb(207,33,20)" fg:x="2270" fg:w="123"/><text x="35.3893%" y="318.50">f..</text></g><g><title>_conv_forward (torch/nn/modules/conv.py:550) (123 samples, 1.90%)</title><rect x="35.1393%" y="324" width="1.9040%" height="15" fill="rgb(233,215,35)" fg:x="2270" fg:w="123"/><text x="35.3893%" y="334.50">_..</text></g><g><title>torch::autograd::THPVariable_conv2d (libtorch_python.so) (123 samples, 1.90%)</title><rect x="35.1393%" y="340" width="1.9040%" height="15" fill="rgb(249,188,52)" fg:x="2270" fg:w="123"/><text x="35.3893%" y="350.50">t..</text></g><g><title>at::_ops::conv2d::call (libtorch_cpu.so) (123 samples, 1.90%)</title><rect x="35.1393%" y="356" width="1.9040%" height="15" fill="rgb(225,12,32)" fg:x="2270" fg:w="123"/><text x="35.3893%" y="366.50">a..</text></g><g><title>c10::impl::wrap_kernel_functor_unboxed_&lt;c10::impl::detail::WrapFunctionIntoFunctor_&lt;c10::CompileTimeFunctionPointer&lt;at::Tensor(at::Tensor const&amp;, at::Tensor const&amp;, std::optional&lt;at::Tensor&gt; const&amp;, c10::ArrayRef&lt;c10::SymInt&gt;, c10::ArrayRef&lt;c10::SymInt&gt;, c10::ArrayRef&lt;c10::SymInt&gt;, c10::SymInt), &amp;at::(anonymous namespace)::(anonymous namespace)::wrapper_CompositeImplicitAutograd__conv2d(at::Tensor const&amp;, at::Tensor const&amp;, std::optional&lt;at::Tensor&gt; const&amp;, c10::ArrayRef&lt;c10::SymInt&gt;, c10::ArrayRef&lt;c10::SymInt&gt;, c10::ArrayRef&lt;c10::SymInt&gt;, c10::SymInt)&gt;, at::Tensor, c10::guts::typelist::typelist&lt;at::Tensor const&amp;, at::Tensor const&amp;, std::optional&lt;at::Tensor&gt; const&amp;, c10::ArrayRef&lt;c10::SymInt&gt;, c10::ArrayRef&lt;c10::SymInt&gt;, c10::ArrayRef&lt;c10::SymInt&gt;, c10::SymInt&gt; &gt;, at::Tensor(at::Tensor const&amp;, at::Tensor const&amp;, std::optional&lt;at::Tensor&gt; const&amp;, c10::ArrayRef&lt;c10::SymInt&gt;, c10::ArrayRef&lt;c10::SymInt&gt;, c10::ArrayRef&lt;c10::SymInt&gt;, c10::SymInt)&gt;::call (libtorch_cpu.so) (123 samples, 1.90%)</title><rect x="35.1393%" y="372" width="1.9040%" height="15" fill="rgb(247,98,14)" fg:x="2270" fg:w="123"/><text x="35.3893%" y="382.50">c..</text></g><g><title>at::native::conv2d_symint (libtorch_cpu.so) (123 samples, 1.90%)</title><rect x="35.1393%" y="388" width="1.9040%" height="15" fill="rgb(247,219,48)" fg:x="2270" fg:w="123"/><text x="35.3893%" y="398.50">a..</text></g><g><title>at::_ops::convolution::call (libtorch_cpu.so) (123 samples, 1.90%)</title><rect x="35.1393%" y="404" width="1.9040%" height="15" fill="rgb(253,60,48)" fg:x="2270" fg:w="123"/><text x="35.3893%" y="414.50">a..</text></g><g><title>c10::impl::wrap_kernel_functor_unboxed_&lt;c10::impl::detail::WrapFunctionIntoFunctor_&lt;c10::CompileTimeFunctionPointer&lt;at::Tensor(c10::DispatchKeySet, at::Tensor const&amp;, at::Tensor const&amp;, std::optional&lt;at::Tensor&gt; const&amp;, c10::ArrayRef&lt;c10::SymInt&gt;, c10::ArrayRef&lt;c10::SymInt&gt;, c10::ArrayRef&lt;c10::SymInt&gt;, bool, c10::ArrayRef&lt;c10::SymInt&gt;, c10::SymInt), &amp;torch::autograd::VariableType::(anonymous namespace)::convolution(c10::DispatchKeySet, at::Tensor const&amp;, at::Tensor const&amp;, std::optional&lt;at::Tensor&gt; const&amp;, c10::ArrayRef&lt;c10::SymInt&gt;, c10::ArrayRef&lt;c10::SymInt&gt;, c10::ArrayRef&lt;c10::SymInt&gt;, bool, c10::ArrayRef&lt;c10::SymInt&gt;, c10::SymInt)&gt;, at::Tensor, c10::guts::typelist::typelist&lt;c10::DispatchKeySet, at::Tensor const&amp;, at::Tensor const&amp;, std::optional&lt;at::Tensor&gt; const&amp;, c10::ArrayRef&lt;c10::SymInt&gt;, c10::ArrayRef&lt;c10::SymInt&gt;, c10::ArrayRef&lt;c10::SymInt&gt;, bool, c10::ArrayRef&lt;c10::SymInt&gt;, c10::SymInt&gt; &gt;, at::Tensor(c10::DispatchKeySet, at::Tensor const&amp;, at::Tensor const&amp;, std::optional&lt;at::Tensor&gt; const&amp;, c10::ArrayRef&lt;c10::SymInt&gt;, c10::ArrayRef&lt;c10::SymInt&gt;, c10::ArrayRef&lt;c10::SymInt&gt;, bool, c10::ArrayRef&lt;c10::SymInt&gt;, c10::SymInt)&gt;::call (libtorch_cpu.so) (123 samples, 1.90%)</title><rect x="35.1393%" y="420" width="1.9040%" height="15" fill="rgb(245,15,52)" fg:x="2270" fg:w="123"/><text x="35.3893%" y="430.50">c..</text></g><g><title>torch::autograd::VariableType::(anonymous namespace)::convolution (libtorch_cpu.so) (123 samples, 1.90%)</title><rect x="35.1393%" y="436" width="1.9040%" height="15" fill="rgb(220,133,28)" fg:x="2270" fg:w="123"/><text x="35.3893%" y="446.50">t..</text></g><g><title>at::_ops::convolution::redispatch (libtorch_cpu.so) (123 samples, 1.90%)</title><rect x="35.1393%" y="452" width="1.9040%" height="15" fill="rgb(217,180,4)" fg:x="2270" fg:w="123"/><text x="35.3893%" y="462.50">a..</text></g><g><title>c10::impl::wrap_kernel_functor_unboxed_&lt;c10::impl::detail::WrapFunctionIntoFunctor_&lt;c10::CompileTimeFunctionPointer&lt;at::Tensor(at::Tensor const&amp;, at::Tensor const&amp;, std::optional&lt;at::Tensor&gt; const&amp;, c10::ArrayRef&lt;c10::SymInt&gt;, c10::ArrayRef&lt;c10::SymInt&gt;, c10::ArrayRef&lt;c10::SymInt&gt;, bool, c10::ArrayRef&lt;c10::SymInt&gt;, c10::SymInt), &amp;at::(anonymous namespace)::(anonymous namespace)::wrapper_CompositeExplicitAutograd__convolution(at::Tensor const&amp;, at::Tensor const&amp;, std::optional&lt;at::Tensor&gt; const&amp;, c10::ArrayRef&lt;c10::SymInt&gt;, c10::ArrayRef&lt;c10::SymInt&gt;, c10::ArrayRef&lt;c10::SymInt&gt;, bool, c10::ArrayRef&lt;c10::SymInt&gt;, c10::SymInt)&gt;, at::Tensor, c10::guts::typelist::typelist&lt;at::Tensor const&amp;, at::Tensor const&amp;, std::optional&lt;at::Tensor&gt; const&amp;, c10::ArrayRef&lt;c10::SymInt&gt;, c10::ArrayRef&lt;c10::SymInt&gt;, c10::ArrayRef&lt;c10::SymInt&gt;, bool, c10::ArrayRef&lt;c10::SymInt&gt;, c10::SymInt&gt; &gt;, at::Tensor(at::Tensor const&amp;, at::Tensor const&amp;, std::optional&lt;at::Tensor&gt; const&amp;, c10::ArrayRef&lt;c10::SymInt&gt;, c10::ArrayRef&lt;c10::SymInt&gt;, c10::ArrayRef&lt;c10::SymInt&gt;, bool, c10::ArrayRef&lt;c10::SymInt&gt;, c10::SymInt)&gt;::call (libtorch_cpu.so) (123 samples, 1.90%)</title><rect x="35.1393%" y="468" width="1.9040%" height="15" fill="rgb(251,24,1)" fg:x="2270" fg:w="123"/><text x="35.3893%" y="478.50">c..</text></g><g><title>at::(anonymous namespace)::(anonymous namespace)::wrapper_CompositeExplicitAutograd__convolution (libtorch_cpu.so) (123 samples, 1.90%)</title><rect x="35.1393%" y="484" width="1.9040%" height="15" fill="rgb(212,185,49)" fg:x="2270" fg:w="123"/><text x="35.3893%" y="494.50">a..</text></g><g><title>at::native::convolution (libtorch_cpu.so) (123 samples, 1.90%)</title><rect x="35.1393%" y="500" width="1.9040%" height="15" fill="rgb(215,175,22)" fg:x="2270" fg:w="123"/><text x="35.3893%" y="510.50">a..</text></g><g><title>at::_ops::_convolution::call (libtorch_cpu.so) (123 samples, 1.90%)</title><rect x="35.1393%" y="516" width="1.9040%" height="15" fill="rgb(250,205,14)" fg:x="2270" fg:w="123"/><text x="35.3893%" y="526.50">a..</text></g><g><title>c10::impl::wrap_kernel_functor_unboxed_&lt;c10::impl::detail::WrapFunctionIntoFunctor_&lt;c10::CompileTimeFunctionPointer&lt;at::Tensor(at::Tensor const&amp;, at::Tensor const&amp;, std::optional&lt;at::Tensor&gt; const&amp;, c10::ArrayRef&lt;c10::SymInt&gt;, c10::ArrayRef&lt;c10::SymInt&gt;, c10::ArrayRef&lt;c10::SymInt&gt;, bool, c10::ArrayRef&lt;c10::SymInt&gt;, c10::SymInt, bool, bool, bool, bool), &amp;at::(anonymous namespace)::(anonymous namespace)::wrapper_CompositeExplicitAutograd___convolution(at::Tensor const&amp;, at::Tensor const&amp;, std::optional&lt;at::Tensor&gt; const&amp;, c10::ArrayRef&lt;c10::SymInt&gt;, c10::ArrayRef&lt;c10::SymInt&gt;, c10::ArrayRef&lt;c10::SymInt&gt;, bool, c10::ArrayRef&lt;c10::SymInt&gt;, c10::SymInt, bool, bool, bool, bool)&gt;, at::Tensor, c10::guts::typelist::typelist&lt;at::Tensor const&amp;, at::Tensor const&amp;, std::optional&lt;at::Tensor&gt; const&amp;, c10::ArrayRef&lt;c10::SymInt&gt;, c10::ArrayRef&lt;c10::SymInt&gt;, c10::ArrayRef&lt;c10::SymInt&gt;, bool, c10::ArrayRef&lt;c10::SymInt&gt;, c10::SymInt, bool, bool, bool, bool&gt; &gt;, at::Tensor(at::Tensor const&amp;, at::Tensor const&amp;, std::optional&lt;at::Tensor&gt; const&amp;, c10::ArrayRef&lt;c10::SymInt&gt;, c10::ArrayRef&lt;c10::SymInt&gt;, c10::ArrayRef&lt;c10::SymInt&gt;, bool, c10::ArrayRef&lt;c10::SymInt&gt;, c10::SymInt, bool, bool, bool, bool)&gt;::call (libtorch_cpu.so) (123 samples, 1.90%)</title><rect x="35.1393%" y="532" width="1.9040%" height="15" fill="rgb(225,211,22)" fg:x="2270" fg:w="123"/><text x="35.3893%" y="542.50">c..</text></g><g><title>at::(anonymous namespace)::(anonymous namespace)::wrapper_CompositeExplicitAutograd___convolution (libtorch_cpu.so) (123 samples, 1.90%)</title><rect x="35.1393%" y="548" width="1.9040%" height="15" fill="rgb(251,179,42)" fg:x="2270" fg:w="123"/><text x="35.3893%" y="558.50">a..</text></g><g><title>at::native::_convolution (libtorch_cpu.so) (123 samples, 1.90%)</title><rect x="35.1393%" y="564" width="1.9040%" height="15" fill="rgb(208,216,51)" fg:x="2270" fg:w="123"/><text x="35.3893%" y="574.50">a..</text></g><g><title>at::_ops::mkldnn_convolution::call (libtorch_cpu.so) (123 samples, 1.90%)</title><rect x="35.1393%" y="580" width="1.9040%" height="15" fill="rgb(235,36,11)" fg:x="2270" fg:w="123"/><text x="35.3893%" y="590.50">a..</text></g><g><title>c10::impl::wrap_kernel_functor_unboxed_&lt;c10::impl::detail::WrapFunctionIntoFunctor_&lt;c10::CompileTimeFunctionPointer&lt;at::Tensor(at::Tensor const&amp;, at::Tensor const&amp;, std::optional&lt;at::Tensor&gt; const&amp;, c10::ArrayRef&lt;c10::SymInt&gt;, c10::ArrayRef&lt;c10::SymInt&gt;, c10::ArrayRef&lt;c10::SymInt&gt;, c10::SymInt), &amp;at::(anonymous namespace)::(anonymous namespace)::wrapper_CompositeExplicitAutograd__mkldnn_convolution(at::Tensor const&amp;, at::Tensor const&amp;, std::optional&lt;at::Tensor&gt; const&amp;, c10::ArrayRef&lt;c10::SymInt&gt;, c10::ArrayRef&lt;c10::SymInt&gt;, c10::ArrayRef&lt;c10::SymInt&gt;, c10::SymInt)&gt;, at::Tensor, c10::guts::typelist::typelist&lt;at::Tensor const&amp;, at::Tensor const&amp;, std::optional&lt;at::Tensor&gt; const&amp;, c10::ArrayRef&lt;c10::SymInt&gt;, c10::ArrayRef&lt;c10::SymInt&gt;, c10::ArrayRef&lt;c10::SymInt&gt;, c10::SymInt&gt; &gt;, at::Tensor(at::Tensor const&amp;, at::Tensor const&amp;, std::optional&lt;at::Tensor&gt; const&amp;, c10::ArrayRef&lt;c10::SymInt&gt;, c10::ArrayRef&lt;c10::SymInt&gt;, c10::ArrayRef&lt;c10::SymInt&gt;, c10::SymInt)&gt;::call (libtorch_cpu.so) (123 samples, 1.90%)</title><rect x="35.1393%" y="596" width="1.9040%" height="15" fill="rgb(213,189,28)" fg:x="2270" fg:w="123"/><text x="35.3893%" y="606.50">c..</text></g><g><title>at::(anonymous namespace)::(anonymous namespace)::wrapper_CompositeExplicitAutograd__mkldnn_convolution (libtorch_cpu.so) (123 samples, 1.90%)</title><rect x="35.1393%" y="612" width="1.9040%" height="15" fill="rgb(227,203,42)" fg:x="2270" fg:w="123"/><text x="35.3893%" y="622.50">a..</text></g><g><title>at::native::mkldnn_convolution (libtorch_cpu.so) (123 samples, 1.90%)</title><rect x="35.1393%" y="628" width="1.9040%" height="15" fill="rgb(244,72,36)" fg:x="2270" fg:w="123"/><text x="35.3893%" y="638.50">a..</text></g><g><title>at::native::_mkldnn_convolution (libtorch_cpu.so) (123 samples, 1.90%)</title><rect x="35.1393%" y="644" width="1.9040%" height="15" fill="rgb(213,53,17)" fg:x="2270" fg:w="123"/><text x="35.3893%" y="654.50">a..</text></g><g><title>at::native::mkldnn_to_dense (libtorch_cpu.so) (9 samples, 0.14%)</title><rect x="36.9040%" y="660" width="0.1393%" height="15" fill="rgb(207,167,3)" fg:x="2384" fg:w="9"/><text x="37.1540%" y="670.50"></text></g><g><title>ideep::tensor::to_public (libtorch_cpu.so) (9 samples, 0.14%)</title><rect x="36.9040%" y="676" width="0.1393%" height="15" fill="rgb(216,98,30)" fg:x="2384" fg:w="9"/><text x="37.1540%" y="686.50"></text></g><g><title>ideep::tensor::reorder_to (libtorch_cpu.so) (9 samples, 0.14%)</title><rect x="36.9040%" y="692" width="0.1393%" height="15" fill="rgb(236,123,15)" fg:x="2384" fg:w="9"/><text x="37.1540%" y="702.50"></text></g><g><title>dnnl::primitive::execute (libtorch_cpu.so) (9 samples, 0.14%)</title><rect x="36.9040%" y="708" width="0.1393%" height="15" fill="rgb(248,81,50)" fg:x="2384" fg:w="9"/><text x="37.1540%" y="718.50"></text></g><g><title>dnnl_primitive_execute (libtorch_cpu.so) (9 samples, 0.14%)</title><rect x="36.9040%" y="724" width="0.1393%" height="15" fill="rgb(214,120,4)" fg:x="2384" fg:w="9"/><text x="37.1540%" y="734.50"></text></g><g><title>dnnl::impl::primitive_execute (libtorch_cpu.so) (9 samples, 0.14%)</title><rect x="36.9040%" y="740" width="0.1393%" height="15" fill="rgb(208,179,34)" fg:x="2384" fg:w="9"/><text x="37.1540%" y="750.50"></text></g><g><title>dnnl_primitive::execute (libtorch_cpu.so) (9 samples, 0.14%)</title><rect x="36.9040%" y="756" width="0.1393%" height="15" fill="rgb(227,140,7)" fg:x="2384" fg:w="9"/><text x="37.1540%" y="766.50"></text></g><g><title>dnnl::impl::cpu::x64::jit_blk_reorder_t::execute (libtorch_cpu.so) (9 samples, 0.14%)</title><rect x="36.9040%" y="772" width="0.1393%" height="15" fill="rgb(214,22,6)" fg:x="2384" fg:w="9"/><text x="37.1540%" y="782.50"></text></g><g><title>at::native::batch_norm_cpu_transform_input_template&lt;float, float&gt; (libtorch_cpu.so) (10 samples, 0.15%)</title><rect x="37.0898%" y="564" width="0.1548%" height="15" fill="rgb(207,137,27)" fg:x="2396" fg:w="10"/><text x="37.3398%" y="574.50"></text></g><g><title>at::native::(anonymous namespace)::batch_norm_cpu_kernel (libtorch_cpu.so) (10 samples, 0.15%)</title><rect x="37.0898%" y="580" width="0.1548%" height="15" fill="rgb(210,8,46)" fg:x="2396" fg:w="10"/><text x="37.3398%" y="590.50"></text></g><g><title>0x77d25141ca9d (libgomp-c9fef706.so.1) (7 samples, 0.11%)</title><rect x="37.3684%" y="596" width="0.1084%" height="15" fill="rgb(240,16,54)" fg:x="2414" fg:w="7"/><text x="37.6184%" y="606.50"></text></g><g><title>0x77d25141e02a (libgomp-c9fef706.so.1) (7 samples, 0.11%)</title><rect x="37.3684%" y="612" width="0.1084%" height="15" fill="rgb(211,209,29)" fg:x="2414" fg:w="7"/><text x="37.6184%" y="622.50"></text></g><g><title>forward (torchvision/models/resnet.py:93) (38 samples, 0.59%)</title><rect x="37.0433%" y="260" width="0.5882%" height="15" fill="rgb(226,228,24)" fg:x="2393" fg:w="38"/><text x="37.2933%" y="270.50"></text></g><g><title>_wrapped_call_impl (torch/nn/modules/module.py:1751) (38 samples, 0.59%)</title><rect x="37.0433%" y="276" width="0.5882%" height="15" fill="rgb(222,84,9)" fg:x="2393" fg:w="38"/><text x="37.2933%" y="286.50"></text></g><g><title>_call_impl (torch/nn/modules/module.py:1762) (38 samples, 0.59%)</title><rect x="37.0433%" y="292" width="0.5882%" height="15" fill="rgb(234,203,30)" fg:x="2393" fg:w="38"/><text x="37.2933%" y="302.50"></text></g><g><title>forward (torch/nn/modules/batchnorm.py:193) (37 samples, 0.57%)</title><rect x="37.0588%" y="308" width="0.5728%" height="15" fill="rgb(238,109,14)" fg:x="2394" fg:w="37"/><text x="37.3088%" y="318.50"></text></g><g><title>batch_norm (torch/nn/functional.py:2831) (37 samples, 0.57%)</title><rect x="37.0588%" y="324" width="0.5728%" height="15" fill="rgb(233,206,34)" fg:x="2394" fg:w="37"/><text x="37.3088%" y="334.50"></text></g><g><title>torch::autograd::THPVariable_batch_norm (libtorch_python.so) (35 samples, 0.54%)</title><rect x="37.0898%" y="340" width="0.5418%" height="15" fill="rgb(220,167,47)" fg:x="2396" fg:w="35"/><text x="37.3398%" y="350.50"></text></g><g><title>at::_ops::batch_norm::call (libtorch_cpu.so) (35 samples, 0.54%)</title><rect x="37.0898%" y="356" width="0.5418%" height="15" fill="rgb(238,105,10)" fg:x="2396" fg:w="35"/><text x="37.3398%" y="366.50"></text></g><g><title>c10::impl::wrap_kernel_functor_unboxed_&lt;c10::impl::detail::WrapFunctionIntoFunctor_&lt;c10::CompileTimeFunctionPointer&lt;at::Tensor(at::Tensor const&amp;, std::optional&lt;at::Tensor&gt; const&amp;, std::optional&lt;at::Tensor&gt; const&amp;, std::optional&lt;at::Tensor&gt; const&amp;, std::optional&lt;at::Tensor&gt; const&amp;, bool, double, double, bool), &amp;at::(anonymous namespace)::(anonymous namespace)::wrapper_CompositeImplicitAutograd__batch_norm(at::Tensor const&amp;, std::optional&lt;at::Tensor&gt; const&amp;, std::optional&lt;at::Tensor&gt; const&amp;, std::optional&lt;at::Tensor&gt; const&amp;, std::optional&lt;at::Tensor&gt; const&amp;, bool, double, double, bool)&gt;, at::Tensor, c10::guts::typelist::typelist&lt;at::Tensor const&amp;, std::optional&lt;at::Tensor&gt; const&amp;, std::optional&lt;at::Tensor&gt; const&amp;, std::optional&lt;at::Tensor&gt; const&amp;, std::optional&lt;at::Tensor&gt; const&amp;, bool, double, double, bool&gt; &gt;, at::Tensor(at::Tensor const&amp;, std::optional&lt;at::Tensor&gt; const&amp;, std::optional&lt;at::Tensor&gt; const&amp;, std::optional&lt;at::Tensor&gt; const&amp;, std::optional&lt;at::Tensor&gt; const&amp;, bool, double, double, bool)&gt;::call (libtorch_cpu.so) (35 samples, 0.54%)</title><rect x="37.0898%" y="372" width="0.5418%" height="15" fill="rgb(213,227,17)" fg:x="2396" fg:w="35"/><text x="37.3398%" y="382.50"></text></g><g><title>at::native::batch_norm (libtorch_cpu.so) (35 samples, 0.54%)</title><rect x="37.0898%" y="388" width="0.5418%" height="15" fill="rgb(217,132,38)" fg:x="2396" fg:w="35"/><text x="37.3398%" y="398.50"></text></g><g><title>at::_ops::_batch_norm_impl_index::call (libtorch_cpu.so) (35 samples, 0.54%)</title><rect x="37.0898%" y="404" width="0.5418%" height="15" fill="rgb(242,146,4)" fg:x="2396" fg:w="35"/><text x="37.3398%" y="414.50"></text></g><g><title>c10::impl::wrap_kernel_functor_unboxed_&lt;c10::impl::detail::WrapFunctionIntoFunctor_&lt;c10::CompileTimeFunctionPointer&lt;std::tuple&lt;at::Tensor, at::Tensor, at::Tensor, at::Tensor, long&gt; (at::Tensor const&amp;, std::optional&lt;at::Tensor&gt; const&amp;, std::optional&lt;at::Tensor&gt; const&amp;, std::optional&lt;at::Tensor&gt; const&amp;, std::optional&lt;at::Tensor&gt; const&amp;, bool, double, double, bool), &amp;at::(anonymous namespace)::(anonymous namespace)::wrapper_CompositeImplicitAutograd___batch_norm_impl_index(at::Tensor const&amp;, std::optional&lt;at::Tensor&gt; const&amp;, std::optional&lt;at::Tensor&gt; const&amp;, std::optional&lt;at::Tensor&gt; const&amp;, std::optional&lt;at::Tensor&gt; const&amp;, bool, double, double, bool)&gt;, std::tuple&lt;at::Tensor, at::Tensor, at::Tensor, at::Tensor, long&gt;, c10::guts::typelist::typelist&lt;at::Tensor const&amp;, std::optional&lt;at::Tensor&gt; const&amp;, std::optional&lt;at::Tensor&gt; const&amp;, std::optional&lt;at::Tensor&gt; const&amp;, std::optional&lt;at::Tensor&gt; const&amp;, bool, double, double, bool&gt; &gt;, std::tuple&lt;at::Tensor, at::Tensor, at::Tensor, at::Tensor, long&gt; (at::Tensor const&amp;, std::optional&lt;at::Tensor&gt; const&amp;, std::optional&lt;at::Tensor&gt; const&amp;, std::optional&lt;at::Tensor&gt; const&amp;, std::optional&lt;at::Tensor&gt; const&amp;, bool, double, double, bool)&gt;::call (libtorch_cpu.so) (35 samples, 0.54%)</title><rect x="37.0898%" y="420" width="0.5418%" height="15" fill="rgb(212,61,9)" fg:x="2396" fg:w="35"/><text x="37.3398%" y="430.50"></text></g><g><title>at::native::_batch_norm_impl_index (libtorch_cpu.so) (35 samples, 0.54%)</title><rect x="37.0898%" y="436" width="0.5418%" height="15" fill="rgb(247,126,22)" fg:x="2396" fg:w="35"/><text x="37.3398%" y="446.50"></text></g><g><title>at::_ops::native_batch_norm::call (libtorch_cpu.so) (35 samples, 0.54%)</title><rect x="37.0898%" y="452" width="0.5418%" height="15" fill="rgb(220,196,2)" fg:x="2396" fg:w="35"/><text x="37.3398%" y="462.50"></text></g><g><title>c10::impl::wrap_kernel_functor_unboxed_&lt;c10::impl::detail::WrapFunctionIntoFunctor_&lt;c10::CompileTimeFunctionPointer&lt;std::tuple&lt;at::Tensor, at::Tensor, at::Tensor&gt; (c10::DispatchKeySet, at::Tensor const&amp;, std::optional&lt;at::Tensor&gt; const&amp;, std::optional&lt;at::Tensor&gt; const&amp;, std::optional&lt;at::Tensor&gt; const&amp;, std::optional&lt;at::Tensor&gt; const&amp;, bool, double, double), &amp;torch::autograd::VariableType::(anonymous namespace)::native_batch_norm(c10::DispatchKeySet, at::Tensor const&amp;, std::optional&lt;at::Tensor&gt; const&amp;, std::optional&lt;at::Tensor&gt; const&amp;, std::optional&lt;at::Tensor&gt; const&amp;, std::optional&lt;at::Tensor&gt; const&amp;, bool, double, double)&gt;, std::tuple&lt;at::Tensor, at::Tensor, at::Tensor&gt;, c10::guts::typelist::typelist&lt;c10::DispatchKeySet, at::Tensor const&amp;, std::optional&lt;at::Tensor&gt; const&amp;, std::optional&lt;at::Tensor&gt; const&amp;, std::optional&lt;at::Tensor&gt; const&amp;, std::optional&lt;at::Tensor&gt; const&amp;, bool, double, double&gt; &gt;, std::tuple&lt;at::Tensor, at::Tensor, at::Tensor&gt; (c10::DispatchKeySet, at::Tensor const&amp;, std::optional&lt;at::Tensor&gt; const&amp;, std::optional&lt;at::Tensor&gt; const&amp;, std::optional&lt;at::Tensor&gt; const&amp;, std::optional&lt;at::Tensor&gt; const&amp;, bool, double, double)&gt;::call (libtorch_cpu.so) (35 samples, 0.54%)</title><rect x="37.0898%" y="468" width="0.5418%" height="15" fill="rgb(208,46,4)" fg:x="2396" fg:w="35"/><text x="37.3398%" y="478.50"></text></g><g><title>torch::autograd::VariableType::(anonymous namespace)::native_batch_norm (libtorch_cpu.so) (35 samples, 0.54%)</title><rect x="37.0898%" y="484" width="0.5418%" height="15" fill="rgb(252,104,46)" fg:x="2396" fg:w="35"/><text x="37.3398%" y="494.50"></text></g><g><title>at::_ops::native_batch_norm::redispatch (libtorch_cpu.so) (35 samples, 0.54%)</title><rect x="37.0898%" y="500" width="0.5418%" height="15" fill="rgb(237,152,48)" fg:x="2396" fg:w="35"/><text x="37.3398%" y="510.50"></text></g><g><title>c10::impl::wrap_kernel_functor_unboxed_&lt;c10::impl::detail::WrapFunctionIntoFunctor_&lt;c10::CompileTimeFunctionPointer&lt;std::tuple&lt;at::Tensor, at::Tensor, at::Tensor&gt; (at::Tensor const&amp;, std::optional&lt;at::Tensor&gt; const&amp;, std::optional&lt;at::Tensor&gt; const&amp;, std::optional&lt;at::Tensor&gt; const&amp;, std::optional&lt;at::Tensor&gt; const&amp;, bool, double, double), &amp;at::(anonymous namespace)::(anonymous namespace)::wrapper_CPU__native_batch_norm(at::Tensor const&amp;, std::optional&lt;at::Tensor&gt; const&amp;, std::optional&lt;at::Tensor&gt; const&amp;, std::optional&lt;at::Tensor&gt; const&amp;, std::optional&lt;at::Tensor&gt; const&amp;, bool, double, double)&gt;, std::tuple&lt;at::Tensor, at::Tensor, at::Tensor&gt;, c10::guts::typelist::typelist&lt;at::Tensor const&amp;, std::optional&lt;at::Tensor&gt; const&amp;, std::optional&lt;at::Tensor&gt; const&amp;, std::optional&lt;at::Tensor&gt; const&amp;, std::optional&lt;at::Tensor&gt; const&amp;, bool, double, double&gt; &gt;, std::tuple&lt;at::Tensor, at::Tensor, at::Tensor&gt; (at::Tensor const&amp;, std::optional&lt;at::Tensor&gt; const&amp;, std::optional&lt;at::Tensor&gt; const&amp;, std::optional&lt;at::Tensor&gt; const&amp;, std::optional&lt;at::Tensor&gt; const&amp;, bool, double, double)&gt;::call (libtorch_cpu.so) (35 samples, 0.54%)</title><rect x="37.0898%" y="516" width="0.5418%" height="15" fill="rgb(221,59,37)" fg:x="2396" fg:w="35"/><text x="37.3398%" y="526.50"></text></g><g><title>at::native::batch_norm_cpu (libtorch_cpu.so) (35 samples, 0.54%)</title><rect x="37.0898%" y="532" width="0.5418%" height="15" fill="rgb(209,202,51)" fg:x="2396" fg:w="35"/><text x="37.3398%" y="542.50"></text></g><g><title>at::native::batch_norm_cpu_out (libtorch_cpu.so) (35 samples, 0.54%)</title><rect x="37.0898%" y="548" width="0.5418%" height="15" fill="rgb(228,81,30)" fg:x="2396" fg:w="35"/><text x="37.3398%" y="558.50"></text></g><g><title>at::native::batch_norm_cpu_update_stats_template&lt;float, float, at::native::InvStd&gt; (libtorch_cpu.so) (25 samples, 0.39%)</title><rect x="37.2446%" y="564" width="0.3870%" height="15" fill="rgb(227,42,39)" fg:x="2406" fg:w="25"/><text x="37.4946%" y="574.50"></text></g><g><title>at::native::(anonymous namespace)::batch_norm_cpu_collect_stats_kernel (libtorch_cpu.so) (17 samples, 0.26%)</title><rect x="37.3684%" y="580" width="0.2632%" height="15" fill="rgb(221,26,2)" fg:x="2414" fg:w="17"/><text x="37.6184%" y="590.50"></text></g><g><title>GOMP_parallel (libgomp-c9fef706.so.1) (9 samples, 0.14%)</title><rect x="37.4923%" y="596" width="0.1393%" height="15" fill="rgb(254,61,31)" fg:x="2422" fg:w="9"/><text x="37.7423%" y="606.50"></text></g><g><title>forward (torchvision/models/resnet.py:94) (12 samples, 0.19%)</title><rect x="37.6316%" y="260" width="0.1858%" height="15" fill="rgb(222,173,38)" fg:x="2431" fg:w="12"/><text x="37.8816%" y="270.50"></text></g><g><title>_wrapped_call_impl (torch/nn/modules/module.py:1751) (12 samples, 0.19%)</title><rect x="37.6316%" y="276" width="0.1858%" height="15" fill="rgb(218,50,12)" fg:x="2431" fg:w="12"/><text x="37.8816%" y="286.50"></text></g><g><title>_call_impl (torch/nn/modules/module.py:1762) (12 samples, 0.19%)</title><rect x="37.6316%" y="292" width="0.1858%" height="15" fill="rgb(223,88,40)" fg:x="2431" fg:w="12"/><text x="37.8816%" y="302.50"></text></g><g><title>forward (torch/nn/modules/activation.py:133) (12 samples, 0.19%)</title><rect x="37.6316%" y="308" width="0.1858%" height="15" fill="rgb(237,54,19)" fg:x="2431" fg:w="12"/><text x="37.8816%" y="318.50"></text></g><g><title>relu (torch/nn/functional.py:1702) (12 samples, 0.19%)</title><rect x="37.6316%" y="324" width="0.1858%" height="15" fill="rgb(251,129,25)" fg:x="2431" fg:w="12"/><text x="37.8816%" y="334.50"></text></g><g><title>torch::autograd::THPVariable_relu_ (libtorch_python.so) (12 samples, 0.19%)</title><rect x="37.6316%" y="340" width="0.1858%" height="15" fill="rgb(238,97,19)" fg:x="2431" fg:w="12"/><text x="37.8816%" y="350.50"></text></g><g><title>at::_ops::relu_::call (libtorch_cpu.so) (12 samples, 0.19%)</title><rect x="37.6316%" y="356" width="0.1858%" height="15" fill="rgb(240,169,18)" fg:x="2431" fg:w="12"/><text x="37.8816%" y="366.50"></text></g><g><title>torch::autograd::VariableType::(anonymous namespace)::relu_ (libtorch_cpu.so) (12 samples, 0.19%)</title><rect x="37.6316%" y="372" width="0.1858%" height="15" fill="rgb(230,187,49)" fg:x="2431" fg:w="12"/><text x="37.8816%" y="382.50"></text></g><g><title>c10::impl::wrap_kernel_functor_unboxed_&lt;c10::impl::detail::WrapFunctionIntoFunctor_&lt;c10::CompileTimeFunctionPointer&lt;at::Tensor&amp; (c10::DispatchKeySet, at::Tensor&amp;), &amp;torch::ADInplaceOrView::(anonymous namespace)::relu_(c10::DispatchKeySet, at::Tensor&amp;)&gt;, at::Tensor&amp;, c10::guts::typelist::typelist&lt;c10::DispatchKeySet, at::Tensor&amp;&gt; &gt;, at::Tensor&amp; (c10::DispatchKeySet, at::Tensor&amp;)&gt;::call (libtorch_cpu.so) (12 samples, 0.19%)</title><rect x="37.6316%" y="388" width="0.1858%" height="15" fill="rgb(209,44,26)" fg:x="2431" fg:w="12"/><text x="37.8816%" y="398.50"></text></g><g><title>at::native::relu_ (libtorch_cpu.so) (12 samples, 0.19%)</title><rect x="37.6316%" y="404" width="0.1858%" height="15" fill="rgb(244,0,6)" fg:x="2431" fg:w="12"/><text x="37.8816%" y="414.50"></text></g><g><title>at::_ops::clamp_min_::call (libtorch_cpu.so) (12 samples, 0.19%)</title><rect x="37.6316%" y="420" width="0.1858%" height="15" fill="rgb(248,18,21)" fg:x="2431" fg:w="12"/><text x="37.8816%" y="430.50"></text></g><g><title>at::(anonymous namespace)::wrapper_CPU_clamp_min_ (libtorch_cpu.so) (12 samples, 0.19%)</title><rect x="37.6316%" y="436" width="0.1858%" height="15" fill="rgb(245,180,19)" fg:x="2431" fg:w="12"/><text x="37.8816%" y="446.50"></text></g><g><title>at::native::structured_clamp_min_out::impl (libtorch_cpu.so) (11 samples, 0.17%)</title><rect x="37.6471%" y="452" width="0.1703%" height="15" fill="rgb(252,118,36)" fg:x="2432" fg:w="11"/><text x="37.8971%" y="462.50"></text></g><g><title>at::native::(anonymous namespace)::clamp_min_scalar_kernel_impl (libtorch_cpu.so) (11 samples, 0.17%)</title><rect x="37.6471%" y="468" width="0.1703%" height="15" fill="rgb(210,224,19)" fg:x="2432" fg:w="11"/><text x="37.8971%" y="478.50"></text></g><g><title>at::TensorIteratorBase::for_each (libtorch_cpu.so) (10 samples, 0.15%)</title><rect x="37.6625%" y="484" width="0.1548%" height="15" fill="rgb(218,30,24)" fg:x="2433" fg:w="10"/><text x="37.9125%" y="494.50"></text></g><g><title>0x77d25141ca9d (libgomp-c9fef706.so.1) (9 samples, 0.14%)</title><rect x="37.8483%" y="788" width="0.1393%" height="15" fill="rgb(219,75,50)" fg:x="2445" fg:w="9"/><text x="38.0983%" y="798.50"></text></g><g><title>0x77d25141e02a (libgomp-c9fef706.so.1) (9 samples, 0.14%)</title><rect x="37.8483%" y="804" width="0.1393%" height="15" fill="rgb(234,72,50)" fg:x="2445" fg:w="9"/><text x="38.0983%" y="814.50"></text></g><g><title>dnnl::primitive::execute (libtorch_cpu.so) (133 samples, 2.06%)</title><rect x="37.8328%" y="692" width="2.0588%" height="15" fill="rgb(219,100,48)" fg:x="2444" fg:w="133"/><text x="38.0828%" y="702.50">d..</text></g><g><title>dnnl_primitive_execute (libtorch_cpu.so) (133 samples, 2.06%)</title><rect x="37.8328%" y="708" width="2.0588%" height="15" fill="rgb(253,5,41)" fg:x="2444" fg:w="133"/><text x="38.0828%" y="718.50">d..</text></g><g><title>dnnl::impl::primitive_execute (libtorch_cpu.so) (133 samples, 2.06%)</title><rect x="37.8328%" y="724" width="2.0588%" height="15" fill="rgb(247,181,11)" fg:x="2444" fg:w="133"/><text x="38.0828%" y="734.50">d..</text></g><g><title>dnnl_primitive::execute (libtorch_cpu.so) (133 samples, 2.06%)</title><rect x="37.8328%" y="740" width="2.0588%" height="15" fill="rgb(222,223,25)" fg:x="2444" fg:w="133"/><text x="38.0828%" y="750.50">d..</text></g><g><title>dnnl::impl::cpu::x64::jit_avx2_convolution_fwd_t::execute (libtorch_cpu.so) (133 samples, 2.06%)</title><rect x="37.8328%" y="756" width="2.0588%" height="15" fill="rgb(214,198,28)" fg:x="2444" fg:w="133"/><text x="38.0828%" y="766.50">d..</text></g><g><title>dnnl::impl::cpu::x64::jit_avx2_convolution_fwd_t::execute_forward (libtorch_cpu.so) (133 samples, 2.06%)</title><rect x="37.8328%" y="772" width="2.0588%" height="15" fill="rgb(230,46,43)" fg:x="2444" fg:w="133"/><text x="38.0828%" y="782.50">d..</text></g><g><title>GOMP_parallel (libgomp-c9fef706.so.1) (123 samples, 1.90%)</title><rect x="37.9876%" y="788" width="1.9040%" height="15" fill="rgb(233,65,53)" fg:x="2454" fg:w="123"/><text x="38.2376%" y="798.50">G..</text></g><g><title>dnnl::impl::parallel (libtorch_cpu.so) (119 samples, 1.84%)</title><rect x="38.0495%" y="804" width="1.8421%" height="15" fill="rgb(221,121,27)" fg:x="2458" fg:w="119"/><text x="38.2995%" y="814.50">d..</text></g><g><title>dnnl::impl::cpu::x64::jit_avx2_convolution_fwd_t::execute_forward(dnnl::impl::exec_ctx_t const&amp;) const::{lambda(int, int)#1}::operator() const (libtorch_cpu.so) (119 samples, 1.84%)</title><rect x="38.0495%" y="820" width="1.8421%" height="15" fill="rgb(247,70,47)" fg:x="2458" fg:w="119"/><text x="38.2995%" y="830.50">d..</text></g><g><title>dnnl::impl::cpu::x64::jit_blk_reorder_t::execute (libtorch_cpu.so) (10 samples, 0.15%)</title><rect x="39.9071%" y="788" width="0.1548%" height="15" fill="rgb(228,85,35)" fg:x="2578" fg:w="10"/><text x="40.1571%" y="798.50"></text></g><g><title>dnnl::primitive::execute (libtorch_cpu.so) (24 samples, 0.37%)</title><rect x="39.9071%" y="724" width="0.3715%" height="15" fill="rgb(209,50,18)" fg:x="2578" fg:w="24"/><text x="40.1571%" y="734.50"></text></g><g><title>dnnl_primitive_execute (libtorch_cpu.so) (24 samples, 0.37%)</title><rect x="39.9071%" y="740" width="0.3715%" height="15" fill="rgb(250,19,35)" fg:x="2578" fg:w="24"/><text x="40.1571%" y="750.50"></text></g><g><title>dnnl::impl::primitive_execute (libtorch_cpu.so) (24 samples, 0.37%)</title><rect x="39.9071%" y="756" width="0.3715%" height="15" fill="rgb(253,107,29)" fg:x="2578" fg:w="24"/><text x="40.1571%" y="766.50"></text></g><g><title>dnnl_primitive::execute (libtorch_cpu.so) (24 samples, 0.37%)</title><rect x="39.9071%" y="772" width="0.3715%" height="15" fill="rgb(252,179,29)" fg:x="2578" fg:w="24"/><text x="40.1571%" y="782.50"></text></g><g><title>dnnl::impl::cpu::x64::jit_uni_reorder_t::execute (libtorch_cpu.so) (14 samples, 0.22%)</title><rect x="40.0619%" y="788" width="0.2167%" height="15" fill="rgb(238,194,6)" fg:x="2588" fg:w="14"/><text x="40.3119%" y="798.50"></text></g><g><title>dnnl::impl::cpu::x64::jit_uni_reorder_t::omp_driver (libtorch_cpu.so) (14 samples, 0.22%)</title><rect x="40.0619%" y="804" width="0.2167%" height="15" fill="rgb(238,164,29)" fg:x="2588" fg:w="14"/><text x="40.3119%" y="814.50"></text></g><g><title>GOMP_parallel (libgomp-c9fef706.so.1) (8 samples, 0.12%)</title><rect x="40.1548%" y="820" width="0.1238%" height="15" fill="rgb(224,25,9)" fg:x="2594" fg:w="8"/><text x="40.4048%" y="830.50"></text></g><g><title>at::native::_mkldnn_convolution_out (libtorch_cpu.so) (159 samples, 2.46%)</title><rect x="37.8328%" y="660" width="2.4613%" height="15" fill="rgb(244,153,23)" fg:x="2444" fg:w="159"/><text x="38.0828%" y="670.50">at..</text></g><g><title>ideep::convolution_forward::compute_dispatch&lt;false, true, true&gt; (libtorch_cpu.so) (159 samples, 2.46%)</title><rect x="37.8328%" y="676" width="2.4613%" height="15" fill="rgb(212,203,14)" fg:x="2444" fg:w="159"/><text x="38.0828%" y="686.50">id..</text></g><g><title>ideep::tensor::reorder_if_differ_in (libtorch_cpu.so) (25 samples, 0.39%)</title><rect x="39.9071%" y="692" width="0.3870%" height="15" fill="rgb(220,164,20)" fg:x="2578" fg:w="25"/><text x="40.1571%" y="702.50"></text></g><g><title>ideep::tensor::reorder_to (libtorch_cpu.so) (25 samples, 0.39%)</title><rect x="39.9071%" y="708" width="0.3870%" height="15" fill="rgb(222,203,48)" fg:x="2578" fg:w="25"/><text x="40.1571%" y="718.50"></text></g><g><title>at::native::mkldnn_to_dense (libtorch_cpu.so) (13 samples, 0.20%)</title><rect x="40.2941%" y="660" width="0.2012%" height="15" fill="rgb(215,159,22)" fg:x="2603" fg:w="13"/><text x="40.5441%" y="670.50"></text></g><g><title>ideep::tensor::to_public (libtorch_cpu.so) (12 samples, 0.19%)</title><rect x="40.3096%" y="676" width="0.1858%" height="15" fill="rgb(216,183,47)" fg:x="2604" fg:w="12"/><text x="40.5596%" y="686.50"></text></g><g><title>ideep::tensor::reorder_to (libtorch_cpu.so) (12 samples, 0.19%)</title><rect x="40.3096%" y="692" width="0.1858%" height="15" fill="rgb(229,195,25)" fg:x="2604" fg:w="12"/><text x="40.5596%" y="702.50"></text></g><g><title>dnnl::primitive::execute (libtorch_cpu.so) (12 samples, 0.19%)</title><rect x="40.3096%" y="708" width="0.1858%" height="15" fill="rgb(224,132,51)" fg:x="2604" fg:w="12"/><text x="40.5596%" y="718.50"></text></g><g><title>dnnl_primitive_execute (libtorch_cpu.so) (12 samples, 0.19%)</title><rect x="40.3096%" y="724" width="0.1858%" height="15" fill="rgb(240,63,7)" fg:x="2604" fg:w="12"/><text x="40.5596%" y="734.50"></text></g><g><title>dnnl::impl::primitive_execute (libtorch_cpu.so) (12 samples, 0.19%)</title><rect x="40.3096%" y="740" width="0.1858%" height="15" fill="rgb(249,182,41)" fg:x="2604" fg:w="12"/><text x="40.5596%" y="750.50"></text></g><g><title>dnnl_primitive::execute (libtorch_cpu.so) (12 samples, 0.19%)</title><rect x="40.3096%" y="756" width="0.1858%" height="15" fill="rgb(243,47,26)" fg:x="2604" fg:w="12"/><text x="40.5596%" y="766.50"></text></g><g><title>dnnl::impl::cpu::x64::jit_blk_reorder_t::execute (libtorch_cpu.so) (12 samples, 0.19%)</title><rect x="40.3096%" y="772" width="0.1858%" height="15" fill="rgb(233,48,2)" fg:x="2604" fg:w="12"/><text x="40.5596%" y="782.50"></text></g><g><title>forward (torchvision/models/resnet.py:96) (174 samples, 2.69%)</title><rect x="37.8173%" y="260" width="2.6935%" height="15" fill="rgb(244,165,34)" fg:x="2443" fg:w="174"/><text x="38.0673%" y="270.50">fo..</text></g><g><title>_wrapped_call_impl (torch/nn/modules/module.py:1751) (174 samples, 2.69%)</title><rect x="37.8173%" y="276" width="2.6935%" height="15" fill="rgb(207,89,7)" fg:x="2443" fg:w="174"/><text x="38.0673%" y="286.50">_w..</text></g><g><title>_call_impl (torch/nn/modules/module.py:1762) (174 samples, 2.69%)</title><rect x="37.8173%" y="292" width="2.6935%" height="15" fill="rgb(244,117,36)" fg:x="2443" fg:w="174"/><text x="38.0673%" y="302.50">_c..</text></g><g><title>forward (torch/nn/modules/conv.py:554) (174 samples, 2.69%)</title><rect x="37.8173%" y="308" width="2.6935%" height="15" fill="rgb(226,144,34)" fg:x="2443" fg:w="174"/><text x="38.0673%" y="318.50">fo..</text></g><g><title>_conv_forward (torch/nn/modules/conv.py:550) (174 samples, 2.69%)</title><rect x="37.8173%" y="324" width="2.6935%" height="15" fill="rgb(213,23,19)" fg:x="2443" fg:w="174"/><text x="38.0673%" y="334.50">_c..</text></g><g><title>torch::autograd::THPVariable_conv2d (libtorch_python.so) (174 samples, 2.69%)</title><rect x="37.8173%" y="340" width="2.6935%" height="15" fill="rgb(217,75,12)" fg:x="2443" fg:w="174"/><text x="38.0673%" y="350.50">to..</text></g><g><title>at::_ops::conv2d::call (libtorch_cpu.so) (174 samples, 2.69%)</title><rect x="37.8173%" y="356" width="2.6935%" height="15" fill="rgb(224,159,17)" fg:x="2443" fg:w="174"/><text x="38.0673%" y="366.50">at..</text></g><g><title>c10::impl::wrap_kernel_functor_unboxed_&lt;c10::impl::detail::WrapFunctionIntoFunctor_&lt;c10::CompileTimeFunctionPointer&lt;at::Tensor(at::Tensor const&amp;, at::Tensor const&amp;, std::optional&lt;at::Tensor&gt; const&amp;, c10::ArrayRef&lt;c10::SymInt&gt;, c10::ArrayRef&lt;c10::SymInt&gt;, c10::ArrayRef&lt;c10::SymInt&gt;, c10::SymInt), &amp;at::(anonymous namespace)::(anonymous namespace)::wrapper_CompositeImplicitAutograd__conv2d(at::Tensor const&amp;, at::Tensor const&amp;, std::optional&lt;at::Tensor&gt; const&amp;, c10::ArrayRef&lt;c10::SymInt&gt;, c10::ArrayRef&lt;c10::SymInt&gt;, c10::ArrayRef&lt;c10::SymInt&gt;, c10::SymInt)&gt;, at::Tensor, c10::guts::typelist::typelist&lt;at::Tensor const&amp;, at::Tensor const&amp;, std::optional&lt;at::Tensor&gt; const&amp;, c10::ArrayRef&lt;c10::SymInt&gt;, c10::ArrayRef&lt;c10::SymInt&gt;, c10::ArrayRef&lt;c10::SymInt&gt;, c10::SymInt&gt; &gt;, at::Tensor(at::Tensor const&amp;, at::Tensor const&amp;, std::optional&lt;at::Tensor&gt; const&amp;, c10::ArrayRef&lt;c10::SymInt&gt;, c10::ArrayRef&lt;c10::SymInt&gt;, c10::ArrayRef&lt;c10::SymInt&gt;, c10::SymInt)&gt;::call (libtorch_cpu.so) (174 samples, 2.69%)</title><rect x="37.8173%" y="372" width="2.6935%" height="15" fill="rgb(217,118,1)" fg:x="2443" fg:w="174"/><text x="38.0673%" y="382.50">c1..</text></g><g><title>at::native::conv2d_symint (libtorch_cpu.so) (174 samples, 2.69%)</title><rect x="37.8173%" y="388" width="2.6935%" height="15" fill="rgb(232,180,48)" fg:x="2443" fg:w="174"/><text x="38.0673%" y="398.50">at..</text></g><g><title>at::_ops::convolution::call (libtorch_cpu.so) (174 samples, 2.69%)</title><rect x="37.8173%" y="404" width="2.6935%" height="15" fill="rgb(230,27,33)" fg:x="2443" fg:w="174"/><text x="38.0673%" y="414.50">at..</text></g><g><title>c10::impl::wrap_kernel_functor_unboxed_&lt;c10::impl::detail::WrapFunctionIntoFunctor_&lt;c10::CompileTimeFunctionPointer&lt;at::Tensor(c10::DispatchKeySet, at::Tensor const&amp;, at::Tensor const&amp;, std::optional&lt;at::Tensor&gt; const&amp;, c10::ArrayRef&lt;c10::SymInt&gt;, c10::ArrayRef&lt;c10::SymInt&gt;, c10::ArrayRef&lt;c10::SymInt&gt;, bool, c10::ArrayRef&lt;c10::SymInt&gt;, c10::SymInt), &amp;torch::autograd::VariableType::(anonymous namespace)::convolution(c10::DispatchKeySet, at::Tensor const&amp;, at::Tensor const&amp;, std::optional&lt;at::Tensor&gt; const&amp;, c10::ArrayRef&lt;c10::SymInt&gt;, c10::ArrayRef&lt;c10::SymInt&gt;, c10::ArrayRef&lt;c10::SymInt&gt;, bool, c10::ArrayRef&lt;c10::SymInt&gt;, c10::SymInt)&gt;, at::Tensor, c10::guts::typelist::typelist&lt;c10::DispatchKeySet, at::Tensor const&amp;, at::Tensor const&amp;, std::optional&lt;at::Tensor&gt; const&amp;, c10::ArrayRef&lt;c10::SymInt&gt;, c10::ArrayRef&lt;c10::SymInt&gt;, c10::ArrayRef&lt;c10::SymInt&gt;, bool, c10::ArrayRef&lt;c10::SymInt&gt;, c10::SymInt&gt; &gt;, at::Tensor(c10::DispatchKeySet, at::Tensor const&amp;, at::Tensor const&amp;, std::optional&lt;at::Tensor&gt; const&amp;, c10::ArrayRef&lt;c10::SymInt&gt;, c10::ArrayRef&lt;c10::SymInt&gt;, c10::ArrayRef&lt;c10::SymInt&gt;, bool, c10::ArrayRef&lt;c10::SymInt&gt;, c10::SymInt)&gt;::call (libtorch_cpu.so) (174 samples, 2.69%)</title><rect x="37.8173%" y="420" width="2.6935%" height="15" fill="rgb(205,31,21)" fg:x="2443" fg:w="174"/><text x="38.0673%" y="430.50">c1..</text></g><g><title>torch::autograd::VariableType::(anonymous namespace)::convolution (libtorch_cpu.so) (174 samples, 2.69%)</title><rect x="37.8173%" y="436" width="2.6935%" height="15" fill="rgb(253,59,4)" fg:x="2443" fg:w="174"/><text x="38.0673%" y="446.50">to..</text></g><g><title>at::_ops::convolution::redispatch (libtorch_cpu.so) (174 samples, 2.69%)</title><rect x="37.8173%" y="452" width="2.6935%" height="15" fill="rgb(224,201,9)" fg:x="2443" fg:w="174"/><text x="38.0673%" y="462.50">at..</text></g><g><title>c10::impl::wrap_kernel_functor_unboxed_&lt;c10::impl::detail::WrapFunctionIntoFunctor_&lt;c10::CompileTimeFunctionPointer&lt;at::Tensor(at::Tensor const&amp;, at::Tensor const&amp;, std::optional&lt;at::Tensor&gt; const&amp;, c10::ArrayRef&lt;c10::SymInt&gt;, c10::ArrayRef&lt;c10::SymInt&gt;, c10::ArrayRef&lt;c10::SymInt&gt;, bool, c10::ArrayRef&lt;c10::SymInt&gt;, c10::SymInt), &amp;at::(anonymous namespace)::(anonymous namespace)::wrapper_CompositeExplicitAutograd__convolution(at::Tensor const&amp;, at::Tensor const&amp;, std::optional&lt;at::Tensor&gt; const&amp;, c10::ArrayRef&lt;c10::SymInt&gt;, c10::ArrayRef&lt;c10::SymInt&gt;, c10::ArrayRef&lt;c10::SymInt&gt;, bool, c10::ArrayRef&lt;c10::SymInt&gt;, c10::SymInt)&gt;, at::Tensor, c10::guts::typelist::typelist&lt;at::Tensor const&amp;, at::Tensor const&amp;, std::optional&lt;at::Tensor&gt; const&amp;, c10::ArrayRef&lt;c10::SymInt&gt;, c10::ArrayRef&lt;c10::SymInt&gt;, c10::ArrayRef&lt;c10::SymInt&gt;, bool, c10::ArrayRef&lt;c10::SymInt&gt;, c10::SymInt&gt; &gt;, at::Tensor(at::Tensor const&amp;, at::Tensor const&amp;, std::optional&lt;at::Tensor&gt; const&amp;, c10::ArrayRef&lt;c10::SymInt&gt;, c10::ArrayRef&lt;c10::SymInt&gt;, c10::ArrayRef&lt;c10::SymInt&gt;, bool, c10::ArrayRef&lt;c10::SymInt&gt;, c10::SymInt)&gt;::call (libtorch_cpu.so) (174 samples, 2.69%)</title><rect x="37.8173%" y="468" width="2.6935%" height="15" fill="rgb(229,206,30)" fg:x="2443" fg:w="174"/><text x="38.0673%" y="478.50">c1..</text></g><g><title>at::(anonymous namespace)::(anonymous namespace)::wrapper_CompositeExplicitAutograd__convolution (libtorch_cpu.so) (174 samples, 2.69%)</title><rect x="37.8173%" y="484" width="2.6935%" height="15" fill="rgb(212,67,47)" fg:x="2443" fg:w="174"/><text x="38.0673%" y="494.50">at..</text></g><g><title>at::native::convolution (libtorch_cpu.so) (174 samples, 2.69%)</title><rect x="37.8173%" y="500" width="2.6935%" height="15" fill="rgb(211,96,50)" fg:x="2443" fg:w="174"/><text x="38.0673%" y="510.50">at..</text></g><g><title>at::_ops::_convolution::call (libtorch_cpu.so) (174 samples, 2.69%)</title><rect x="37.8173%" y="516" width="2.6935%" height="15" fill="rgb(252,114,18)" fg:x="2443" fg:w="174"/><text x="38.0673%" y="526.50">at..</text></g><g><title>c10::impl::wrap_kernel_functor_unboxed_&lt;c10::impl::detail::WrapFunctionIntoFunctor_&lt;c10::CompileTimeFunctionPointer&lt;at::Tensor(at::Tensor const&amp;, at::Tensor const&amp;, std::optional&lt;at::Tensor&gt; const&amp;, c10::ArrayRef&lt;c10::SymInt&gt;, c10::ArrayRef&lt;c10::SymInt&gt;, c10::ArrayRef&lt;c10::SymInt&gt;, bool, c10::ArrayRef&lt;c10::SymInt&gt;, c10::SymInt, bool, bool, bool, bool), &amp;at::(anonymous namespace)::(anonymous namespace)::wrapper_CompositeExplicitAutograd___convolution(at::Tensor const&amp;, at::Tensor const&amp;, std::optional&lt;at::Tensor&gt; const&amp;, c10::ArrayRef&lt;c10::SymInt&gt;, c10::ArrayRef&lt;c10::SymInt&gt;, c10::ArrayRef&lt;c10::SymInt&gt;, bool, c10::ArrayRef&lt;c10::SymInt&gt;, c10::SymInt, bool, bool, bool, bool)&gt;, at::Tensor, c10::guts::typelist::typelist&lt;at::Tensor const&amp;, at::Tensor const&amp;, std::optional&lt;at::Tensor&gt; const&amp;, c10::ArrayRef&lt;c10::SymInt&gt;, c10::ArrayRef&lt;c10::SymInt&gt;, c10::ArrayRef&lt;c10::SymInt&gt;, bool, c10::ArrayRef&lt;c10::SymInt&gt;, c10::SymInt, bool, bool, bool, bool&gt; &gt;, at::Tensor(at::Tensor const&amp;, at::Tensor const&amp;, std::optional&lt;at::Tensor&gt; const&amp;, c10::ArrayRef&lt;c10::SymInt&gt;, c10::ArrayRef&lt;c10::SymInt&gt;, c10::ArrayRef&lt;c10::SymInt&gt;, bool, c10::ArrayRef&lt;c10::SymInt&gt;, c10::SymInt, bool, bool, bool, bool)&gt;::call (libtorch_cpu.so) (174 samples, 2.69%)</title><rect x="37.8173%" y="532" width="2.6935%" height="15" fill="rgb(223,58,37)" fg:x="2443" fg:w="174"/><text x="38.0673%" y="542.50">c1..</text></g><g><title>at::(anonymous namespace)::(anonymous namespace)::wrapper_CompositeExplicitAutograd___convolution (libtorch_cpu.so) (174 samples, 2.69%)</title><rect x="37.8173%" y="548" width="2.6935%" height="15" fill="rgb(237,70,4)" fg:x="2443" fg:w="174"/><text x="38.0673%" y="558.50">at..</text></g><g><title>at::native::_convolution (libtorch_cpu.so) (174 samples, 2.69%)</title><rect x="37.8173%" y="564" width="2.6935%" height="15" fill="rgb(244,85,46)" fg:x="2443" fg:w="174"/><text x="38.0673%" y="574.50">at..</text></g><g><title>at::_ops::mkldnn_convolution::call (libtorch_cpu.so) (174 samples, 2.69%)</title><rect x="37.8173%" y="580" width="2.6935%" height="15" fill="rgb(223,39,52)" fg:x="2443" fg:w="174"/><text x="38.0673%" y="590.50">at..</text></g><g><title>c10::impl::wrap_kernel_functor_unboxed_&lt;c10::impl::detail::WrapFunctionIntoFunctor_&lt;c10::CompileTimeFunctionPointer&lt;at::Tensor(at::Tensor const&amp;, at::Tensor const&amp;, std::optional&lt;at::Tensor&gt; const&amp;, c10::ArrayRef&lt;c10::SymInt&gt;, c10::ArrayRef&lt;c10::SymInt&gt;, c10::ArrayRef&lt;c10::SymInt&gt;, c10::SymInt), &amp;at::(anonymous namespace)::(anonymous namespace)::wrapper_CompositeExplicitAutograd__mkldnn_convolution(at::Tensor const&amp;, at::Tensor const&amp;, std::optional&lt;at::Tensor&gt; const&amp;, c10::ArrayRef&lt;c10::SymInt&gt;, c10::ArrayRef&lt;c10::SymInt&gt;, c10::ArrayRef&lt;c10::SymInt&gt;, c10::SymInt)&gt;, at::Tensor, c10::guts::typelist::typelist&lt;at::Tensor const&amp;, at::Tensor const&amp;, std::optional&lt;at::Tensor&gt; const&amp;, c10::ArrayRef&lt;c10::SymInt&gt;, c10::ArrayRef&lt;c10::SymInt&gt;, c10::ArrayRef&lt;c10::SymInt&gt;, c10::SymInt&gt; &gt;, at::Tensor(at::Tensor const&amp;, at::Tensor const&amp;, std::optional&lt;at::Tensor&gt; const&amp;, c10::ArrayRef&lt;c10::SymInt&gt;, c10::ArrayRef&lt;c10::SymInt&gt;, c10::ArrayRef&lt;c10::SymInt&gt;, c10::SymInt)&gt;::call (libtorch_cpu.so) (173 samples, 2.68%)</title><rect x="37.8328%" y="596" width="2.6780%" height="15" fill="rgb(218,200,14)" fg:x="2444" fg:w="173"/><text x="38.0828%" y="606.50">c1..</text></g><g><title>at::(anonymous namespace)::(anonymous namespace)::wrapper_CompositeExplicitAutograd__mkldnn_convolution (libtorch_cpu.so) (173 samples, 2.68%)</title><rect x="37.8328%" y="612" width="2.6780%" height="15" fill="rgb(208,171,16)" fg:x="2444" fg:w="173"/><text x="38.0828%" y="622.50">at..</text></g><g><title>at::native::mkldnn_convolution (libtorch_cpu.so) (173 samples, 2.68%)</title><rect x="37.8328%" y="628" width="2.6780%" height="15" fill="rgb(234,200,18)" fg:x="2444" fg:w="173"/><text x="38.0828%" y="638.50">at..</text></g><g><title>at::native::_mkldnn_convolution (libtorch_cpu.so) (173 samples, 2.68%)</title><rect x="37.8328%" y="644" width="2.6780%" height="15" fill="rgb(228,45,11)" fg:x="2444" fg:w="173"/><text x="38.0828%" y="654.50">at..</text></g><g><title>0x77d25141ca9d (libgomp-c9fef706.so.1) (9 samples, 0.14%)</title><rect x="40.5108%" y="596" width="0.1393%" height="15" fill="rgb(237,182,11)" fg:x="2617" fg:w="9"/><text x="40.7608%" y="606.50"></text></g><g><title>0x77d25141e02a (libgomp-c9fef706.so.1) (9 samples, 0.14%)</title><rect x="40.5108%" y="612" width="0.1393%" height="15" fill="rgb(241,175,49)" fg:x="2617" fg:w="9"/><text x="40.7608%" y="622.50"></text></g><g><title>at::native::batch_norm_cpu_transform_input_template&lt;float, float&gt; (libtorch_cpu.so) (11 samples, 0.17%)</title><rect x="40.5108%" y="564" width="0.1703%" height="15" fill="rgb(247,38,35)" fg:x="2617" fg:w="11"/><text x="40.7608%" y="574.50"></text></g><g><title>at::native::(anonymous namespace)::batch_norm_cpu_kernel (libtorch_cpu.so) (11 samples, 0.17%)</title><rect x="40.5108%" y="580" width="0.1703%" height="15" fill="rgb(228,39,49)" fg:x="2617" fg:w="11"/><text x="40.7608%" y="590.50"></text></g><g><title>_forward_impl (torchvision/models/resnet.py:276) (422 samples, 6.53%)</title><rect x="34.4272%" y="164" width="6.5325%" height="15" fill="rgb(226,101,26)" fg:x="2224" fg:w="422"/><text x="34.6772%" y="174.50">_forward_..</text></g><g><title>_wrapped_call_impl (torch/nn/modules/module.py:1751) (422 samples, 6.53%)</title><rect x="34.4272%" y="180" width="6.5325%" height="15" fill="rgb(206,141,19)" fg:x="2224" fg:w="422"/><text x="34.6772%" y="190.50">_wrapped_..</text></g><g><title>_call_impl (torch/nn/modules/module.py:1762) (422 samples, 6.53%)</title><rect x="34.4272%" y="196" width="6.5325%" height="15" fill="rgb(211,200,13)" fg:x="2224" fg:w="422"/><text x="34.6772%" y="206.50">_call_imp..</text></g><g><title>forward (torch/nn/modules/container.py:240) (422 samples, 6.53%)</title><rect x="34.4272%" y="212" width="6.5325%" height="15" fill="rgb(241,121,6)" fg:x="2224" fg:w="422"/><text x="34.6772%" y="222.50">forward (..</text></g><g><title>_wrapped_call_impl (torch/nn/modules/module.py:1751) (422 samples, 6.53%)</title><rect x="34.4272%" y="228" width="6.5325%" height="15" fill="rgb(234,221,29)" fg:x="2224" fg:w="422"/><text x="34.6772%" y="238.50">_wrapped_..</text></g><g><title>_call_impl (torch/nn/modules/module.py:1762) (422 samples, 6.53%)</title><rect x="34.4272%" y="244" width="6.5325%" height="15" fill="rgb(229,136,5)" fg:x="2224" fg:w="422"/><text x="34.6772%" y="254.50">_call_imp..</text></g><g><title>forward (torchvision/models/resnet.py:97) (29 samples, 0.45%)</title><rect x="40.5108%" y="260" width="0.4489%" height="15" fill="rgb(238,36,11)" fg:x="2617" fg:w="29"/><text x="40.7608%" y="270.50"></text></g><g><title>_wrapped_call_impl (torch/nn/modules/module.py:1751) (29 samples, 0.45%)</title><rect x="40.5108%" y="276" width="0.4489%" height="15" fill="rgb(251,55,41)" fg:x="2617" fg:w="29"/><text x="40.7608%" y="286.50"></text></g><g><title>_call_impl (torch/nn/modules/module.py:1762) (29 samples, 0.45%)</title><rect x="40.5108%" y="292" width="0.4489%" height="15" fill="rgb(242,34,40)" fg:x="2617" fg:w="29"/><text x="40.7608%" y="302.50"></text></g><g><title>forward (torch/nn/modules/batchnorm.py:193) (29 samples, 0.45%)</title><rect x="40.5108%" y="308" width="0.4489%" height="15" fill="rgb(215,42,17)" fg:x="2617" fg:w="29"/><text x="40.7608%" y="318.50"></text></g><g><title>batch_norm (torch/nn/functional.py:2831) (29 samples, 0.45%)</title><rect x="40.5108%" y="324" width="0.4489%" height="15" fill="rgb(207,44,46)" fg:x="2617" fg:w="29"/><text x="40.7608%" y="334.50"></text></g><g><title>torch::autograd::THPVariable_batch_norm (libtorch_python.so) (29 samples, 0.45%)</title><rect x="40.5108%" y="340" width="0.4489%" height="15" fill="rgb(211,206,28)" fg:x="2617" fg:w="29"/><text x="40.7608%" y="350.50"></text></g><g><title>at::_ops::batch_norm::call (libtorch_cpu.so) (29 samples, 0.45%)</title><rect x="40.5108%" y="356" width="0.4489%" height="15" fill="rgb(237,167,16)" fg:x="2617" fg:w="29"/><text x="40.7608%" y="366.50"></text></g><g><title>c10::impl::wrap_kernel_functor_unboxed_&lt;c10::impl::detail::WrapFunctionIntoFunctor_&lt;c10::CompileTimeFunctionPointer&lt;at::Tensor(at::Tensor const&amp;, std::optional&lt;at::Tensor&gt; const&amp;, std::optional&lt;at::Tensor&gt; const&amp;, std::optional&lt;at::Tensor&gt; const&amp;, std::optional&lt;at::Tensor&gt; const&amp;, bool, double, double, bool), &amp;at::(anonymous namespace)::(anonymous namespace)::wrapper_CompositeImplicitAutograd__batch_norm(at::Tensor const&amp;, std::optional&lt;at::Tensor&gt; const&amp;, std::optional&lt;at::Tensor&gt; const&amp;, std::optional&lt;at::Tensor&gt; const&amp;, std::optional&lt;at::Tensor&gt; const&amp;, bool, double, double, bool)&gt;, at::Tensor, c10::guts::typelist::typelist&lt;at::Tensor const&amp;, std::optional&lt;at::Tensor&gt; const&amp;, std::optional&lt;at::Tensor&gt; const&amp;, std::optional&lt;at::Tensor&gt; const&amp;, std::optional&lt;at::Tensor&gt; const&amp;, bool, double, double, bool&gt; &gt;, at::Tensor(at::Tensor const&amp;, std::optional&lt;at::Tensor&gt; const&amp;, std::optional&lt;at::Tensor&gt; const&amp;, std::optional&lt;at::Tensor&gt; const&amp;, std::optional&lt;at::Tensor&gt; const&amp;, bool, double, double, bool)&gt;::call (libtorch_cpu.so) (29 samples, 0.45%)</title><rect x="40.5108%" y="372" width="0.4489%" height="15" fill="rgb(233,66,6)" fg:x="2617" fg:w="29"/><text x="40.7608%" y="382.50"></text></g><g><title>at::native::batch_norm (libtorch_cpu.so) (29 samples, 0.45%)</title><rect x="40.5108%" y="388" width="0.4489%" height="15" fill="rgb(246,123,29)" fg:x="2617" fg:w="29"/><text x="40.7608%" y="398.50"></text></g><g><title>at::_ops::_batch_norm_impl_index::call (libtorch_cpu.so) (29 samples, 0.45%)</title><rect x="40.5108%" y="404" width="0.4489%" height="15" fill="rgb(209,62,40)" fg:x="2617" fg:w="29"/><text x="40.7608%" y="414.50"></text></g><g><title>c10::impl::wrap_kernel_functor_unboxed_&lt;c10::impl::detail::WrapFunctionIntoFunctor_&lt;c10::CompileTimeFunctionPointer&lt;std::tuple&lt;at::Tensor, at::Tensor, at::Tensor, at::Tensor, long&gt; (at::Tensor const&amp;, std::optional&lt;at::Tensor&gt; const&amp;, std::optional&lt;at::Tensor&gt; const&amp;, std::optional&lt;at::Tensor&gt; const&amp;, std::optional&lt;at::Tensor&gt; const&amp;, bool, double, double, bool), &amp;at::(anonymous namespace)::(anonymous namespace)::wrapper_CompositeImplicitAutograd___batch_norm_impl_index(at::Tensor const&amp;, std::optional&lt;at::Tensor&gt; const&amp;, std::optional&lt;at::Tensor&gt; const&amp;, std::optional&lt;at::Tensor&gt; const&amp;, std::optional&lt;at::Tensor&gt; const&amp;, bool, double, double, bool)&gt;, std::tuple&lt;at::Tensor, at::Tensor, at::Tensor, at::Tensor, long&gt;, c10::guts::typelist::typelist&lt;at::Tensor const&amp;, std::optional&lt;at::Tensor&gt; const&amp;, std::optional&lt;at::Tensor&gt; const&amp;, std::optional&lt;at::Tensor&gt; const&amp;, std::optional&lt;at::Tensor&gt; const&amp;, bool, double, double, bool&gt; &gt;, std::tuple&lt;at::Tensor, at::Tensor, at::Tensor, at::Tensor, long&gt; (at::Tensor const&amp;, std::optional&lt;at::Tensor&gt; const&amp;, std::optional&lt;at::Tensor&gt; const&amp;, std::optional&lt;at::Tensor&gt; const&amp;, std::optional&lt;at::Tensor&gt; const&amp;, bool, double, double, bool)&gt;::call (libtorch_cpu.so) (29 samples, 0.45%)</title><rect x="40.5108%" y="420" width="0.4489%" height="15" fill="rgb(218,4,25)" fg:x="2617" fg:w="29"/><text x="40.7608%" y="430.50"></text></g><g><title>at::native::_batch_norm_impl_index (libtorch_cpu.so) (29 samples, 0.45%)</title><rect x="40.5108%" y="436" width="0.4489%" height="15" fill="rgb(253,91,49)" fg:x="2617" fg:w="29"/><text x="40.7608%" y="446.50"></text></g><g><title>at::_ops::native_batch_norm::call (libtorch_cpu.so) (29 samples, 0.45%)</title><rect x="40.5108%" y="452" width="0.4489%" height="15" fill="rgb(228,155,29)" fg:x="2617" fg:w="29"/><text x="40.7608%" y="462.50"></text></g><g><title>c10::impl::wrap_kernel_functor_unboxed_&lt;c10::impl::detail::WrapFunctionIntoFunctor_&lt;c10::CompileTimeFunctionPointer&lt;std::tuple&lt;at::Tensor, at::Tensor, at::Tensor&gt; (c10::DispatchKeySet, at::Tensor const&amp;, std::optional&lt;at::Tensor&gt; const&amp;, std::optional&lt;at::Tensor&gt; const&amp;, std::optional&lt;at::Tensor&gt; const&amp;, std::optional&lt;at::Tensor&gt; const&amp;, bool, double, double), &amp;torch::autograd::VariableType::(anonymous namespace)::native_batch_norm(c10::DispatchKeySet, at::Tensor const&amp;, std::optional&lt;at::Tensor&gt; const&amp;, std::optional&lt;at::Tensor&gt; const&amp;, std::optional&lt;at::Tensor&gt; const&amp;, std::optional&lt;at::Tensor&gt; const&amp;, bool, double, double)&gt;, std::tuple&lt;at::Tensor, at::Tensor, at::Tensor&gt;, c10::guts::typelist::typelist&lt;c10::DispatchKeySet, at::Tensor const&amp;, std::optional&lt;at::Tensor&gt; const&amp;, std::optional&lt;at::Tensor&gt; const&amp;, std::optional&lt;at::Tensor&gt; const&amp;, std::optional&lt;at::Tensor&gt; const&amp;, bool, double, double&gt; &gt;, std::tuple&lt;at::Tensor, at::Tensor, at::Tensor&gt; (c10::DispatchKeySet, at::Tensor const&amp;, std::optional&lt;at::Tensor&gt; const&amp;, std::optional&lt;at::Tensor&gt; const&amp;, std::optional&lt;at::Tensor&gt; const&amp;, std::optional&lt;at::Tensor&gt; const&amp;, bool, double, double)&gt;::call (libtorch_cpu.so) (29 samples, 0.45%)</title><rect x="40.5108%" y="468" width="0.4489%" height="15" fill="rgb(243,57,37)" fg:x="2617" fg:w="29"/><text x="40.7608%" y="478.50"></text></g><g><title>torch::autograd::VariableType::(anonymous namespace)::native_batch_norm (libtorch_cpu.so) (29 samples, 0.45%)</title><rect x="40.5108%" y="484" width="0.4489%" height="15" fill="rgb(244,167,17)" fg:x="2617" fg:w="29"/><text x="40.7608%" y="494.50"></text></g><g><title>at::_ops::native_batch_norm::redispatch (libtorch_cpu.so) (29 samples, 0.45%)</title><rect x="40.5108%" y="500" width="0.4489%" height="15" fill="rgb(207,181,38)" fg:x="2617" fg:w="29"/><text x="40.7608%" y="510.50"></text></g><g><title>c10::impl::wrap_kernel_functor_unboxed_&lt;c10::impl::detail::WrapFunctionIntoFunctor_&lt;c10::CompileTimeFunctionPointer&lt;std::tuple&lt;at::Tensor, at::Tensor, at::Tensor&gt; (at::Tensor const&amp;, std::optional&lt;at::Tensor&gt; const&amp;, std::optional&lt;at::Tensor&gt; const&amp;, std::optional&lt;at::Tensor&gt; const&amp;, std::optional&lt;at::Tensor&gt; const&amp;, bool, double, double), &amp;at::(anonymous namespace)::(anonymous namespace)::wrapper_CPU__native_batch_norm(at::Tensor const&amp;, std::optional&lt;at::Tensor&gt; const&amp;, std::optional&lt;at::Tensor&gt; const&amp;, std::optional&lt;at::Tensor&gt; const&amp;, std::optional&lt;at::Tensor&gt; const&amp;, bool, double, double)&gt;, std::tuple&lt;at::Tensor, at::Tensor, at::Tensor&gt;, c10::guts::typelist::typelist&lt;at::Tensor const&amp;, std::optional&lt;at::Tensor&gt; const&amp;, std::optional&lt;at::Tensor&gt; const&amp;, std::optional&lt;at::Tensor&gt; const&amp;, std::optional&lt;at::Tensor&gt; const&amp;, bool, double, double&gt; &gt;, std::tuple&lt;at::Tensor, at::Tensor, at::Tensor&gt; (at::Tensor const&amp;, std::optional&lt;at::Tensor&gt; const&amp;, std::optional&lt;at::Tensor&gt; const&amp;, std::optional&lt;at::Tensor&gt; const&amp;, std::optional&lt;at::Tensor&gt; const&amp;, bool, double, double)&gt;::call (libtorch_cpu.so) (29 samples, 0.45%)</title><rect x="40.5108%" y="516" width="0.4489%" height="15" fill="rgb(211,8,23)" fg:x="2617" fg:w="29"/><text x="40.7608%" y="526.50"></text></g><g><title>at::native::batch_norm_cpu (libtorch_cpu.so) (29 samples, 0.45%)</title><rect x="40.5108%" y="532" width="0.4489%" height="15" fill="rgb(235,11,44)" fg:x="2617" fg:w="29"/><text x="40.7608%" y="542.50"></text></g><g><title>at::native::batch_norm_cpu_out (libtorch_cpu.so) (29 samples, 0.45%)</title><rect x="40.5108%" y="548" width="0.4489%" height="15" fill="rgb(248,18,52)" fg:x="2617" fg:w="29"/><text x="40.7608%" y="558.50"></text></g><g><title>at::native::batch_norm_cpu_update_stats_template&lt;float, float, at::native::InvStd&gt; (libtorch_cpu.so) (18 samples, 0.28%)</title><rect x="40.6811%" y="564" width="0.2786%" height="15" fill="rgb(208,4,7)" fg:x="2628" fg:w="18"/><text x="40.9311%" y="574.50"></text></g><g><title>at::native::(anonymous namespace)::batch_norm_cpu_collect_stats_kernel (libtorch_cpu.so) (13 samples, 0.20%)</title><rect x="40.7585%" y="580" width="0.2012%" height="15" fill="rgb(240,17,39)" fg:x="2633" fg:w="13"/><text x="41.0085%" y="590.50"></text></g><g><title>GOMP_parallel (libgomp-c9fef706.so.1) (7 samples, 0.11%)</title><rect x="40.8514%" y="596" width="0.1084%" height="15" fill="rgb(207,170,3)" fg:x="2639" fg:w="7"/><text x="41.1014%" y="606.50"></text></g><g><title>run_model (pytorch-sample.py:16) (2,037 samples, 31.53%)</title><rect x="9.5046%" y="100" width="31.5325%" height="15" fill="rgb(236,100,52)" fg:x="614" fg:w="2037"/><text x="9.7546%" y="110.50">run_model (pytorch-sample.py:16)</text></g><g><title>_wrapped_call_impl (torch/nn/modules/module.py:1751) (2,037 samples, 31.53%)</title><rect x="9.5046%" y="116" width="31.5325%" height="15" fill="rgb(246,78,51)" fg:x="614" fg:w="2037"/><text x="9.7546%" y="126.50">_wrapped_call_impl (torch/nn/modules/module.py:1751)</text></g><g><title>_call_impl (torch/nn/modules/module.py:1762) (2,037 samples, 31.53%)</title><rect x="9.5046%" y="132" width="31.5325%" height="15" fill="rgb(211,17,15)" fg:x="614" fg:w="2037"/><text x="9.7546%" y="142.50">_call_impl (torch/nn/modules/module.py:1762)</text></g><g><title>forward (torchvision/models/resnet.py:285) (2,037 samples, 31.53%)</title><rect x="9.5046%" y="148" width="31.5325%" height="15" fill="rgb(209,59,46)" fg:x="614" fg:w="2037"/><text x="9.7546%" y="158.50">forward (torchvision/models/resnet.py:285)</text></g><g><title>run_model (pytorch-sample.py:17) (7 samples, 0.11%)</title><rect x="41.0372%" y="100" width="0.1084%" height="15" fill="rgb(210,92,25)" fg:x="2651" fg:w="7"/><text x="41.2872%" y="110.50"></text></g><g><title>_wrapped_call_impl (torch/nn/modules/module.py:1751) (7 samples, 0.11%)</title><rect x="41.0372%" y="116" width="0.1084%" height="15" fill="rgb(238,174,52)" fg:x="2651" fg:w="7"/><text x="41.2872%" y="126.50"></text></g><g><title>_call_impl (torch/nn/modules/module.py:1762) (7 samples, 0.11%)</title><rect x="41.0372%" y="132" width="0.1084%" height="15" fill="rgb(230,73,7)" fg:x="2651" fg:w="7"/><text x="41.2872%" y="142.50"></text></g><g><title>forward (torch/nn/modules/loss.py:1297) (7 samples, 0.11%)</title><rect x="41.0372%" y="148" width="0.1084%" height="15" fill="rgb(243,124,40)" fg:x="2651" fg:w="7"/><text x="41.2872%" y="158.50"></text></g><g><title>torch::autograd::Engine::initialize_device_threads_pool (libtorch_cpu.so) (19 samples, 0.29%)</title><rect x="41.1920%" y="244" width="0.2941%" height="15" fill="rgb(244,170,11)" fg:x="2661" fg:w="19"/><text x="41.4420%" y="254.50"></text></g><g><title>torch::autograd::Engine::start_device_threads (libtorch_cpu.so) (19 samples, 0.29%)</title><rect x="41.1920%" y="260" width="0.2941%" height="15" fill="rgb(207,114,54)" fg:x="2661" fg:w="19"/><text x="41.4420%" y="270.50"></text></g><g><title>c10::cuda::device_count (libc10_cuda.so) (19 samples, 0.29%)</title><rect x="41.1920%" y="276" width="0.2941%" height="15" fill="rgb(205,42,20)" fg:x="2661" fg:w="19"/><text x="41.4420%" y="286.50"></text></g><g><title>cudaGetDeviceCount (nvidia/cuda_runtime/lib/libcudart.so.12) (19 samples, 0.29%)</title><rect x="41.1920%" y="292" width="0.2941%" height="15" fill="rgb(230,30,28)" fg:x="2661" fg:w="19"/><text x="41.4420%" y="302.50"></text></g><g><title>0x77d25182a6bf (nvidia/cuda_runtime/lib/libcudart.so.12) (19 samples, 0.29%)</title><rect x="41.1920%" y="308" width="0.2941%" height="15" fill="rgb(205,73,54)" fg:x="2661" fg:w="19"/><text x="41.4420%" y="318.50"></text></g><g><title>0x77d251883fa9 (nvidia/cuda_runtime/lib/libcudart.so.12) (19 samples, 0.29%)</title><rect x="41.1920%" y="324" width="0.2941%" height="15" fill="rgb(254,227,23)" fg:x="2661" fg:w="19"/><text x="41.4420%" y="334.50"></text></g><g><title>0x77d2528a1ed3 (libc.so.6) (19 samples, 0.29%)</title><rect x="41.1920%" y="340" width="0.2941%" height="15" fill="rgb(228,202,34)" fg:x="2661" fg:w="19"/><text x="41.4420%" y="350.50"></text></g><g><title>0x77d25183a260 (nvidia/cuda_runtime/lib/libcudart.so.12) (19 samples, 0.29%)</title><rect x="41.1920%" y="356" width="0.2941%" height="15" fill="rgb(222,225,37)" fg:x="2661" fg:w="19"/><text x="41.4420%" y="366.50"></text></g><g><title>0x77d251836e6a (nvidia/cuda_runtime/lib/libcudart.so.12) (19 samples, 0.29%)</title><rect x="41.1920%" y="372" width="0.2941%" height="15" fill="rgb(221,14,54)" fg:x="2661" fg:w="19"/><text x="41.4420%" y="382.50"></text></g><g><title>0x77d183ac7278 (libcuda.so.535.183.01) (19 samples, 0.29%)</title><rect x="41.1920%" y="388" width="0.2941%" height="15" fill="rgb(254,102,2)" fg:x="2661" fg:w="19"/><text x="41.4420%" y="398.50"></text></g><g><title>0x77d183a4eb55 (libcuda.so.535.183.01) (19 samples, 0.29%)</title><rect x="41.1920%" y="404" width="0.2941%" height="15" fill="rgb(232,104,17)" fg:x="2661" fg:w="19"/><text x="41.4420%" y="414.50"></text></g><g><title>0x77d183c3e652 (libcuda.so.535.183.01) (19 samples, 0.29%)</title><rect x="41.1920%" y="420" width="0.2941%" height="15" fill="rgb(250,220,14)" fg:x="2661" fg:w="19"/><text x="41.4420%" y="430.50"></text></g><g><title>0x77d183c2611b (libcuda.so.535.183.01) (19 samples, 0.29%)</title><rect x="41.1920%" y="436" width="0.2941%" height="15" fill="rgb(241,158,9)" fg:x="2661" fg:w="19"/><text x="41.4420%" y="446.50"></text></g><g><title>0x77d183c26023 (libcuda.so.535.183.01) (19 samples, 0.29%)</title><rect x="41.1920%" y="452" width="0.2941%" height="15" fill="rgb(246,9,43)" fg:x="2661" fg:w="19"/><text x="41.4420%" y="462.50"></text></g><g><title>0x77d183d8beca (libcuda.so.535.183.01) (8 samples, 0.12%)</title><rect x="41.3622%" y="468" width="0.1238%" height="15" fill="rgb(206,73,33)" fg:x="2672" fg:w="8"/><text x="41.6122%" y="478.50"></text></g><g><title>0x77d183d8b090 (libcuda.so.535.183.01) (8 samples, 0.12%)</title><rect x="41.3622%" y="484" width="0.1238%" height="15" fill="rgb(222,79,8)" fg:x="2672" fg:w="8"/><text x="41.6122%" y="494.50"></text></g><g><title>0x77d183d8f24e (libcuda.so.535.183.01) (8 samples, 0.12%)</title><rect x="41.3622%" y="500" width="0.1238%" height="15" fill="rgb(234,8,54)" fg:x="2672" fg:w="8"/><text x="41.6122%" y="510.50"></text></g><g><title>0x77d183d90d52 (libcuda.so.535.183.01) (8 samples, 0.12%)</title><rect x="41.3622%" y="516" width="0.1238%" height="15" fill="rgb(209,134,38)" fg:x="2672" fg:w="8"/><text x="41.6122%" y="526.50"></text></g><g><title>0x77d183d90bcf (libcuda.so.535.183.01) (7 samples, 0.11%)</title><rect x="41.3777%" y="532" width="0.1084%" height="15" fill="rgb(230,127,29)" fg:x="2673" fg:w="7"/><text x="41.6277%" y="542.50"></text></g><g><title>read (libc.so.6) (7 samples, 0.11%)</title><rect x="41.3777%" y="548" width="0.1084%" height="15" fill="rgb(242,44,41)" fg:x="2673" fg:w="7"/><text x="41.6277%" y="558.50"></text></g><g><title>0x77d2528ab43a (libc.so.6) (19 samples, 0.29%)</title><rect x="41.5944%" y="340" width="0.2941%" height="15" fill="rgb(222,56,43)" fg:x="2687" fg:w="19"/><text x="41.8444%" y="350.50"></text></g><g><title>0x77d2528aaac4 (libc.so.6) (18 samples, 0.28%)</title><rect x="41.6099%" y="356" width="0.2786%" height="15" fill="rgb(238,39,47)" fg:x="2688" fg:w="18"/><text x="41.8599%" y="366.50"></text></g><g><title>__default_morecore (libc.so.6) (18 samples, 0.28%)</title><rect x="41.6099%" y="372" width="0.2786%" height="15" fill="rgb(226,79,43)" fg:x="2688" fg:w="18"/><text x="41.8599%" y="382.50"></text></g><g><title>sbrk (libc.so.6) (18 samples, 0.28%)</title><rect x="41.6099%" y="388" width="0.2786%" height="15" fill="rgb(242,105,53)" fg:x="2688" fg:w="18"/><text x="41.8599%" y="398.50"></text></g><g><title>brk (libc.so.6) (18 samples, 0.28%)</title><rect x="41.6099%" y="404" width="0.2786%" height="15" fill="rgb(251,132,46)" fg:x="2688" fg:w="18"/><text x="41.8599%" y="414.50"></text></g><g><title>std::vector&lt;at::Tensor, std::allocator&lt;at::Tensor&gt; &gt;::~vector (libtorch_cpu.so) (40 samples, 0.62%)</title><rect x="41.5635%" y="276" width="0.6192%" height="15" fill="rgb(231,77,14)" fg:x="2685" fg:w="40"/><text x="41.8135%" y="286.50"></text></g><g><title>c10::TensorImpl::~TensorImpl (libc10.so) (40 samples, 0.62%)</title><rect x="41.5635%" y="292" width="0.6192%" height="15" fill="rgb(240,135,9)" fg:x="2685" fg:w="40"/><text x="41.8135%" y="302.50"></text></g><g><title>c10::StorageImpl::~StorageImpl (libtorch_python.so) (39 samples, 0.60%)</title><rect x="41.5789%" y="308" width="0.6037%" height="15" fill="rgb(248,109,14)" fg:x="2686" fg:w="39"/><text x="41.8289%" y="318.50"></text></g><g><title>free (libc.so.6) (38 samples, 0.59%)</title><rect x="41.5944%" y="324" width="0.5882%" height="15" fill="rgb(227,146,52)" fg:x="2687" fg:w="38"/><text x="41.8444%" y="334.50"></text></g><g><title>munmap (libc.so.6) (19 samples, 0.29%)</title><rect x="41.8885%" y="340" width="0.2941%" height="15" fill="rgb(232,54,3)" fg:x="2706" fg:w="19"/><text x="42.1385%" y="350.50"></text></g><g><title>0x77d25141ca9d (libgomp-c9fef706.so.1) (20 samples, 0.31%)</title><rect x="42.1981%" y="420" width="0.3096%" height="15" fill="rgb(229,201,43)" fg:x="2726" fg:w="20"/><text x="42.4481%" y="430.50"></text></g><g><title>0x77d25141e02a (libgomp-c9fef706.so.1) (20 samples, 0.31%)</title><rect x="42.1981%" y="436" width="0.3096%" height="15" fill="rgb(252,161,33)" fg:x="2726" fg:w="20"/><text x="42.4481%" y="446.50"></text></g><g><title>0x77d25141c19a (libgomp-c9fef706.so.1) (13 samples, 0.20%)</title><rect x="42.5077%" y="436" width="0.2012%" height="15" fill="rgb(226,146,40)" fg:x="2746" fg:w="13"/><text x="42.7577%" y="446.50"></text></g><g><title>0x77d25141de62 (libgomp-c9fef706.so.1) (13 samples, 0.20%)</title><rect x="42.5077%" y="452" width="0.2012%" height="15" fill="rgb(219,47,25)" fg:x="2746" fg:w="13"/><text x="42.7577%" y="462.50"></text></g><g><title>GOMP_parallel (libgomp-c9fef706.so.1) (39 samples, 0.60%)</title><rect x="42.5077%" y="420" width="0.6037%" height="15" fill="rgb(250,135,13)" fg:x="2746" fg:w="39"/><text x="42.7577%" y="430.50"></text></g><g><title>at::internal::invoke_parallel&lt;at::parallel_for&lt;at::TensorIteratorBase::for_each(c10::function_ref&lt;void (char**, long const*, long, long)&gt;, long)::{lambda(long, long)#1}&gt;(long, long, long, at::TensorIteratorBase::for_each(c10::function_ref&lt;void (char**, long const*, long, long)&gt;, long)::{lambda(long, long)#1} const&amp;)::{lambda(long, long)#1}&gt; (libtorch_cpu.so) (26 samples, 0.40%)</title><rect x="42.7090%" y="436" width="0.4025%" height="15" fill="rgb(219,229,18)" fg:x="2759" fg:w="26"/><text x="42.9590%" y="446.50"></text></g><g><title>at::TensorIteratorBase::serial_for_each (libtorch_cpu.so) (26 samples, 0.40%)</title><rect x="42.7090%" y="452" width="0.4025%" height="15" fill="rgb(217,152,27)" fg:x="2759" fg:w="26"/><text x="42.9590%" y="462.50"></text></g><g><title>c10::function_ref&lt;void (char**, long const*, long, long)&gt;::callback_fn&lt;at::native::AVX2::VectorizedLoop2d&lt;at::native::(anonymous namespace)::add_kernel(at::TensorIteratorBase&amp;, c10::Scalar const&amp;)::{lambda()#1}::operator()() const::{lambda()#7}::operator()() const::{lambda(float, float)#1}, at::native::(anonymous namespace)::add_kernel(at::TensorIteratorBase&amp;, c10::Scalar const&amp;)::{lambda()#1}::operator()() const::{lambda()#7}::operator()() const::{lambda(at::vec::AVX2::Vectorized&lt;float&gt;, at::vec::AVX2::Vectorized&lt;float&gt;)#2}&gt; &gt; (libtorch_cpu.so) (26 samples, 0.40%)</title><rect x="42.7090%" y="468" width="0.4025%" height="15" fill="rgb(225,71,47)" fg:x="2759" fg:w="26"/><text x="42.9590%" y="478.50"></text></g><g><title>torch::autograd::InputBuffer::add (libtorch_cpu.so) (61 samples, 0.94%)</title><rect x="42.1827%" y="276" width="0.9443%" height="15" fill="rgb(220,139,14)" fg:x="2725" fg:w="61"/><text x="42.4327%" y="286.50"></text></g><g><title>torch::autograd::accumulate (libtorch_cpu.so) (61 samples, 0.94%)</title><rect x="42.1827%" y="292" width="0.9443%" height="15" fill="rgb(247,54,32)" fg:x="2725" fg:w="61"/><text x="42.4327%" y="302.50"></text></g><g><title>at::_ops::add__Tensor::call (libtorch_cpu.so) (61 samples, 0.94%)</title><rect x="42.1827%" y="308" width="0.9443%" height="15" fill="rgb(252,131,39)" fg:x="2725" fg:w="61"/><text x="42.4327%" y="318.50"></text></g><g><title>torch::autograd::VariableType::(anonymous namespace)::add__Tensor (libtorch_cpu.so) (61 samples, 0.94%)</title><rect x="42.1827%" y="324" width="0.9443%" height="15" fill="rgb(210,108,39)" fg:x="2725" fg:w="61"/><text x="42.4327%" y="334.50"></text></g><g><title>c10::impl::wrap_kernel_functor_unboxed_&lt;c10::impl::detail::WrapFunctionIntoFunctor_&lt;c10::CompileTimeFunctionPointer&lt;at::Tensor&amp; (c10::DispatchKeySet, at::Tensor&amp;, at::Tensor const&amp;, c10::Scalar const&amp;), &amp;torch::ADInplaceOrView::(anonymous namespace)::add__Tensor(c10::DispatchKeySet, at::Tensor&amp;, at::Tensor const&amp;, c10::Scalar const&amp;)&gt;, at::Tensor&amp;, c10::guts::typelist::typelist&lt;c10::DispatchKeySet, at::Tensor&amp;, at::Tensor const&amp;, c10::Scalar const&amp;&gt; &gt;, at::Tensor&amp; (c10::DispatchKeySet, at::Tensor&amp;, at::Tensor const&amp;, c10::Scalar const&amp;)&gt;::call (libtorch_cpu.so) (61 samples, 0.94%)</title><rect x="42.1827%" y="340" width="0.9443%" height="15" fill="rgb(205,23,29)" fg:x="2725" fg:w="61"/><text x="42.4327%" y="350.50"></text></g><g><title>at::(anonymous namespace)::wrapper_CPU_add__Tensor (libtorch_cpu.so) (61 samples, 0.94%)</title><rect x="42.1827%" y="356" width="0.9443%" height="15" fill="rgb(246,139,46)" fg:x="2725" fg:w="61"/><text x="42.4327%" y="366.50"></text></g><g><title>at::native::(anonymous namespace)::add_kernel (libtorch_cpu.so) (60 samples, 0.93%)</title><rect x="42.1981%" y="372" width="0.9288%" height="15" fill="rgb(250,81,26)" fg:x="2726" fg:w="60"/><text x="42.4481%" y="382.50"></text></g><g><title>at::native::(anonymous namespace)::add_kernel(at::TensorIteratorBase&amp;, c10::Scalar const&amp;)::{lambda()#1}::operator() const (libtorch_cpu.so) (60 samples, 0.93%)</title><rect x="42.1981%" y="388" width="0.9288%" height="15" fill="rgb(214,104,7)" fg:x="2726" fg:w="60"/><text x="42.4481%" y="398.50"></text></g><g><title>at::TensorIteratorBase::for_each (libtorch_cpu.so) (60 samples, 0.93%)</title><rect x="42.1981%" y="404" width="0.9288%" height="15" fill="rgb(233,189,8)" fg:x="2726" fg:w="60"/><text x="42.4481%" y="414.50"></text></g><g><title>torch::autograd::generated::details::mm_mat1_backward (libtorch_cpu.so) (7 samples, 0.11%)</title><rect x="43.1734%" y="324" width="0.1084%" height="15" fill="rgb(228,141,17)" fg:x="2789" fg:w="7"/><text x="43.4234%" y="334.50"></text></g><g><title>torch::autograd::generated::AddmmBackward0::apply (libtorch_cpu.so) (11 samples, 0.17%)</title><rect x="43.1734%" y="292" width="0.1703%" height="15" fill="rgb(247,157,1)" fg:x="2789" fg:w="11"/><text x="43.4234%" y="302.50"></text></g><g><title>torch::autograd::generated::AddmmBackward0_apply_functional (libtorch_cpu.so) (11 samples, 0.17%)</title><rect x="43.1734%" y="308" width="0.1703%" height="15" fill="rgb(249,225,5)" fg:x="2789" fg:w="11"/><text x="43.4234%" y="318.50"></text></g><g><title>0x77d25141ca9d (libgomp-c9fef706.so.1) (46 samples, 0.71%)</title><rect x="43.4675%" y="612" width="0.7121%" height="15" fill="rgb(242,55,13)" fg:x="2808" fg:w="46"/><text x="43.7175%" y="622.50"></text></g><g><title>0x77d25141e02a (libgomp-c9fef706.so.1) (46 samples, 0.71%)</title><rect x="43.4675%" y="628" width="0.7121%" height="15" fill="rgb(230,49,50)" fg:x="2808" fg:w="46"/><text x="43.7175%" y="638.50"></text></g><g><title>0x77d25141c19a (libgomp-c9fef706.so.1) (20 samples, 0.31%)</title><rect x="44.1950%" y="628" width="0.3096%" height="15" fill="rgb(241,111,38)" fg:x="2855" fg:w="20"/><text x="44.4450%" y="638.50"></text></g><g><title>0x77d25141de62 (libgomp-c9fef706.so.1) (19 samples, 0.29%)</title><rect x="44.2105%" y="644" width="0.2941%" height="15" fill="rgb(252,155,4)" fg:x="2856" fg:w="19"/><text x="44.4605%" y="654.50"></text></g><g><title>dnnl::primitive::execute (libtorch_cpu.so) (86 samples, 1.33%)</title><rect x="43.4520%" y="516" width="1.3313%" height="15" fill="rgb(212,69,32)" fg:x="2807" fg:w="86"/><text x="43.7020%" y="526.50"></text></g><g><title>dnnl_primitive_execute (libtorch_cpu.so) (86 samples, 1.33%)</title><rect x="43.4520%" y="532" width="1.3313%" height="15" fill="rgb(243,107,47)" fg:x="2807" fg:w="86"/><text x="43.7020%" y="542.50"></text></g><g><title>dnnl::impl::primitive_execute (libtorch_cpu.so) (85 samples, 1.32%)</title><rect x="43.4675%" y="548" width="1.3158%" height="15" fill="rgb(247,130,12)" fg:x="2808" fg:w="85"/><text x="43.7175%" y="558.50"></text></g><g><title>dnnl_primitive::execute (libtorch_cpu.so) (85 samples, 1.32%)</title><rect x="43.4675%" y="564" width="1.3158%" height="15" fill="rgb(233,74,16)" fg:x="2808" fg:w="85"/><text x="43.7175%" y="574.50"></text></g><g><title>dnnl::impl::cpu::x64::jit_uni_reorder_t::execute (libtorch_cpu.so) (85 samples, 1.32%)</title><rect x="43.4675%" y="580" width="1.3158%" height="15" fill="rgb(208,58,18)" fg:x="2808" fg:w="85"/><text x="43.7175%" y="590.50"></text></g><g><title>dnnl::impl::cpu::x64::jit_uni_reorder_t::omp_driver (libtorch_cpu.so) (85 samples, 1.32%)</title><rect x="43.4675%" y="596" width="1.3158%" height="15" fill="rgb(242,225,1)" fg:x="2808" fg:w="85"/><text x="43.7175%" y="606.50"></text></g><g><title>GOMP_parallel (libgomp-c9fef706.so.1) (39 samples, 0.60%)</title><rect x="44.1796%" y="612" width="0.6037%" height="15" fill="rgb(249,39,40)" fg:x="2854" fg:w="39"/><text x="44.4296%" y="622.50"></text></g><g><title>dnnl::impl::parallel (libtorch_cpu.so) (18 samples, 0.28%)</title><rect x="44.5046%" y="628" width="0.2786%" height="15" fill="rgb(207,72,44)" fg:x="2875" fg:w="18"/><text x="44.7546%" y="638.50"></text></g><g><title>std::_Function_handler&lt;void (int, int), dnnl::impl::cpu::x64::jit_uni_reorder_t::omp_driver(char const*, char*, float const*, float const*, int, int, dnnl::impl::memory_tracking::grantor_t const&amp;) const::{lambda(int, int)#1}&gt;::_M_invoke (libtorch_cpu.so) (18 samples, 0.28%)</title><rect x="44.5046%" y="644" width="0.2786%" height="15" fill="rgb(215,193,12)" fg:x="2875" fg:w="18"/><text x="44.7546%" y="654.50"></text></g><g><title>dnnl::impl::cpu::x64::jit_uni_reorder_t::omp_driver_2d (libtorch_cpu.so) (18 samples, 0.28%)</title><rect x="44.5046%" y="660" width="0.2786%" height="15" fill="rgb(248,41,39)" fg:x="2875" fg:w="18"/><text x="44.7546%" y="670.50"></text></g><g><title>std::_Function_handler&lt;void (long, long), dnnl::impl::cpu::x64::jit_uni_reorder_t::omp_driver_2d(int, int, int, char const*, char*, float const*, float const*, int, int, int*) const::{lambda(long, long)#1}&gt;::_M_invoke (libtorch_cpu.so) (18 samples, 0.28%)</title><rect x="44.5046%" y="676" width="0.2786%" height="15" fill="rgb(253,85,4)" fg:x="2875" fg:w="18"/><text x="44.7546%" y="686.50"></text></g><g><title>ideep::tensor::reorder_to (libtorch_cpu.so) (89 samples, 1.38%)</title><rect x="43.4520%" y="500" width="1.3777%" height="15" fill="rgb(243,70,31)" fg:x="2807" fg:w="89"/><text x="43.7020%" y="510.50"></text></g><g><title>at::native::mkldnn_to_dense (libtorch_cpu.so) (94 samples, 1.46%)</title><rect x="43.3901%" y="468" width="1.4551%" height="15" fill="rgb(253,195,26)" fg:x="2803" fg:w="94"/><text x="43.6401%" y="478.50"></text></g><g><title>ideep::tensor::to_public (libtorch_cpu.so) (90 samples, 1.39%)</title><rect x="43.4520%" y="484" width="1.3932%" height="15" fill="rgb(243,42,11)" fg:x="2807" fg:w="90"/><text x="43.7020%" y="494.50"></text></g><g><title>0x77d25141ca9d (libgomp-c9fef706.so.1) (7 samples, 0.11%)</title><rect x="44.8916%" y="564" width="0.1084%" height="15" fill="rgb(239,66,17)" fg:x="2900" fg:w="7"/><text x="45.1416%" y="574.50"></text></g><g><title>0x77d25141e02a (libgomp-c9fef706.so.1) (7 samples, 0.11%)</title><rect x="44.8916%" y="580" width="0.1084%" height="15" fill="rgb(217,132,21)" fg:x="2900" fg:w="7"/><text x="45.1416%" y="590.50"></text></g><g><title>dnnl::impl::cpu::x64::jit_avx2_1x1_convolution_bwd_weights_t::execute (libtorch_cpu.so) (17 samples, 0.26%)</title><rect x="44.8916%" y="532" width="0.2632%" height="15" fill="rgb(252,202,21)" fg:x="2900" fg:w="17"/><text x="45.1416%" y="542.50"></text></g><g><title>dnnl::impl::cpu::x64::jit_avx2_1x1_convolution_bwd_weights_t::execute_backward_weights (libtorch_cpu.so) (17 samples, 0.26%)</title><rect x="44.8916%" y="548" width="0.2632%" height="15" fill="rgb(233,98,36)" fg:x="2900" fg:w="17"/><text x="45.1416%" y="558.50"></text></g><g><title>GOMP_parallel (libgomp-c9fef706.so.1) (10 samples, 0.15%)</title><rect x="45.0000%" y="564" width="0.1548%" height="15" fill="rgb(216,153,54)" fg:x="2907" fg:w="10"/><text x="45.2500%" y="574.50"></text></g><g><title>dnnl::impl::parallel (libtorch_cpu.so) (7 samples, 0.11%)</title><rect x="45.0464%" y="580" width="0.1084%" height="15" fill="rgb(250,99,7)" fg:x="2910" fg:w="7"/><text x="45.2964%" y="590.50"></text></g><g><title>0x77d25141e02a (libgomp-c9fef706.so.1) (68 samples, 1.05%)</title><rect x="45.1548%" y="580" width="1.0526%" height="15" fill="rgb(207,56,50)" fg:x="2917" fg:w="68"/><text x="45.4048%" y="590.50"></text></g><g><title>0x77d25141ca9d (libgomp-c9fef706.so.1) (73 samples, 1.13%)</title><rect x="45.1548%" y="564" width="1.1300%" height="15" fill="rgb(244,61,34)" fg:x="2917" fg:w="73"/><text x="45.4048%" y="574.50"></text></g><g><title>0x77d25141c19a (libgomp-c9fef706.so.1) (34 samples, 0.53%)</title><rect x="46.3003%" y="580" width="0.5263%" height="15" fill="rgb(241,50,38)" fg:x="2991" fg:w="34"/><text x="46.5503%" y="590.50"></text></g><g><title>0x77d25141de62 (libgomp-c9fef706.so.1) (34 samples, 0.53%)</title><rect x="46.3003%" y="596" width="0.5263%" height="15" fill="rgb(212,166,30)" fg:x="2991" fg:w="34"/><text x="46.5503%" y="606.50"></text></g><g><title>0x77d154ebf03b (?) (11 samples, 0.17%)</title><rect x="56.0526%" y="628" width="0.1703%" height="15" fill="rgb(249,127,32)" fg:x="3621" fg:w="11"/><text x="56.3026%" y="638.50"></text></g><g><title>0x77d154ebf052 (?) (7 samples, 0.11%)</title><rect x="56.3313%" y="628" width="0.1084%" height="15" fill="rgb(209,103,0)" fg:x="3639" fg:w="7"/><text x="56.5813%" y="638.50"></text></g><g><title>dnnl::primitive::execute (libtorch_cpu.so) (966 samples, 14.95%)</title><rect x="44.8916%" y="468" width="14.9536%" height="15" fill="rgb(238,209,51)" fg:x="2900" fg:w="966"/><text x="45.1416%" y="478.50">dnnl::primitive::execut..</text></g><g><title>dnnl_primitive_execute (libtorch_cpu.so) (966 samples, 14.95%)</title><rect x="44.8916%" y="484" width="14.9536%" height="15" fill="rgb(237,56,23)" fg:x="2900" fg:w="966"/><text x="45.1416%" y="494.50">dnnl_primitive_execute ..</text></g><g><title>dnnl::impl::primitive_execute (libtorch_cpu.so) (966 samples, 14.95%)</title><rect x="44.8916%" y="500" width="14.9536%" height="15" fill="rgb(215,153,46)" fg:x="2900" fg:w="966"/><text x="45.1416%" y="510.50">dnnl::impl::primitive_e..</text></g><g><title>dnnl_primitive::execute (libtorch_cpu.so) (966 samples, 14.95%)</title><rect x="44.8916%" y="516" width="14.9536%" height="15" fill="rgb(224,49,31)" fg:x="2900" fg:w="966"/><text x="45.1416%" y="526.50">dnnl_primitive::execute..</text></g><g><title>dnnl::impl::cpu::x64::jit_avx2_convolution_bwd_weights_t::execute (libtorch_cpu.so) (949 samples, 14.69%)</title><rect x="45.1548%" y="532" width="14.6904%" height="15" fill="rgb(250,18,42)" fg:x="2917" fg:w="949"/><text x="45.4048%" y="542.50">dnnl::impl::cpu::x64::..</text></g><g><title>dnnl::impl::cpu::x64::jit_avx2_convolution_bwd_weights_t::execute_backward_weights (libtorch_cpu.so) (949 samples, 14.69%)</title><rect x="45.1548%" y="548" width="14.6904%" height="15" fill="rgb(215,176,39)" fg:x="2917" fg:w="949"/><text x="45.4048%" y="558.50">dnnl::impl::cpu::x64::..</text></g><g><title>GOMP_parallel (libgomp-c9fef706.so.1) (876 samples, 13.56%)</title><rect x="46.2848%" y="564" width="13.5604%" height="15" fill="rgb(223,77,29)" fg:x="2990" fg:w="876"/><text x="46.5348%" y="574.50">GOMP_parallel (libgo..</text></g><g><title>dnnl::impl::parallel (libtorch_cpu.so) (841 samples, 13.02%)</title><rect x="46.8266%" y="580" width="13.0186%" height="15" fill="rgb(234,94,52)" fg:x="3025" fg:w="841"/><text x="47.0766%" y="590.50">dnnl::impl::parallel..</text></g><g><title>std::_Function_handler&lt;void (int, int), dnnl::impl::cpu::x64::jit_avx2_convolution_bwd_weights_t::execute_backward_weights(dnnl::impl::exec_ctx_t const&amp;) const::{lambda(int, int)#3}&gt;::_M_invoke (libtorch_cpu.so) (841 samples, 13.02%)</title><rect x="46.8266%" y="596" width="13.0186%" height="15" fill="rgb(220,154,50)" fg:x="3025" fg:w="841"/><text x="47.0766%" y="606.50">std::_Function_handl..</text></g><g><title>dnnl::impl::cpu::x64::jit_avx2_convolution_bwd_weights_t::execute_backward_weights(dnnl::impl::exec_ctx_t const&amp;) const::{lambda(int, int)#1}::operator() const (libtorch_cpu.so) (839 samples, 12.99%)</title><rect x="46.8576%" y="612" width="12.9876%" height="15" fill="rgb(212,11,10)" fg:x="3027" fg:w="839"/><text x="47.1076%" y="622.50">dnnl::impl::cpu::x64..</text></g><g><title>0x77d25141e02a (libgomp-c9fef706.so.1) (79 samples, 1.22%)</title><rect x="59.8916%" y="596" width="1.2229%" height="15" fill="rgb(205,166,19)" fg:x="3869" fg:w="79"/><text x="60.1416%" y="606.50"></text></g><g><title>0x77d25141ca9d (libgomp-c9fef706.so.1) (81 samples, 1.25%)</title><rect x="59.8916%" y="580" width="1.2539%" height="15" fill="rgb(244,198,16)" fg:x="3869" fg:w="81"/><text x="60.1416%" y="590.50"></text></g><g><title>0x77d25141c19a (libgomp-c9fef706.so.1) (68 samples, 1.05%)</title><rect x="61.1455%" y="596" width="1.0526%" height="15" fill="rgb(219,69,12)" fg:x="3950" fg:w="68"/><text x="61.3955%" y="606.50"></text></g><g><title>0x77d25141de62 (libgomp-c9fef706.so.1) (68 samples, 1.05%)</title><rect x="61.1455%" y="612" width="1.0526%" height="15" fill="rgb(245,30,7)" fg:x="3950" fg:w="68"/><text x="61.3955%" y="622.50"></text></g><g><title>0x77d15db730e4 (?) (7 samples, 0.11%)</title><rect x="62.5697%" y="612" width="0.1084%" height="15" fill="rgb(218,221,48)" fg:x="4042" fg:w="7"/><text x="62.8197%" y="622.50"></text></g><g><title>0x77d1707c0015 (?) (8 samples, 0.12%)</title><rect x="62.8638%" y="612" width="0.1238%" height="15" fill="rgb(216,66,15)" fg:x="4061" fg:w="8"/><text x="63.1138%" y="622.50"></text></g><g><title>GOMP_parallel (libgomp-c9fef706.so.1) (192 samples, 2.97%)</title><rect x="61.1455%" y="580" width="2.9721%" height="15" fill="rgb(226,122,50)" fg:x="3950" fg:w="192"/><text x="61.3955%" y="590.50">GOM..</text></g><g><title>dnnl::impl::parallel (libtorch_cpu.so) (124 samples, 1.92%)</title><rect x="62.1981%" y="596" width="1.9195%" height="15" fill="rgb(239,156,16)" fg:x="4018" fg:w="124"/><text x="62.4481%" y="606.50">d..</text></g><g><title>std::_Function_handler&lt;void (int, int), dnnl::impl::parallel_nd(long, long, std::function&lt;void (long, long)&gt; const&amp;)::{lambda(int, int)#1}&gt;::_M_invoke (libtorch_cpu.so) (12 samples, 0.19%)</title><rect x="63.9319%" y="612" width="0.1858%" height="15" fill="rgb(224,27,38)" fg:x="4130" fg:w="12"/><text x="64.1819%" y="622.50"></text></g><g><title>dnnl::primitive::execute (libtorch_cpu.so) (274 samples, 4.24%)</title><rect x="59.8916%" y="500" width="4.2415%" height="15" fill="rgb(224,39,27)" fg:x="3869" fg:w="274"/><text x="60.1416%" y="510.50">dnnl:..</text></g><g><title>dnnl_primitive_execute (libtorch_cpu.so) (274 samples, 4.24%)</title><rect x="59.8916%" y="516" width="4.2415%" height="15" fill="rgb(215,92,29)" fg:x="3869" fg:w="274"/><text x="60.1416%" y="526.50">dnnl_..</text></g><g><title>dnnl::impl::primitive_execute (libtorch_cpu.so) (274 samples, 4.24%)</title><rect x="59.8916%" y="532" width="4.2415%" height="15" fill="rgb(207,159,16)" fg:x="3869" fg:w="274"/><text x="60.1416%" y="542.50">dnnl:..</text></g><g><title>dnnl_primitive::execute (libtorch_cpu.so) (274 samples, 4.24%)</title><rect x="59.8916%" y="548" width="4.2415%" height="15" fill="rgb(238,163,47)" fg:x="3869" fg:w="274"/><text x="60.1416%" y="558.50">dnnl_..</text></g><g><title>dnnl::impl::cpu::x64::jit_blk_reorder_t::execute (libtorch_cpu.so) (274 samples, 4.24%)</title><rect x="59.8916%" y="564" width="4.2415%" height="15" fill="rgb(219,91,49)" fg:x="3869" fg:w="274"/><text x="60.1416%" y="574.50">dnnl:..</text></g><g><title>ideep::tensor::reorder_to (libtorch_cpu.so) (278 samples, 4.30%)</title><rect x="59.8916%" y="484" width="4.3034%" height="15" fill="rgb(227,167,31)" fg:x="3869" fg:w="278"/><text x="60.1416%" y="494.50">ideep..</text></g><g><title>ideep::tensor::reorder_if_differ_in (libtorch_cpu.so) (281 samples, 4.35%)</title><rect x="59.8762%" y="468" width="4.3498%" height="15" fill="rgb(234,80,54)" fg:x="3868" fg:w="281"/><text x="60.1262%" y="478.50">ideep..</text></g><g><title>ideep::tensor::~tensor (libtorch_cpu.so) (10 samples, 0.15%)</title><rect x="64.2260%" y="468" width="0.1548%" height="15" fill="rgb(212,114,2)" fg:x="4149" fg:w="10"/><text x="64.4760%" y="478.50"></text></g><g><title>std::_Sp_counted_base&lt;(__gnu_cxx::_Lock_policy)2&gt;::_M_release (libtorch_cpu.so) (9 samples, 0.14%)</title><rect x="64.2415%" y="484" width="0.1393%" height="15" fill="rgb(234,50,24)" fg:x="4150" fg:w="9"/><text x="64.4915%" y="494.50"></text></g><g><title>std::_Sp_counted_deleter&lt;void*, std::function&lt;void (void*)&gt;, std::allocator&lt;void&gt;, (__gnu_cxx::_Lock_policy)2&gt;::_M_dispose (libtorch_cpu.so) (9 samples, 0.14%)</title><rect x="64.2415%" y="500" width="0.1393%" height="15" fill="rgb(221,68,8)" fg:x="4150" fg:w="9"/><text x="64.4915%" y="510.50"></text></g><g><title>_ZNSt17_Function_handlerIFvPvEN9cpu_allocMUlS0_E0_EE9_M_invokeERKSt9_Any_dataOS0_ (libtorch_cpu.so) (9 samples, 0.14%)</title><rect x="64.2415%" y="516" width="0.1393%" height="15" fill="rgb(254,180,31)" fg:x="4150" fg:w="9"/><text x="64.4915%" y="526.50"></text></g><g><title>free (libc.so.6) (9 samples, 0.14%)</title><rect x="64.2415%" y="532" width="0.1393%" height="15" fill="rgb(247,130,50)" fg:x="4150" fg:w="9"/><text x="64.4915%" y="542.50"></text></g><g><title>at::native::(anonymous namespace)::mkldnn_convolution_backward_weights (libtorch_cpu.so) (1,364 samples, 21.11%)</title><rect x="43.3591%" y="452" width="21.1146%" height="15" fill="rgb(211,109,4)" fg:x="2801" fg:w="1364"/><text x="43.6091%" y="462.50">at::native::(anonymous namespace)..</text></g><g><title>0x77d25141ca9d (libgomp-c9fef706.so.1) (16 samples, 0.25%)</title><rect x="64.5201%" y="660" width="0.2477%" height="15" fill="rgb(238,50,21)" fg:x="4168" fg:w="16"/><text x="64.7701%" y="670.50"></text></g><g><title>0x77d25141e02a (libgomp-c9fef706.so.1) (16 samples, 0.25%)</title><rect x="64.5201%" y="676" width="0.2477%" height="15" fill="rgb(225,57,45)" fg:x="4168" fg:w="16"/><text x="64.7701%" y="686.50"></text></g><g><title>0x77d25141c19a (libgomp-c9fef706.so.1) (9 samples, 0.14%)</title><rect x="64.7678%" y="676" width="0.1393%" height="15" fill="rgb(209,196,50)" fg:x="4184" fg:w="9"/><text x="65.0178%" y="686.50"></text></g><g><title>0x77d25141de62 (libgomp-c9fef706.so.1) (9 samples, 0.14%)</title><rect x="64.7678%" y="692" width="0.1393%" height="15" fill="rgb(242,140,13)" fg:x="4184" fg:w="9"/><text x="65.0178%" y="702.50"></text></g><g><title>at::TensorBase::__dispatch_contiguous (libtorch_cpu.so) (78 samples, 1.21%)</title><rect x="64.4892%" y="468" width="1.2074%" height="15" fill="rgb(217,111,7)" fg:x="4166" fg:w="78"/><text x="64.7392%" y="478.50"></text></g><g><title>at::_ops::contiguous::call (libtorch_cpu.so) (78 samples, 1.21%)</title><rect x="64.4892%" y="484" width="1.2074%" height="15" fill="rgb(253,193,51)" fg:x="4166" fg:w="78"/><text x="64.7392%" y="494.50"></text></g><g><title>c10::impl::wrap_kernel_functor_unboxed_&lt;c10::impl::detail::WrapFunctionIntoFunctor_&lt;c10::CompileTimeFunctionPointer&lt;at::Tensor(at::Tensor const&amp;, c10::MemoryFormat), &amp;at::(anonymous namespace)::(anonymous namespace)::wrapper_CompositeImplicitAutograd__contiguous(at::Tensor const&amp;, c10::MemoryFormat)&gt;, at::Tensor, c10::guts::typelist::typelist&lt;at::Tensor const&amp;, c10::MemoryFormat&gt; &gt;, at::Tensor(at::Tensor const&amp;, c10::MemoryFormat)&gt;::call (libtorch_cpu.so) (78 samples, 1.21%)</title><rect x="64.4892%" y="500" width="1.2074%" height="15" fill="rgb(252,70,29)" fg:x="4166" fg:w="78"/><text x="64.7392%" y="510.50"></text></g><g><title>at::native::contiguous (libtorch_cpu.so) (78 samples, 1.21%)</title><rect x="64.4892%" y="516" width="1.2074%" height="15" fill="rgb(232,127,12)" fg:x="4166" fg:w="78"/><text x="64.7392%" y="526.50"></text></g><g><title>at::_ops::clone::call (libtorch_cpu.so) (78 samples, 1.21%)</title><rect x="64.4892%" y="532" width="1.2074%" height="15" fill="rgb(211,180,21)" fg:x="4166" fg:w="78"/><text x="64.7392%" y="542.50"></text></g><g><title>c10::impl::wrap_kernel_functor_unboxed_&lt;c10::impl::detail::WrapFunctionIntoFunctor_&lt;c10::CompileTimeFunctionPointer&lt;at::Tensor(at::Tensor const&amp;, std::optional&lt;c10::MemoryFormat&gt;), &amp;at::(anonymous namespace)::(anonymous namespace)::wrapper_CompositeExplicitAutograd__clone(at::Tensor const&amp;, std::optional&lt;c10::MemoryFormat&gt;)&gt;, at::Tensor, c10::guts::typelist::typelist&lt;at::Tensor const&amp;, std::optional&lt;c10::MemoryFormat&gt; &gt; &gt;, at::Tensor(at::Tensor const&amp;, std::optional&lt;c10::MemoryFormat&gt;)&gt;::call (libtorch_cpu.so) (78 samples, 1.21%)</title><rect x="64.4892%" y="548" width="1.2074%" height="15" fill="rgb(229,72,13)" fg:x="4166" fg:w="78"/><text x="64.7392%" y="558.50"></text></g><g><title>at::native::clone (libtorch_cpu.so) (78 samples, 1.21%)</title><rect x="64.4892%" y="564" width="1.2074%" height="15" fill="rgb(240,211,49)" fg:x="4166" fg:w="78"/><text x="64.7392%" y="574.50"></text></g><g><title>at::_ops::copy_::call (libtorch_cpu.so) (77 samples, 1.19%)</title><rect x="64.5046%" y="580" width="1.1920%" height="15" fill="rgb(219,149,40)" fg:x="4167" fg:w="77"/><text x="64.7546%" y="590.50"></text></g><g><title>at::native::copy_ (libtorch_cpu.so) (77 samples, 1.19%)</title><rect x="64.5046%" y="596" width="1.1920%" height="15" fill="rgb(210,127,46)" fg:x="4167" fg:w="77"/><text x="64.7546%" y="606.50"></text></g><g><title>at::native::copy_impl (libtorch_cpu.so) (77 samples, 1.19%)</title><rect x="64.5046%" y="612" width="1.1920%" height="15" fill="rgb(220,106,7)" fg:x="4167" fg:w="77"/><text x="64.7546%" y="622.50"></text></g><g><title>at::native::AVX2::direct_copy_kernel (libtorch_cpu.so) (76 samples, 1.18%)</title><rect x="64.5201%" y="628" width="1.1765%" height="15" fill="rgb(249,31,22)" fg:x="4168" fg:w="76"/><text x="64.7701%" y="638.50"></text></g><g><title>at::TensorIteratorBase::for_each (libtorch_cpu.so) (76 samples, 1.18%)</title><rect x="64.5201%" y="644" width="1.1765%" height="15" fill="rgb(253,1,49)" fg:x="4168" fg:w="76"/><text x="64.7701%" y="654.50"></text></g><g><title>GOMP_parallel (libgomp-c9fef706.so.1) (60 samples, 0.93%)</title><rect x="64.7678%" y="660" width="0.9288%" height="15" fill="rgb(227,144,33)" fg:x="4184" fg:w="60"/><text x="65.0178%" y="670.50"></text></g><g><title>at::internal::invoke_parallel&lt;at::parallel_for&lt;at::TensorIteratorBase::for_each(c10::function_ref&lt;void (char**, long const*, long, long)&gt;, long)::{lambda(long, long)#1}&gt;(long, long, long, at::TensorIteratorBase::for_each(c10::function_ref&lt;void (char**, long const*, long, long)&gt;, long)::{lambda(long, long)#1} const&amp;)::{lambda(long, long)#1}&gt; (libtorch_cpu.so) (51 samples, 0.79%)</title><rect x="64.9071%" y="676" width="0.7895%" height="15" fill="rgb(249,163,44)" fg:x="4193" fg:w="51"/><text x="65.1571%" y="686.50"></text></g><g><title>at::TensorIteratorBase::serial_for_each (libtorch_cpu.so) (51 samples, 0.79%)</title><rect x="64.9071%" y="692" width="0.7895%" height="15" fill="rgb(234,15,39)" fg:x="4193" fg:w="51"/><text x="65.1571%" y="702.50"></text></g><g><title>c10::function_ref&lt;void (char**, long const*, long, long)&gt;::callback_fn&lt;at::native::AVX2::VectorizedLoop2d&lt;at::native::AVX2::direct_copy_kernel(at::TensorIteratorBase&amp;)::{lambda()#4}::operator()() const::{lambda()#15}::operator()() const::{lambda(float)#1}, at::native::AVX2::direct_copy_kernel(at::TensorIteratorBase&amp;)::{lambda()#4}::operator()() const::{lambda()#15}::operator()() const::{lambda(at::vec::AVX2::Vectorized&lt;float&gt;)#2}&gt; &gt; (libtorch_cpu.so) (51 samples, 0.79%)</title><rect x="64.9071%" y="708" width="0.7895%" height="15" fill="rgb(207,66,16)" fg:x="4193" fg:w="51"/><text x="65.1571%" y="718.50"></text></g><g><title>0x77d25141ca9d (libgomp-c9fef706.so.1) (23 samples, 0.36%)</title><rect x="65.7585%" y="580" width="0.3560%" height="15" fill="rgb(233,112,24)" fg:x="4248" fg:w="23"/><text x="66.0085%" y="590.50"></text></g><g><title>0x77d25141e02a (libgomp-c9fef706.so.1) (23 samples, 0.36%)</title><rect x="65.7585%" y="596" width="0.3560%" height="15" fill="rgb(230,90,22)" fg:x="4248" fg:w="23"/><text x="66.0085%" y="606.50"></text></g><g><title>0x77d25141c19a (libgomp-c9fef706.so.1) (25 samples, 0.39%)</title><rect x="66.1146%" y="596" width="0.3870%" height="15" fill="rgb(229,61,13)" fg:x="4271" fg:w="25"/><text x="66.3646%" y="606.50"></text></g><g><title>0x77d25141de62 (libgomp-c9fef706.so.1) (25 samples, 0.39%)</title><rect x="66.1146%" y="612" width="0.3870%" height="15" fill="rgb(225,57,24)" fg:x="4271" fg:w="25"/><text x="66.3646%" y="622.50"></text></g><g><title>dnnl::impl::cpu::x64::jit_blk_reorder_t::execute (libtorch_cpu.so) (81 samples, 1.25%)</title><rect x="65.7430%" y="564" width="1.2539%" height="15" fill="rgb(208,169,48)" fg:x="4247" fg:w="81"/><text x="65.9930%" y="574.50"></text></g><g><title>GOMP_parallel (libgomp-c9fef706.so.1) (57 samples, 0.88%)</title><rect x="66.1146%" y="580" width="0.8824%" height="15" fill="rgb(244,218,51)" fg:x="4271" fg:w="57"/><text x="66.3646%" y="590.50"></text></g><g><title>dnnl::impl::parallel (libtorch_cpu.so) (32 samples, 0.50%)</title><rect x="66.5015%" y="596" width="0.4954%" height="15" fill="rgb(214,148,10)" fg:x="4296" fg:w="32"/><text x="66.7515%" y="606.50"></text></g><g><title>0x77d25141ca9d (libgomp-c9fef706.so.1) (14 samples, 0.22%)</title><rect x="66.9969%" y="580" width="0.2167%" height="15" fill="rgb(225,174,27)" fg:x="4328" fg:w="14"/><text x="67.2469%" y="590.50"></text></g><g><title>0x77d25141e02a (libgomp-c9fef706.so.1) (14 samples, 0.22%)</title><rect x="66.9969%" y="596" width="0.2167%" height="15" fill="rgb(230,96,26)" fg:x="4328" fg:w="14"/><text x="67.2469%" y="606.50"></text></g><g><title>0x77d25141c19a (libgomp-c9fef706.so.1) (13 samples, 0.20%)</title><rect x="67.2136%" y="596" width="0.2012%" height="15" fill="rgb(232,10,30)" fg:x="4342" fg:w="13"/><text x="67.4636%" y="606.50"></text></g><g><title>0x77d25141de62 (libgomp-c9fef706.so.1) (13 samples, 0.20%)</title><rect x="67.2136%" y="612" width="0.2012%" height="15" fill="rgb(222,8,50)" fg:x="4342" fg:w="13"/><text x="67.4636%" y="622.50"></text></g><g><title>dnnl::primitive::execute (libtorch_cpu.so) (136 samples, 2.11%)</title><rect x="65.7430%" y="500" width="2.1053%" height="15" fill="rgb(213,81,27)" fg:x="4247" fg:w="136"/><text x="65.9930%" y="510.50">d..</text></g><g><title>dnnl_primitive_execute (libtorch_cpu.so) (136 samples, 2.11%)</title><rect x="65.7430%" y="516" width="2.1053%" height="15" fill="rgb(245,50,10)" fg:x="4247" fg:w="136"/><text x="65.9930%" y="526.50">d..</text></g><g><title>dnnl::impl::primitive_execute (libtorch_cpu.so) (136 samples, 2.11%)</title><rect x="65.7430%" y="532" width="2.1053%" height="15" fill="rgb(216,100,18)" fg:x="4247" fg:w="136"/><text x="65.9930%" y="542.50">d..</text></g><g><title>dnnl_primitive::execute (libtorch_cpu.so) (136 samples, 2.11%)</title><rect x="65.7430%" y="548" width="2.1053%" height="15" fill="rgb(236,147,54)" fg:x="4247" fg:w="136"/><text x="65.9930%" y="558.50">d..</text></g><g><title>dnnl::impl::cpu::x64::jit_uni_reorder_direct_copy_t::execute (libtorch_cpu.so) (55 samples, 0.85%)</title><rect x="66.9969%" y="564" width="0.8514%" height="15" fill="rgb(205,143,26)" fg:x="4328" fg:w="55"/><text x="67.2469%" y="574.50"></text></g><g><title>GOMP_parallel (libgomp-c9fef706.so.1) (41 samples, 0.63%)</title><rect x="67.2136%" y="580" width="0.6347%" height="15" fill="rgb(236,26,9)" fg:x="4342" fg:w="41"/><text x="67.4636%" y="590.50"></text></g><g><title>dnnl::impl::parallel (libtorch_cpu.so) (28 samples, 0.43%)</title><rect x="67.4149%" y="596" width="0.4334%" height="15" fill="rgb(221,165,53)" fg:x="4355" fg:w="28"/><text x="67.6649%" y="606.50"></text></g><g><title>dnnl::impl::cpu::x64::direct_copy_kernel_t&lt;Xbyak::Ymm&gt;::operator() (libtorch_cpu.so) (28 samples, 0.43%)</title><rect x="67.4149%" y="612" width="0.4334%" height="15" fill="rgb(214,110,17)" fg:x="4355" fg:w="28"/><text x="67.6649%" y="622.50"></text></g><g><title>at::native::mkldnn_to_dense (libtorch_cpu.so) (219 samples, 3.39%)</title><rect x="64.4892%" y="452" width="3.3901%" height="15" fill="rgb(237,197,12)" fg:x="4166" fg:w="219"/><text x="64.7392%" y="462.50">at:..</text></g><g><title>ideep::tensor::to_public (libtorch_cpu.so) (138 samples, 2.14%)</title><rect x="65.7430%" y="468" width="2.1362%" height="15" fill="rgb(205,84,17)" fg:x="4247" fg:w="138"/><text x="65.9930%" y="478.50">i..</text></g><g><title>ideep::tensor::reorder_to (libtorch_cpu.so) (138 samples, 2.14%)</title><rect x="65.7430%" y="484" width="2.1362%" height="15" fill="rgb(237,18,45)" fg:x="4247" fg:w="138"/><text x="65.9930%" y="494.50">i..</text></g><g><title>0x77d25141ca9d (libgomp-c9fef706.so.1) (14 samples, 0.22%)</title><rect x="67.9257%" y="564" width="0.2167%" height="15" fill="rgb(221,87,14)" fg:x="4388" fg:w="14"/><text x="68.1757%" y="574.50"></text></g><g><title>0x77d25141e02a (libgomp-c9fef706.so.1) (14 samples, 0.22%)</title><rect x="67.9257%" y="580" width="0.2167%" height="15" fill="rgb(238,186,15)" fg:x="4388" fg:w="14"/><text x="68.1757%" y="590.50"></text></g><g><title>0x77d25141c19a (libgomp-c9fef706.so.1) (11 samples, 0.17%)</title><rect x="68.1424%" y="580" width="0.1703%" height="15" fill="rgb(208,115,11)" fg:x="4402" fg:w="11"/><text x="68.3924%" y="590.50"></text></g><g><title>0x77d25141de62 (libgomp-c9fef706.so.1) (11 samples, 0.17%)</title><rect x="68.1424%" y="596" width="0.1703%" height="15" fill="rgb(254,175,0)" fg:x="4402" fg:w="11"/><text x="68.3924%" y="606.50"></text></g><g><title>dnnl::impl::cpu::x64::brgemm_convolution_bwd_strided_t&lt;(dnnl::impl::cpu::x64::cpu_isa_t)560&gt;::execute (libtorch_cpu.so) (37 samples, 0.57%)</title><rect x="67.9257%" y="532" width="0.5728%" height="15" fill="rgb(227,24,42)" fg:x="4388" fg:w="37"/><text x="68.1757%" y="542.50"></text></g><g><title>dnnl::impl::parallel (libtorch_cpu.so) (37 samples, 0.57%)</title><rect x="67.9257%" y="548" width="0.5728%" height="15" fill="rgb(223,211,37)" fg:x="4388" fg:w="37"/><text x="68.1757%" y="558.50"></text></g><g><title>GOMP_parallel (libgomp-c9fef706.so.1) (23 samples, 0.36%)</title><rect x="68.1424%" y="564" width="0.3560%" height="15" fill="rgb(235,49,27)" fg:x="4402" fg:w="23"/><text x="68.3924%" y="574.50"></text></g><g><title>dnnl::impl::parallel (libtorch_cpu.so) (12 samples, 0.19%)</title><rect x="68.3127%" y="580" width="0.1858%" height="15" fill="rgb(254,97,51)" fg:x="4413" fg:w="12"/><text x="68.5627%" y="590.50"></text></g><g><title>dnnl::impl::cpu::x64::brgemm_convolution_bwd_strided_t&lt;(dnnl::impl::cpu::x64::cpu_isa_t)560&gt;::execute(dnnl::impl::exec_ctx_t const&amp;) const::{lambda(int, int)#1}::operator() const (libtorch_cpu.so) (12 samples, 0.19%)</title><rect x="68.3127%" y="596" width="0.1858%" height="15" fill="rgb(249,51,40)" fg:x="4413" fg:w="12"/><text x="68.5627%" y="606.50"></text></g><g><title>dnnl::impl::cpu::x64::brgemm_convolution_bwd_strided_t&lt;(dnnl::impl::cpu::x64::cpu_isa_t)560&gt;::ker_base (libtorch_cpu.so) (12 samples, 0.19%)</title><rect x="68.3127%" y="612" width="0.1858%" height="15" fill="rgb(210,128,45)" fg:x="4413" fg:w="12"/><text x="68.5627%" y="622.50"></text></g><g><title>0x77d25141e02a (libgomp-c9fef706.so.1) (51 samples, 0.79%)</title><rect x="68.5139%" y="580" width="0.7895%" height="15" fill="rgb(224,137,50)" fg:x="4426" fg:w="51"/><text x="68.7639%" y="590.50"></text></g><g><title>0x77d25141ca9d (libgomp-c9fef706.so.1) (55 samples, 0.85%)</title><rect x="68.4985%" y="564" width="0.8514%" height="15" fill="rgb(242,15,9)" fg:x="4425" fg:w="55"/><text x="68.7485%" y="574.50"></text></g><g><title>0x77d25141c19a (libgomp-c9fef706.so.1) (18 samples, 0.28%)</title><rect x="69.3498%" y="580" width="0.2786%" height="15" fill="rgb(233,187,41)" fg:x="4480" fg:w="18"/><text x="69.5998%" y="590.50"></text></g><g><title>0x77d25141de62 (libgomp-c9fef706.so.1) (18 samples, 0.28%)</title><rect x="69.3498%" y="596" width="0.2786%" height="15" fill="rgb(227,2,29)" fg:x="4480" fg:w="18"/><text x="69.5998%" y="606.50"></text></g><g><title>0x77d147b00bfb (?) (10 samples, 0.15%)</title><rect x="70.0000%" y="612" width="0.1548%" height="15" fill="rgb(222,70,3)" fg:x="4522" fg:w="10"/><text x="70.2500%" y="622.50"></text></g><g><title>dnnl::primitive::execute (libtorch_cpu.so) (614 samples, 9.50%)</title><rect x="67.9257%" y="468" width="9.5046%" height="15" fill="rgb(213,11,42)" fg:x="4388" fg:w="614"/><text x="68.1757%" y="478.50">dnnl::primitiv..</text></g><g><title>dnnl_primitive_execute (libtorch_cpu.so) (614 samples, 9.50%)</title><rect x="67.9257%" y="484" width="9.5046%" height="15" fill="rgb(225,150,9)" fg:x="4388" fg:w="614"/><text x="68.1757%" y="494.50">dnnl_primitive..</text></g><g><title>dnnl::impl::primitive_execute (libtorch_cpu.so) (614 samples, 9.50%)</title><rect x="67.9257%" y="500" width="9.5046%" height="15" fill="rgb(230,162,45)" fg:x="4388" fg:w="614"/><text x="68.1757%" y="510.50">dnnl::impl::pr..</text></g><g><title>dnnl_primitive::execute (libtorch_cpu.so) (614 samples, 9.50%)</title><rect x="67.9257%" y="516" width="9.5046%" height="15" fill="rgb(222,14,52)" fg:x="4388" fg:w="614"/><text x="68.1757%" y="526.50">dnnl_primitive..</text></g><g><title>dnnl::impl::cpu::x64::jit_avx2_convolution_bwd_data_t::execute (libtorch_cpu.so) (577 samples, 8.93%)</title><rect x="68.4985%" y="532" width="8.9319%" height="15" fill="rgb(254,198,14)" fg:x="4425" fg:w="577"/><text x="68.7485%" y="542.50">dnnl::impl::c..</text></g><g><title>dnnl::impl::cpu::x64::jit_avx2_convolution_bwd_data_t::execute_backward_data (libtorch_cpu.so) (577 samples, 8.93%)</title><rect x="68.4985%" y="548" width="8.9319%" height="15" fill="rgb(220,217,30)" fg:x="4425" fg:w="577"/><text x="68.7485%" y="558.50">dnnl::impl::c..</text></g><g><title>GOMP_parallel (libgomp-c9fef706.so.1) (522 samples, 8.08%)</title><rect x="69.3498%" y="564" width="8.0805%" height="15" fill="rgb(215,146,41)" fg:x="4480" fg:w="522"/><text x="69.5998%" y="574.50">GOMP_parall..</text></g><g><title>dnnl::impl::parallel (libtorch_cpu.so) (504 samples, 7.80%)</title><rect x="69.6285%" y="580" width="7.8019%" height="15" fill="rgb(217,27,36)" fg:x="4498" fg:w="504"/><text x="69.8785%" y="590.50">dnnl::impl:..</text></g><g><title>dnnl::impl::cpu::x64::jit_avx2_convolution_bwd_data_t::execute_backward_data(dnnl::impl::exec_ctx_t const&amp;) const::{lambda(int, int)#1}::operator() const (libtorch_cpu.so) (503 samples, 7.79%)</title><rect x="69.6440%" y="596" width="7.7864%" height="15" fill="rgb(219,218,39)" fg:x="4499" fg:w="503"/><text x="69.8940%" y="606.50">dnnl::impl:..</text></g><g><title>0x77d25141ca9d (libgomp-c9fef706.so.1) (23 samples, 0.36%)</title><rect x="77.4923%" y="580" width="0.3560%" height="15" fill="rgb(219,4,42)" fg:x="5006" fg:w="23"/><text x="77.7423%" y="590.50"></text></g><g><title>0x77d25141e02a (libgomp-c9fef706.so.1) (23 samples, 0.36%)</title><rect x="77.4923%" y="596" width="0.3560%" height="15" fill="rgb(249,119,36)" fg:x="5006" fg:w="23"/><text x="77.7423%" y="606.50"></text></g><g><title>0x77d25141c19a (libgomp-c9fef706.so.1) (15 samples, 0.23%)</title><rect x="77.8483%" y="596" width="0.2322%" height="15" fill="rgb(209,23,33)" fg:x="5029" fg:w="15"/><text x="78.0983%" y="606.50"></text></g><g><title>0x77d25141de62 (libgomp-c9fef706.so.1) (15 samples, 0.23%)</title><rect x="77.8483%" y="612" width="0.2322%" height="15" fill="rgb(211,10,0)" fg:x="5029" fg:w="15"/><text x="78.0983%" y="622.50"></text></g><g><title>dnnl::impl::cpu::x64::jit_blk_reorder_t::execute (libtorch_cpu.so) (70 samples, 1.08%)</title><rect x="77.4923%" y="564" width="1.0836%" height="15" fill="rgb(208,99,37)" fg:x="5006" fg:w="70"/><text x="77.7423%" y="574.50"></text></g><g><title>GOMP_parallel (libgomp-c9fef706.so.1) (47 samples, 0.73%)</title><rect x="77.8483%" y="580" width="0.7276%" height="15" fill="rgb(213,132,31)" fg:x="5029" fg:w="47"/><text x="78.0983%" y="590.50"></text></g><g><title>dnnl::impl::parallel (libtorch_cpu.so) (32 samples, 0.50%)</title><rect x="78.0805%" y="596" width="0.4954%" height="15" fill="rgb(243,129,40)" fg:x="5044" fg:w="32"/><text x="78.3305%" y="606.50"></text></g><g><title>0x77d25141e02a (libgomp-c9fef706.so.1) (66 samples, 1.02%)</title><rect x="78.5759%" y="612" width="1.0217%" height="15" fill="rgb(210,66,33)" fg:x="5076" fg:w="66"/><text x="78.8259%" y="622.50"></text></g><g><title>0x77d25141ca9d (libgomp-c9fef706.so.1) (67 samples, 1.04%)</title><rect x="78.5759%" y="596" width="1.0372%" height="15" fill="rgb(209,189,4)" fg:x="5076" fg:w="67"/><text x="78.8259%" y="606.50"></text></g><g><title>0x77d25141c19a (libgomp-c9fef706.so.1) (54 samples, 0.84%)</title><rect x="79.6130%" y="612" width="0.8359%" height="15" fill="rgb(214,107,37)" fg:x="5143" fg:w="54"/><text x="79.8630%" y="622.50"></text></g><g><title>0x77d25141de62 (libgomp-c9fef706.so.1) (54 samples, 0.84%)</title><rect x="79.6130%" y="628" width="0.8359%" height="15" fill="rgb(245,88,54)" fg:x="5143" fg:w="54"/><text x="79.8630%" y="638.50"></text></g><g><title>dnnl::primitive::execute (libtorch_cpu.so) (209 samples, 3.24%)</title><rect x="77.4768%" y="500" width="3.2353%" height="15" fill="rgb(205,146,20)" fg:x="5005" fg:w="209"/><text x="77.7268%" y="510.50">dnn..</text></g><g><title>dnnl_primitive_execute (libtorch_cpu.so) (209 samples, 3.24%)</title><rect x="77.4768%" y="516" width="3.2353%" height="15" fill="rgb(220,161,25)" fg:x="5005" fg:w="209"/><text x="77.7268%" y="526.50">dnn..</text></g><g><title>dnnl::impl::primitive_execute (libtorch_cpu.so) (208 samples, 3.22%)</title><rect x="77.4923%" y="532" width="3.2198%" height="15" fill="rgb(215,152,15)" fg:x="5006" fg:w="208"/><text x="77.7423%" y="542.50">dnn..</text></g><g><title>dnnl_primitive::execute (libtorch_cpu.so) (208 samples, 3.22%)</title><rect x="77.4923%" y="548" width="3.2198%" height="15" fill="rgb(233,192,44)" fg:x="5006" fg:w="208"/><text x="77.7423%" y="558.50">dnn..</text></g><g><title>dnnl::impl::cpu::x64::jit_uni_reorder_t::execute (libtorch_cpu.so) (138 samples, 2.14%)</title><rect x="78.5759%" y="564" width="2.1362%" height="15" fill="rgb(240,170,46)" fg:x="5076" fg:w="138"/><text x="78.8259%" y="574.50">d..</text></g><g><title>dnnl::impl::cpu::x64::jit_uni_reorder_t::omp_driver (libtorch_cpu.so) (138 samples, 2.14%)</title><rect x="78.5759%" y="580" width="2.1362%" height="15" fill="rgb(207,104,33)" fg:x="5076" fg:w="138"/><text x="78.8259%" y="590.50">d..</text></g><g><title>GOMP_parallel (libgomp-c9fef706.so.1) (71 samples, 1.10%)</title><rect x="79.6130%" y="596" width="1.0991%" height="15" fill="rgb(219,21,39)" fg:x="5143" fg:w="71"/><text x="79.8630%" y="606.50"></text></g><g><title>dnnl::impl::parallel (libtorch_cpu.so) (17 samples, 0.26%)</title><rect x="80.4489%" y="612" width="0.2632%" height="15" fill="rgb(214,133,29)" fg:x="5197" fg:w="17"/><text x="80.6989%" y="622.50"></text></g><g><title>std::_Function_handler&lt;void (int, int), dnnl::impl::cpu::x64::jit_uni_reorder_t::omp_driver(char const*, char*, float const*, float const*, int, int, dnnl::impl::memory_tracking::grantor_t const&amp;) const::{lambda(int, int)#1}&gt;::_M_invoke (libtorch_cpu.so) (17 samples, 0.26%)</title><rect x="80.4489%" y="628" width="0.2632%" height="15" fill="rgb(226,93,6)" fg:x="5197" fg:w="17"/><text x="80.6989%" y="638.50"></text></g><g><title>dnnl::impl::cpu::x64::jit_uni_reorder_t::omp_driver_2d (libtorch_cpu.so) (17 samples, 0.26%)</title><rect x="80.4489%" y="644" width="0.2632%" height="15" fill="rgb(252,222,34)" fg:x="5197" fg:w="17"/><text x="80.6989%" y="654.50"></text></g><g><title>std::_Function_handler&lt;void (long, long), dnnl::impl::cpu::x64::jit_uni_reorder_t::omp_driver_2d(int, int, int, char const*, char*, float const*, float const*, int, int, int*) const::{lambda(long, long)#1}&gt;::_M_invoke (libtorch_cpu.so) (16 samples, 0.25%)</title><rect x="80.4644%" y="660" width="0.2477%" height="15" fill="rgb(252,92,48)" fg:x="5198" fg:w="16"/><text x="80.7144%" y="670.50"></text></g><g><title>ideep::tensor::reorder_to (libtorch_cpu.so) (214 samples, 3.31%)</title><rect x="77.4768%" y="484" width="3.3127%" height="15" fill="rgb(245,223,24)" fg:x="5005" fg:w="214"/><text x="77.7268%" y="494.50">ide..</text></g><g><title>ideep::tensor::reorder_if_differ_in (libtorch_cpu.so) (216 samples, 3.34%)</title><rect x="77.4768%" y="468" width="3.3437%" height="15" fill="rgb(205,176,3)" fg:x="5005" fg:w="216"/><text x="77.7268%" y="478.50">ide..</text></g><g><title>torch::autograd::generated::ConvolutionBackward0::apply (libtorch_cpu.so) (2,422 samples, 37.49%)</title><rect x="43.3437%" y="292" width="37.4923%" height="15" fill="rgb(235,151,15)" fg:x="2800" fg:w="2422"/><text x="43.5937%" y="302.50">torch::autograd::generated::ConvolutionBackward0::apply (libt..</text></g><g><title>torch::autograd::generated::ConvolutionBackward1_apply_functional (libtorch_cpu.so) (2,422 samples, 37.49%)</title><rect x="43.3437%" y="308" width="37.4923%" height="15" fill="rgb(237,209,11)" fg:x="2800" fg:w="2422"/><text x="43.5937%" y="318.50">torch::autograd::generated::ConvolutionBackward1_apply_functi..</text></g><g><title>at::_ops::convolution_backward::call (libtorch_cpu.so) (2,422 samples, 37.49%)</title><rect x="43.3437%" y="324" width="37.4923%" height="15" fill="rgb(243,227,24)" fg:x="2800" fg:w="2422"/><text x="43.5937%" y="334.50">at::_ops::convolution_backward::call (libtorch_cpu.so)</text></g><g><title>c10::impl::wrap_kernel_functor_unboxed_&lt;c10::impl::detail::WrapFunctionIntoFunctor_&lt;c10::CompileTimeFunctionPointer&lt;std::tuple&lt;at::Tensor, at::Tensor, at::Tensor&gt; (c10::DispatchKeySet, at::Tensor const&amp;, at::Tensor const&amp;, at::Tensor const&amp;, c10::OptionalArrayRef&lt;c10::SymInt&gt;, c10::ArrayRef&lt;c10::SymInt&gt;, c10::ArrayRef&lt;c10::SymInt&gt;, c10::ArrayRef&lt;c10::SymInt&gt;, bool, c10::ArrayRef&lt;c10::SymInt&gt;, c10::SymInt, std::array&lt;bool, (unsigned long)3&gt;), &amp;torch::autograd::VariableType::(anonymous namespace)::convolution_backward(c10::DispatchKeySet, at::Tensor const&amp;, at::Tensor const&amp;, at::Tensor const&amp;, c10::OptionalArrayRef&lt;c10::SymInt&gt;, c10::ArrayRef&lt;c10::SymInt&gt;, c10::ArrayRef&lt;c10::SymInt&gt;, c10::ArrayRef&lt;c10::SymInt&gt;, bool, c10::ArrayRef&lt;c10::SymInt&gt;, c10::SymInt, std::array&lt;bool, (unsigned long)3&gt;)&gt;, std::tuple&lt;at::Tensor, at::Tensor, at::Tensor&gt;, c10::guts::typelist::typelist&lt;c10::DispatchKeySet, at::Tensor const&amp;, at::Tensor const&amp;, at::Tensor const&amp;, c10::OptionalArrayRef&lt;c10::SymInt&gt;, c10::ArrayRef&lt;c10::SymInt&gt;, c10::ArrayRef&lt;c10::SymInt&gt;, c10::ArrayRef&lt;c10::SymInt&gt;, bool, c10::ArrayRef&lt;c10::SymInt&gt;, c10::SymInt, std::array&lt;bool, (unsigned long)3&gt; &gt; &gt;, std::tuple&lt;at::Tensor, at::Tensor, at::Tensor&gt; (c10::DispatchKeySet, at::Tensor const&amp;, at::Tensor const&amp;, at::Tensor const&amp;, c10::OptionalArrayRef&lt;c10::SymInt&gt;, c10::ArrayRef&lt;c10::SymInt&gt;, c10::ArrayRef&lt;c10::SymInt&gt;, c10::ArrayRef&lt;c10::SymInt&gt;, bool, c10::ArrayRef&lt;c10::SymInt&gt;, c10::SymInt, std::array&lt;bool, (unsigned long)3&gt;)&gt;::call (libtorch_cpu.so) (2,422 samples, 37.49%)</title><rect x="43.3437%" y="340" width="37.4923%" height="15" fill="rgb(239,193,16)" fg:x="2800" fg:w="2422"/><text x="43.5937%" y="350.50">c10::impl::wrap_kernel_functor_unboxed_&lt;c10::impl::detail::Wr..</text></g><g><title>torch::autograd::VariableType::(anonymous namespace)::convolution_backward (libtorch_cpu.so) (2,422 samples, 37.49%)</title><rect x="43.3437%" y="356" width="37.4923%" height="15" fill="rgb(231,27,9)" fg:x="2800" fg:w="2422"/><text x="43.5937%" y="366.50">torch::autograd::VariableType::(anonymous namespace)::convolu..</text></g><g><title>at::_ops::convolution_backward::redispatch (libtorch_cpu.so) (2,422 samples, 37.49%)</title><rect x="43.3437%" y="372" width="37.4923%" height="15" fill="rgb(219,169,10)" fg:x="2800" fg:w="2422"/><text x="43.5937%" y="382.50">at::_ops::convolution_backward::redispatch (libtorch_cpu.so)</text></g><g><title>c10::impl::wrap_kernel_functor_unboxed_&lt;c10::impl::detail::WrapFunctionIntoFunctor_&lt;c10::CompileTimeFunctionPointer&lt;std::tuple&lt;at::Tensor, at::Tensor, at::Tensor&gt; (at::Tensor const&amp;, at::Tensor const&amp;, at::Tensor const&amp;, c10::OptionalArrayRef&lt;c10::SymInt&gt;, c10::ArrayRef&lt;c10::SymInt&gt;, c10::ArrayRef&lt;c10::SymInt&gt;, c10::ArrayRef&lt;c10::SymInt&gt;, bool, c10::ArrayRef&lt;c10::SymInt&gt;, c10::SymInt, std::array&lt;bool, (unsigned long)3&gt;), &amp;at::(anonymous namespace)::(anonymous namespace)::wrapper_CompositeExplicitAutograd__convolution_backward(at::Tensor const&amp;, at::Tensor const&amp;, at::Tensor const&amp;, c10::OptionalArrayRef&lt;c10::SymInt&gt;, c10::ArrayRef&lt;c10::SymInt&gt;, c10::ArrayRef&lt;c10::SymInt&gt;, c10::ArrayRef&lt;c10::SymInt&gt;, bool, c10::ArrayRef&lt;c10::SymInt&gt;, c10::SymInt, std::array&lt;bool, (unsigned long)3&gt;)&gt;, std::tuple&lt;at::Tensor, at::Tensor, at::Tensor&gt;, c10::guts::typelist::typelist&lt;at::Tensor const&amp;, at::Tensor const&amp;, at::Tensor const&amp;, c10::OptionalArrayRef&lt;c10::SymInt&gt;, c10::ArrayRef&lt;c10::SymInt&gt;, c10::ArrayRef&lt;c10::SymInt&gt;, c10::ArrayRef&lt;c10::SymInt&gt;, bool, c10::ArrayRef&lt;c10::SymInt&gt;, c10::SymInt, std::array&lt;bool, (unsigned long)3&gt; &gt; &gt;, std::tuple&lt;at::Tensor, at::Tensor, at::Tensor&gt; (at::Tensor const&amp;, at::Tensor const&amp;, at::Tensor const&amp;, c10::OptionalArrayRef&lt;c10::SymInt&gt;, c10::ArrayRef&lt;c10::SymInt&gt;, c10::ArrayRef&lt;c10::SymInt&gt;, c10::ArrayRef&lt;c10::SymInt&gt;, bool, c10::ArrayRef&lt;c10::SymInt&gt;, c10::SymInt, std::array&lt;bool, (unsigned long)3&gt;)&gt;::call (libtorch_cpu.so) (2,422 samples, 37.49%)</title><rect x="43.3437%" y="388" width="37.4923%" height="15" fill="rgb(244,229,43)" fg:x="2800" fg:w="2422"/><text x="43.5937%" y="398.50">c10::impl::wrap_kernel_functor_unboxed_&lt;c10::impl::detail::Wr..</text></g><g><title>at::(anonymous namespace)::(anonymous namespace)::wrapper_CompositeExplicitAutograd__convolution_backward (libtorch_cpu.so) (2,422 samples, 37.49%)</title><rect x="43.3437%" y="404" width="37.4923%" height="15" fill="rgb(254,38,20)" fg:x="2800" fg:w="2422"/><text x="43.5937%" y="414.50">at::(anonymous namespace)::(anonymous namespace)::wrapper_Com..</text></g><g><title>at::native::convolution_backward (libtorch_cpu.so) (2,421 samples, 37.48%)</title><rect x="43.3591%" y="420" width="37.4768%" height="15" fill="rgb(250,47,30)" fg:x="2801" fg:w="2421"/><text x="43.6091%" y="430.50">at::native::convolution_backward (libtorch_cpu.so)</text></g><g><title>at::native::(anonymous namespace)::mkldnn_convolution_backward (libtorch_cpu.so) (2,421 samples, 37.48%)</title><rect x="43.3591%" y="436" width="37.4768%" height="15" fill="rgb(224,124,36)" fg:x="2801" fg:w="2421"/><text x="43.6091%" y="446.50">at::native::(anonymous namespace)::mkldnn_convolution_backwar..</text></g><g><title>ideep::convolution_backward_data::compute_v2 (libtorch_cpu.so) (835 samples, 12.93%)</title><rect x="67.9102%" y="452" width="12.9257%" height="15" fill="rgb(246,68,51)" fg:x="4387" fg:w="835"/><text x="68.1602%" y="462.50">ideep::convolution_..</text></g><g><title>at::TensorIteratorBase::serial_for_each (libtorch_cpu.so) (20 samples, 0.31%)</title><rect x="81.0062%" y="580" width="0.3096%" height="15" fill="rgb(253,43,49)" fg:x="5233" fg:w="20"/><text x="81.2562%" y="590.50"></text></g><g><title>c10::function_ref&lt;void (char**, long const*, long, long)&gt;::callback_fn&lt;at::native::AVX2::VectorizedLoop2d&lt;at::native::(anonymous namespace)::fill_kernel(at::TensorIterator&amp;, c10::Scalar const&amp;)::{lambda()#1}::operator()() const::{lambda()#7}::operator()() const::{lambda()#1}, at::native::(anonymous namespace)::fill_kernel(at::TensorIterator&amp;, c10::Scalar const&amp;)::{lambda()#1}::operator()() const::{lambda()#7}::operator()() const::{lambda()#2}&gt; &gt; (libtorch_cpu.so) (20 samples, 0.31%)</title><rect x="81.0062%" y="596" width="0.3096%" height="15" fill="rgb(219,54,36)" fg:x="5233" fg:w="20"/><text x="81.2562%" y="606.50"></text></g><g><title>at::_ops::zero_::call (libtorch_cpu.so) (27 samples, 0.42%)</title><rect x="80.9133%" y="436" width="0.4180%" height="15" fill="rgb(227,133,34)" fg:x="5227" fg:w="27"/><text x="81.1633%" y="446.50"></text></g><g><title>at::native::zero_ (libtorch_cpu.so) (27 samples, 0.42%)</title><rect x="80.9133%" y="452" width="0.4180%" height="15" fill="rgb(247,227,15)" fg:x="5227" fg:w="27"/><text x="81.1633%" y="462.50"></text></g><g><title>at::_ops::fill__Scalar::call (libtorch_cpu.so) (27 samples, 0.42%)</title><rect x="80.9133%" y="468" width="0.4180%" height="15" fill="rgb(229,96,14)" fg:x="5227" fg:w="27"/><text x="81.1633%" y="478.50"></text></g><g><title>at::native::fill_out (libtorch_cpu.so) (27 samples, 0.42%)</title><rect x="80.9133%" y="484" width="0.4180%" height="15" fill="rgb(220,79,17)" fg:x="5227" fg:w="27"/><text x="81.1633%" y="494.50"></text></g><g><title>at::native::(anonymous namespace)::fill_kernel (libtorch_cpu.so) (26 samples, 0.40%)</title><rect x="80.9288%" y="500" width="0.4025%" height="15" fill="rgb(205,131,53)" fg:x="5228" fg:w="26"/><text x="81.1788%" y="510.50"></text></g><g><title>at::native::(anonymous namespace)::fill_kernel(at::TensorIterator&amp;, c10::Scalar const&amp;)::{lambda()#1}::operator() const (libtorch_cpu.so) (26 samples, 0.40%)</title><rect x="80.9288%" y="516" width="0.4025%" height="15" fill="rgb(209,50,29)" fg:x="5228" fg:w="26"/><text x="81.1788%" y="526.50"></text></g><g><title>at::TensorIteratorBase::for_each (libtorch_cpu.so) (26 samples, 0.40%)</title><rect x="80.9288%" y="532" width="0.4025%" height="15" fill="rgb(245,86,46)" fg:x="5228" fg:w="26"/><text x="81.1788%" y="542.50"></text></g><g><title>GOMP_parallel (libgomp-c9fef706.so.1) (25 samples, 0.39%)</title><rect x="80.9443%" y="548" width="0.3870%" height="15" fill="rgb(235,66,46)" fg:x="5229" fg:w="25"/><text x="81.1943%" y="558.50"></text></g><g><title>at::internal::invoke_parallel&lt;at::parallel_for&lt;at::TensorIteratorBase::for_each(c10::function_ref&lt;void (char**, long const*, long, long)&gt;, long)::{lambda(long, long)#1}&gt;(long, long, long, at::TensorIteratorBase::for_each(c10::function_ref&lt;void (char**, long const*, long, long)&gt;, long)::{lambda(long, long)#1} const&amp;)::{lambda(long, long)#1}&gt; (libtorch_cpu.so) (21 samples, 0.33%)</title><rect x="81.0062%" y="564" width="0.3251%" height="15" fill="rgb(232,148,31)" fg:x="5233" fg:w="21"/><text x="81.2562%" y="574.50"></text></g><g><title>torch::autograd::generated::MaxPool2DWithIndicesBackward0::apply (libtorch_cpu.so) (42 samples, 0.65%)</title><rect x="80.8978%" y="292" width="0.6502%" height="15" fill="rgb(217,149,8)" fg:x="5226" fg:w="42"/><text x="81.1478%" y="302.50"></text></g><g><title>torch::autograd::generated::MaxPool2DWithIndicesBackward0_apply_functional (libtorch_cpu.so) (42 samples, 0.65%)</title><rect x="80.8978%" y="308" width="0.6502%" height="15" fill="rgb(209,183,11)" fg:x="5226" fg:w="42"/><text x="81.1478%" y="318.50"></text></g><g><title>at::_ops::max_pool2d_with_indices_backward::call (libtorch_cpu.so) (42 samples, 0.65%)</title><rect x="80.8978%" y="324" width="0.6502%" height="15" fill="rgb(208,55,20)" fg:x="5226" fg:w="42"/><text x="81.1478%" y="334.50"></text></g><g><title>c10::impl::wrap_kernel_functor_unboxed_&lt;c10::impl::detail::WrapFunctionIntoFunctor_&lt;c10::CompileTimeFunctionPointer&lt;at::Tensor(c10::DispatchKeySet, at::Tensor const&amp;, at::Tensor const&amp;, c10::ArrayRef&lt;long&gt;, c10::ArrayRef&lt;long&gt;, c10::ArrayRef&lt;long&gt;, c10::ArrayRef&lt;long&gt;, bool, at::Tensor const&amp;), &amp;torch::autograd::VariableType::(anonymous namespace)::max_pool2d_with_indices_backward(c10::DispatchKeySet, at::Tensor const&amp;, at::Tensor const&amp;, c10::ArrayRef&lt;long&gt;, c10::ArrayRef&lt;long&gt;, c10::ArrayRef&lt;long&gt;, c10::ArrayRef&lt;long&gt;, bool, at::Tensor const&amp;)&gt;, at::Tensor, c10::guts::typelist::typelist&lt;c10::DispatchKeySet, at::Tensor const&amp;, at::Tensor const&amp;, c10::ArrayRef&lt;long&gt;, c10::ArrayRef&lt;long&gt;, c10::ArrayRef&lt;long&gt;, c10::ArrayRef&lt;long&gt;, bool, at::Tensor const&amp;&gt; &gt;, at::Tensor(c10::DispatchKeySet, at::Tensor const&amp;, at::Tensor const&amp;, c10::ArrayRef&lt;long&gt;, c10::ArrayRef&lt;long&gt;, c10::ArrayRef&lt;long&gt;, c10::ArrayRef&lt;long&gt;, bool, at::Tensor const&amp;)&gt;::call (libtorch_cpu.so) (42 samples, 0.65%)</title><rect x="80.8978%" y="340" width="0.6502%" height="15" fill="rgb(218,39,14)" fg:x="5226" fg:w="42"/><text x="81.1478%" y="350.50"></text></g><g><title>torch::autograd::VariableType::(anonymous namespace)::max_pool2d_with_indices_backward (libtorch_cpu.so) (42 samples, 0.65%)</title><rect x="80.8978%" y="356" width="0.6502%" height="15" fill="rgb(216,169,33)" fg:x="5226" fg:w="42"/><text x="81.1478%" y="366.50"></text></g><g><title>at::_ops::max_pool2d_with_indices_backward::redispatch (libtorch_cpu.so) (42 samples, 0.65%)</title><rect x="80.8978%" y="372" width="0.6502%" height="15" fill="rgb(233,80,24)" fg:x="5226" fg:w="42"/><text x="81.1478%" y="382.50"></text></g><g><title>c10::impl::wrap_kernel_functor_unboxed_&lt;c10::impl::detail::WrapFunctionIntoFunctor_&lt;c10::CompileTimeFunctionPointer&lt;at::Tensor(at::Tensor const&amp;, at::Tensor const&amp;, c10::ArrayRef&lt;long&gt;, c10::ArrayRef&lt;long&gt;, c10::ArrayRef&lt;long&gt;, c10::ArrayRef&lt;long&gt;, bool, at::Tensor const&amp;), &amp;at::(anonymous namespace)::wrapper_CPU_max_pool2d_with_indices_backward(at::Tensor const&amp;, at::Tensor const&amp;, c10::ArrayRef&lt;long&gt;, c10::ArrayRef&lt;long&gt;, c10::ArrayRef&lt;long&gt;, c10::ArrayRef&lt;long&gt;, bool, at::Tensor const&amp;)&gt;, at::Tensor, c10::guts::typelist::typelist&lt;at::Tensor const&amp;, at::Tensor const&amp;, c10::ArrayRef&lt;long&gt;, c10::ArrayRef&lt;long&gt;, c10::ArrayRef&lt;long&gt;, c10::ArrayRef&lt;long&gt;, bool, at::Tensor const&amp;&gt; &gt;, at::Tensor(at::Tensor const&amp;, at::Tensor const&amp;, c10::ArrayRef&lt;long&gt;, c10::ArrayRef&lt;long&gt;, c10::ArrayRef&lt;long&gt;, c10::ArrayRef&lt;long&gt;, bool, at::Tensor const&amp;)&gt;::call (libtorch_cpu.so) (42 samples, 0.65%)</title><rect x="80.8978%" y="388" width="0.6502%" height="15" fill="rgb(213,179,31)" fg:x="5226" fg:w="42"/><text x="81.1478%" y="398.50"></text></g><g><title>at::(anonymous namespace)::wrapper_CPU_max_pool2d_with_indices_backward (libtorch_cpu.so) (42 samples, 0.65%)</title><rect x="80.8978%" y="404" width="0.6502%" height="15" fill="rgb(209,19,5)" fg:x="5226" fg:w="42"/><text x="81.1478%" y="414.50"></text></g><g><title>at::native::structured_max_pool2d_with_indices_backward_out_cpu::impl (libtorch_cpu.so) (41 samples, 0.63%)</title><rect x="80.9133%" y="420" width="0.6347%" height="15" fill="rgb(219,18,35)" fg:x="5227" fg:w="41"/><text x="81.1633%" y="430.50"></text></g><g><title>at::native::(anonymous namespace)::max_pool2d_backward_kernel_impl (libtorch_cpu.so) (14 samples, 0.22%)</title><rect x="81.3313%" y="436" width="0.2167%" height="15" fill="rgb(209,169,16)" fg:x="5254" fg:w="14"/><text x="81.5813%" y="446.50"></text></g><g><title>GOMP_parallel (libgomp-c9fef706.so.1) (13 samples, 0.20%)</title><rect x="81.3467%" y="452" width="0.2012%" height="15" fill="rgb(245,90,51)" fg:x="5255" fg:w="13"/><text x="81.5967%" y="462.50"></text></g><g><title>at::internal::invoke_parallel&lt;at::parallel_for&lt;at::native::(anonymous namespace)::cpu_max_pool_backward&lt;float, false&gt;(at::Tensor const&amp;, at::Tensor const&amp;, at::Tensor const&amp;)::{lambda(long, long)#1}&gt;(long, long, long, at::native::(anonymous namespace)::cpu_max_pool_backward&lt;float, false&gt;(at::Tensor const&amp;, at::Tensor const&amp;, at::Tensor const&amp;)::{lambda(long, long)#1} const&amp;)::{lambda(long, long)#1}&gt; (libtorch_cpu.so) (12 samples, 0.19%)</title><rect x="81.3622%" y="468" width="0.1858%" height="15" fill="rgb(220,99,45)" fg:x="5256" fg:w="12"/><text x="81.6122%" y="478.50"></text></g><g><title>0x77d25141e02a (libgomp-c9fef706.so.1) (56 samples, 0.87%)</title><rect x="81.6254%" y="468" width="0.8669%" height="15" fill="rgb(249,89,25)" fg:x="5273" fg:w="56"/><text x="81.8754%" y="478.50"></text></g><g><title>0x77d25141ca9d (libgomp-c9fef706.so.1) (58 samples, 0.90%)</title><rect x="81.6254%" y="452" width="0.8978%" height="15" fill="rgb(239,193,0)" fg:x="5273" fg:w="58"/><text x="81.8754%" y="462.50"></text></g><g><title>0x77d25141de62 (libgomp-c9fef706.so.1) (27 samples, 0.42%)</title><rect x="82.5232%" y="484" width="0.4180%" height="15" fill="rgb(231,126,1)" fg:x="5331" fg:w="27"/><text x="82.7732%" y="494.50"></text></g><g><title>0x77d25141c19a (libgomp-c9fef706.so.1) (28 samples, 0.43%)</title><rect x="82.5232%" y="468" width="0.4334%" height="15" fill="rgb(243,166,3)" fg:x="5331" fg:w="28"/><text x="82.7732%" y="478.50"></text></g><g><title>at::native::(anonymous namespace)::batch_norm_cpu_backward_kernel (libtorch_cpu.so) (172 samples, 2.66%)</title><rect x="81.6254%" y="436" width="2.6625%" height="15" fill="rgb(223,22,34)" fg:x="5273" fg:w="172"/><text x="81.8754%" y="446.50">at..</text></g><g><title>GOMP_parallel (libgomp-c9fef706.so.1) (114 samples, 1.76%)</title><rect x="82.5232%" y="452" width="1.7647%" height="15" fill="rgb(251,52,51)" fg:x="5331" fg:w="114"/><text x="82.7732%" y="462.50"></text></g><g><title>at::internal::invoke_parallel&lt;at::parallel_for&lt;at::native::(anonymous namespace)::batch_norm_cpu_backward_contiguous_impl&lt;float&gt;(at::Tensor&amp;, at::Tensor&amp;, at::Tensor&amp;, at::Tensor const&amp;, at::Tensor const&amp;, at::Tensor const&amp;, at::Tensor const&amp;, at::Tensor const&amp;, at::Tensor const&amp;, at::Tensor const&amp;, bool, double)::{lambda(long, long)#1}&gt;(long, long, long, at::native::(anonymous namespace)::batch_norm_cpu_backward_contiguous_impl&lt;float&gt;(at::Tensor&amp;, at::Tensor&amp;, at::Tensor&amp;, at::Tensor const&amp;, at::Tensor const&amp;, at::Tensor const&amp;, at::Tensor const&amp;, at::Tensor const&amp;, at::Tensor const&amp;, at::Tensor const&amp;, bool, double)::{lambda(long, long)#1} const&amp;)::{lambda(long, long)#1}&gt; (libtorch_cpu.so) (86 samples, 1.33%)</title><rect x="82.9567%" y="468" width="1.3313%" height="15" fill="rgb(221,165,28)" fg:x="5359" fg:w="86"/><text x="83.2067%" y="478.50"></text></g><g><title>at::native::(anonymous namespace)::batch_norm_cpu_backward_contiguous_impl&lt;float&gt;(at::Tensor&amp;, at::Tensor&amp;, at::Tensor&amp;, at::Tensor const&amp;, at::Tensor const&amp;, at::Tensor const&amp;, at::Tensor const&amp;, at::Tensor const&amp;, at::Tensor const&amp;, at::Tensor const&amp;, bool, double)::{lambda(long, long)#1}::operator() const (libtorch_cpu.so) (86 samples, 1.33%)</title><rect x="82.9567%" y="484" width="1.3313%" height="15" fill="rgb(218,121,47)" fg:x="5359" fg:w="86"/><text x="83.2067%" y="494.50"></text></g><g><title>torch::autograd::generated::NativeBatchNormBackward0::apply (libtorch_cpu.so) (173 samples, 2.68%)</title><rect x="81.6254%" y="292" width="2.6780%" height="15" fill="rgb(209,120,9)" fg:x="5273" fg:w="173"/><text x="81.8754%" y="302.50">to..</text></g><g><title>torch::autograd::generated::NativeBatchNormLegitBackward0_apply_functional (libtorch_cpu.so) (173 samples, 2.68%)</title><rect x="81.6254%" y="308" width="2.6780%" height="15" fill="rgb(236,68,12)" fg:x="5273" fg:w="173"/><text x="81.8754%" y="318.50">to..</text></g><g><title>at::_ops::native_batch_norm_backward::call (libtorch_cpu.so) (173 samples, 2.68%)</title><rect x="81.6254%" y="324" width="2.6780%" height="15" fill="rgb(225,194,26)" fg:x="5273" fg:w="173"/><text x="81.8754%" y="334.50">at..</text></g><g><title>c10::impl::wrap_kernel_functor_unboxed_&lt;c10::impl::detail::WrapFunctionIntoFunctor_&lt;c10::CompileTimeFunctionPointer&lt;std::tuple&lt;at::Tensor, at::Tensor, at::Tensor&gt; (c10::DispatchKeySet, at::Tensor const&amp;, at::Tensor const&amp;, std::optional&lt;at::Tensor&gt; const&amp;, std::optional&lt;at::Tensor&gt; const&amp;, std::optional&lt;at::Tensor&gt; const&amp;, std::optional&lt;at::Tensor&gt; const&amp;, std::optional&lt;at::Tensor&gt; const&amp;, bool, double, std::array&lt;bool, (unsigned long)3&gt;), &amp;torch::autograd::VariableType::(anonymous namespace)::native_batch_norm_backward(c10::DispatchKeySet, at::Tensor const&amp;, at::Tensor const&amp;, std::optional&lt;at::Tensor&gt; const&amp;, std::optional&lt;at::Tensor&gt; const&amp;, std::optional&lt;at::Tensor&gt; const&amp;, std::optional&lt;at::Tensor&gt; const&amp;, std::optional&lt;at::Tensor&gt; const&amp;, bool, double, std::array&lt;bool, (unsigned long)3&gt;)&gt;, std::tuple&lt;at::Tensor, at::Tensor, at::Tensor&gt;, c10::guts::typelist::typelist&lt;c10::DispatchKeySet, at::Tensor const&amp;, at::Tensor const&amp;, std::optional&lt;at::Tensor&gt; const&amp;, std::optional&lt;at::Tensor&gt; const&amp;, std::optional&lt;at::Tensor&gt; const&amp;, std::optional&lt;at::Tensor&gt; const&amp;, std::optional&lt;at::Tensor&gt; const&amp;, bool, double, std::array&lt;bool, (unsigned long)3&gt; &gt; &gt;, std::tuple&lt;at::Tensor, at::Tensor, at::Tensor&gt; (c10::DispatchKeySet, at::Tensor const&amp;, at::Tensor const&amp;, std::optional&lt;at::Tensor&gt; const&amp;, std::optional&lt;at::Tensor&gt; const&amp;, std::optional&lt;at::Tensor&gt; const&amp;, std::optional&lt;at::Tensor&gt; const&amp;, std::optional&lt;at::Tensor&gt; const&amp;, bool, double, std::array&lt;bool, (unsigned long)3&gt;)&gt;::call (libtorch_cpu.so) (173 samples, 2.68%)</title><rect x="81.6254%" y="340" width="2.6780%" height="15" fill="rgb(231,84,39)" fg:x="5273" fg:w="173"/><text x="81.8754%" y="350.50">c1..</text></g><g><title>torch::autograd::VariableType::(anonymous namespace)::native_batch_norm_backward (libtorch_cpu.so) (173 samples, 2.68%)</title><rect x="81.6254%" y="356" width="2.6780%" height="15" fill="rgb(210,11,45)" fg:x="5273" fg:w="173"/><text x="81.8754%" y="366.50">to..</text></g><g><title>at::_ops::native_batch_norm_backward::redispatch (libtorch_cpu.so) (173 samples, 2.68%)</title><rect x="81.6254%" y="372" width="2.6780%" height="15" fill="rgb(224,54,52)" fg:x="5273" fg:w="173"/><text x="81.8754%" y="382.50">at..</text></g><g><title>c10::impl::wrap_kernel_functor_unboxed_&lt;c10::impl::detail::WrapFunctionIntoFunctor_&lt;c10::CompileTimeFunctionPointer&lt;std::tuple&lt;at::Tensor, at::Tensor, at::Tensor&gt; (at::Tensor const&amp;, at::Tensor const&amp;, std::optional&lt;at::Tensor&gt; const&amp;, std::optional&lt;at::Tensor&gt; const&amp;, std::optional&lt;at::Tensor&gt; const&amp;, std::optional&lt;at::Tensor&gt; const&amp;, std::optional&lt;at::Tensor&gt; const&amp;, bool, double, std::array&lt;bool, (unsigned long)3&gt;), &amp;at::(anonymous namespace)::(anonymous namespace)::wrapper_CPU__native_batch_norm_backward(at::Tensor const&amp;, at::Tensor const&amp;, std::optional&lt;at::Tensor&gt; const&amp;, std::optional&lt;at::Tensor&gt; const&amp;, std::optional&lt;at::Tensor&gt; const&amp;, std::optional&lt;at::Tensor&gt; const&amp;, std::optional&lt;at::Tensor&gt; const&amp;, bool, double, std::array&lt;bool, (unsigned long)3&gt;)&gt;, std::tuple&lt;at::Tensor, at::Tensor, at::Tensor&gt;, c10::guts::typelist::typelist&lt;at::Tensor const&amp;, at::Tensor const&amp;, std::optional&lt;at::Tensor&gt; const&amp;, std::optional&lt;at::Tensor&gt; const&amp;, std::optional&lt;at::Tensor&gt; const&amp;, std::optional&lt;at::Tensor&gt; const&amp;, std::optional&lt;at::Tensor&gt; const&amp;, bool, double, std::array&lt;bool, (unsigned long)3&gt; &gt; &gt;, std::tuple&lt;at::Tensor, at::Tensor, at::Tensor&gt; (at::Tensor const&amp;, at::Tensor const&amp;, std::optional&lt;at::Tensor&gt; const&amp;, std::optional&lt;at::Tensor&gt; const&amp;, std::optional&lt;at::Tensor&gt; const&amp;, std::optional&lt;at::Tensor&gt; const&amp;, std::optional&lt;at::Tensor&gt; const&amp;, bool, double, std::array&lt;bool, (unsigned long)3&gt;)&gt;::call (libtorch_cpu.so) (173 samples, 2.68%)</title><rect x="81.6254%" y="388" width="2.6780%" height="15" fill="rgb(238,102,14)" fg:x="5273" fg:w="173"/><text x="81.8754%" y="398.50">c1..</text></g><g><title>at::native::batch_norm_backward_cpu (libtorch_cpu.so) (173 samples, 2.68%)</title><rect x="81.6254%" y="404" width="2.6780%" height="15" fill="rgb(243,160,52)" fg:x="5273" fg:w="173"/><text x="81.8754%" y="414.50">at..</text></g><g><title>at::native::batch_norm_backward_cpu_template&lt;float, float&gt; (libtorch_cpu.so) (173 samples, 2.68%)</title><rect x="81.6254%" y="420" width="2.6780%" height="15" fill="rgb(216,114,19)" fg:x="5273" fg:w="173"/><text x="81.8754%" y="430.50">at..</text></g><g><title>0x77d25141ca9d (libgomp-c9fef706.so.1) (40 samples, 0.62%)</title><rect x="84.4427%" y="468" width="0.6192%" height="15" fill="rgb(244,166,37)" fg:x="5455" fg:w="40"/><text x="84.6927%" y="478.50"></text></g><g><title>0x77d25141e02a (libgomp-c9fef706.so.1) (40 samples, 0.62%)</title><rect x="84.4427%" y="484" width="0.6192%" height="15" fill="rgb(246,29,44)" fg:x="5455" fg:w="40"/><text x="84.6927%" y="494.50"></text></g><g><title>0x77d25141c19a (libgomp-c9fef706.so.1) (30 samples, 0.46%)</title><rect x="85.0929%" y="484" width="0.4644%" height="15" fill="rgb(215,56,53)" fg:x="5497" fg:w="30"/><text x="85.3429%" y="494.50"></text></g><g><title>0x77d25141de62 (libgomp-c9fef706.so.1) (30 samples, 0.46%)</title><rect x="85.0929%" y="500" width="0.4644%" height="15" fill="rgb(217,60,2)" fg:x="5497" fg:w="30"/><text x="85.3429%" y="510.50"></text></g><g><title>torch::autograd::Node::operator() (libtorch_cpu.so) (2,850 samples, 44.12%)</title><rect x="43.1269%" y="276" width="44.1176%" height="15" fill="rgb(207,26,24)" fg:x="2786" fg:w="2850"/><text x="43.3769%" y="286.50">torch::autograd::Node::operator() (libtorch_cpu.so)</text></g><g><title>torch::autograd::generated::ReluBackward0::apply (libtorch_cpu.so) (185 samples, 2.86%)</title><rect x="84.3808%" y="292" width="2.8638%" height="15" fill="rgb(252,210,15)" fg:x="5451" fg:w="185"/><text x="84.6308%" y="302.50">to..</text></g><g><title>torch::autograd::generated::ReluBackward0_apply_functional (libtorch_cpu.so) (184 samples, 2.85%)</title><rect x="84.3963%" y="308" width="2.8483%" height="15" fill="rgb(253,209,26)" fg:x="5452" fg:w="184"/><text x="84.6463%" y="318.50">to..</text></g><g><title>at::_ops::threshold_backward::call (libtorch_cpu.so) (184 samples, 2.85%)</title><rect x="84.3963%" y="324" width="2.8483%" height="15" fill="rgb(238,170,14)" fg:x="5452" fg:w="184"/><text x="84.6463%" y="334.50">at..</text></g><g><title>c10::impl::wrap_kernel_functor_unboxed_&lt;c10::impl::detail::WrapFunctionIntoFunctor_&lt;c10::CompileTimeFunctionPointer&lt;at::Tensor(c10::DispatchKeySet, at::Tensor const&amp;, at::Tensor const&amp;, c10::Scalar const&amp;), &amp;torch::autograd::VariableType::(anonymous namespace)::threshold_backward(c10::DispatchKeySet, at::Tensor const&amp;, at::Tensor const&amp;, c10::Scalar const&amp;)&gt;, at::Tensor, c10::guts::typelist::typelist&lt;c10::DispatchKeySet, at::Tensor const&amp;, at::Tensor const&amp;, c10::Scalar const&amp;&gt; &gt;, at::Tensor(c10::DispatchKeySet, at::Tensor const&amp;, at::Tensor const&amp;, c10::Scalar const&amp;)&gt;::call (libtorch_cpu.so) (184 samples, 2.85%)</title><rect x="84.3963%" y="340" width="2.8483%" height="15" fill="rgb(216,178,15)" fg:x="5452" fg:w="184"/><text x="84.6463%" y="350.50">c1..</text></g><g><title>torch::autograd::VariableType::(anonymous namespace)::threshold_backward (libtorch_cpu.so) (184 samples, 2.85%)</title><rect x="84.3963%" y="356" width="2.8483%" height="15" fill="rgb(250,197,2)" fg:x="5452" fg:w="184"/><text x="84.6463%" y="366.50">to..</text></g><g><title>at::_ops::threshold_backward::redispatch (libtorch_cpu.so) (184 samples, 2.85%)</title><rect x="84.3963%" y="372" width="2.8483%" height="15" fill="rgb(212,70,42)" fg:x="5452" fg:w="184"/><text x="84.6463%" y="382.50">at..</text></g><g><title>c10::impl::wrap_kernel_functor_unboxed_&lt;c10::impl::detail::WrapFunctionIntoFunctor_&lt;c10::CompileTimeFunctionPointer&lt;at::Tensor(at::Tensor const&amp;, at::Tensor const&amp;, c10::Scalar const&amp;), &amp;at::(anonymous namespace)::wrapper_CPU_threshold_backward(at::Tensor const&amp;, at::Tensor const&amp;, c10::Scalar const&amp;)&gt;, at::Tensor, c10::guts::typelist::typelist&lt;at::Tensor const&amp;, at::Tensor const&amp;, c10::Scalar const&amp;&gt; &gt;, at::Tensor(at::Tensor const&amp;, at::Tensor const&amp;, c10::Scalar const&amp;)&gt;::call (libtorch_cpu.so) (184 samples, 2.85%)</title><rect x="84.3963%" y="388" width="2.8483%" height="15" fill="rgb(227,213,9)" fg:x="5452" fg:w="184"/><text x="84.6463%" y="398.50">c1..</text></g><g><title>at::(anonymous namespace)::wrapper_CPU_threshold_backward (libtorch_cpu.so) (184 samples, 2.85%)</title><rect x="84.3963%" y="404" width="2.8483%" height="15" fill="rgb(245,99,25)" fg:x="5452" fg:w="184"/><text x="84.6463%" y="414.50">at..</text></g><g><title>at::native::structured_threshold_backward_out::impl (libtorch_cpu.so) (181 samples, 2.80%)</title><rect x="84.4427%" y="420" width="2.8019%" height="15" fill="rgb(250,82,29)" fg:x="5455" fg:w="181"/><text x="84.6927%" y="430.50">at..</text></g><g><title>at::native::(anonymous namespace)::threshold_kernel (libtorch_cpu.so) (181 samples, 2.80%)</title><rect x="84.4427%" y="436" width="2.8019%" height="15" fill="rgb(241,226,54)" fg:x="5455" fg:w="181"/><text x="84.6927%" y="446.50">at..</text></g><g><title>at::TensorIteratorBase::for_each (libtorch_cpu.so) (181 samples, 2.80%)</title><rect x="84.4427%" y="452" width="2.8019%" height="15" fill="rgb(221,99,41)" fg:x="5455" fg:w="181"/><text x="84.6927%" y="462.50">at..</text></g><g><title>GOMP_parallel (libgomp-c9fef706.so.1) (141 samples, 2.18%)</title><rect x="85.0619%" y="468" width="2.1827%" height="15" fill="rgb(213,90,21)" fg:x="5495" fg:w="141"/><text x="85.3119%" y="478.50">G..</text></g><g><title>at::internal::invoke_parallel&lt;at::parallel_for&lt;at::TensorIteratorBase::for_each(c10::function_ref&lt;void (char**, long const*, long, long)&gt;, long)::{lambda(long, long)#1}&gt;(long, long, long, at::TensorIteratorBase::for_each(c10::function_ref&lt;void (char**, long const*, long, long)&gt;, long)::{lambda(long, long)#1} const&amp;)::{lambda(long, long)#1}&gt; (libtorch_cpu.so) (109 samples, 1.69%)</title><rect x="85.5573%" y="484" width="1.6873%" height="15" fill="rgb(205,208,24)" fg:x="5527" fg:w="109"/><text x="85.8073%" y="494.50"></text></g><g><title>at::TensorIteratorBase::serial_for_each (libtorch_cpu.so) (109 samples, 1.69%)</title><rect x="85.5573%" y="500" width="1.6873%" height="15" fill="rgb(246,31,12)" fg:x="5527" fg:w="109"/><text x="85.8073%" y="510.50"></text></g><g><title>c10::function_ref&lt;void (char**, long const*, long, long)&gt;::callback_fn&lt;at::native::AVX2::VectorizedLoop2d&lt;at::native::(anonymous namespace)::threshold_kernel(at::TensorIteratorBase&amp;, c10::Scalar const&amp;, c10::Scalar const&amp;)::{lambda()#2}::operator()() const::{lambda()#7}::operator()() const::{lambda(float, float)#1}, at::native::(anonymous namespace)::threshold_kernel(at::TensorIteratorBase&amp;, c10::Scalar const&amp;, c10::Scalar const&amp;)::{lambda()#2}::operator()() const::{lambda()#7}::operator()() const::{lambda(at::vec::AVX2::Vectorized&lt;float&gt;, at::vec::AVX2::Vectorized&lt;float&gt;)#2}&gt; &gt; (libtorch_cpu.so) (109 samples, 1.69%)</title><rect x="85.5573%" y="516" width="1.6873%" height="15" fill="rgb(213,154,6)" fg:x="5527" fg:w="109"/><text x="85.8073%" y="526.50"></text></g><g><title>torch::autograd::generated::NativeBatchNormBackward0::release_variables (libtorch_cpu.so) (10 samples, 0.15%)</title><rect x="87.3065%" y="276" width="0.1548%" height="15" fill="rgb(222,163,29)" fg:x="5640" fg:w="10"/><text x="87.5565%" y="286.50"></text></g><g><title>torch::autograd::SavedVariable::reset_data (libtorch_cpu.so) (10 samples, 0.15%)</title><rect x="87.3065%" y="292" width="0.1548%" height="15" fill="rgb(227,201,8)" fg:x="5640" fg:w="10"/><text x="87.5565%" y="302.50"></text></g><g><title>c10::TensorImpl::~TensorImpl (libc10.so) (9 samples, 0.14%)</title><rect x="87.3220%" y="308" width="0.1393%" height="15" fill="rgb(233,9,32)" fg:x="5641" fg:w="9"/><text x="87.5720%" y="318.50"></text></g><g><title>run_model (pytorch-sample.py:19) (2,994 samples, 46.35%)</title><rect x="41.1610%" y="100" width="46.3467%" height="15" fill="rgb(217,54,24)" fg:x="2659" fg:w="2994"/><text x="41.4110%" y="110.50">run_model (pytorch-sample.py:19)</text></g><g><title>backward (torch/_tensor.py:648) (2,994 samples, 46.35%)</title><rect x="41.1610%" y="116" width="46.3467%" height="15" fill="rgb(235,192,0)" fg:x="2659" fg:w="2994"/><text x="41.4110%" y="126.50">backward (torch/_tensor.py:648)</text></g><g><title>backward (torch/autograd/__init__.py:353) (2,994 samples, 46.35%)</title><rect x="41.1610%" y="132" width="46.3467%" height="15" fill="rgb(235,45,9)" fg:x="2659" fg:w="2994"/><text x="41.4110%" y="142.50">backward (torch/autograd/__init__.py:353)</text></g><g><title>_engine_run_backward (torch/autograd/graph.py:824) (2,994 samples, 46.35%)</title><rect x="41.1610%" y="148" width="46.3467%" height="15" fill="rgb(246,42,40)" fg:x="2659" fg:w="2994"/><text x="41.4110%" y="158.50">_engine_run_backward (torch/autograd/graph.py:824)</text></g><g><title>THPEngine_run_backward (libtorch_python.so) (2,994 samples, 46.35%)</title><rect x="41.1610%" y="164" width="46.3467%" height="15" fill="rgb(248,111,24)" fg:x="2659" fg:w="2994"/><text x="41.4110%" y="174.50">THPEngine_run_backward (libtorch_python.so)</text></g><g><title>torch::autograd::python::PythonEngine::execute (libtorch_python.so) (2,994 samples, 46.35%)</title><rect x="41.1610%" y="180" width="46.3467%" height="15" fill="rgb(249,65,22)" fg:x="2659" fg:w="2994"/><text x="41.4110%" y="190.50">torch::autograd::python::PythonEngine::execute (libtorch_python.so)</text></g><g><title>torch::autograd::Engine::execute (libtorch_cpu.so) (2,994 samples, 46.35%)</title><rect x="41.1610%" y="196" width="46.3467%" height="15" fill="rgb(238,111,51)" fg:x="2659" fg:w="2994"/><text x="41.4110%" y="206.50">torch::autograd::Engine::execute (libtorch_cpu.so)</text></g><g><title>torch::autograd::python::PythonEngine::execute_with_graph_task (libtorch_python.so) (2,992 samples, 46.32%)</title><rect x="41.1920%" y="212" width="46.3158%" height="15" fill="rgb(250,118,22)" fg:x="2661" fg:w="2992"/><text x="41.4420%" y="222.50">torch::autograd::python::PythonEngine::execute_with_graph_task (libtorch_pyt..</text></g><g><title>torch::autograd::Engine::execute_with_graph_task (libtorch_cpu.so) (2,992 samples, 46.32%)</title><rect x="41.1920%" y="228" width="46.3158%" height="15" fill="rgb(234,84,26)" fg:x="2661" fg:w="2992"/><text x="41.4420%" y="238.50">torch::autograd::Engine::execute_with_graph_task (libtorch_cpu.so)</text></g><g><title>torch::autograd::Engine::thread_main (libtorch_cpu.so) (2,973 samples, 46.02%)</title><rect x="41.4861%" y="244" width="46.0217%" height="15" fill="rgb(243,172,12)" fg:x="2680" fg:w="2973"/><text x="41.7361%" y="254.50">torch::autograd::Engine::thread_main (libtorch_cpu.so)</text></g><g><title>torch::autograd::Engine::evaluate_function (libtorch_cpu.so) (2,970 samples, 45.98%)</title><rect x="41.5325%" y="260" width="45.9752%" height="15" fill="rgb(236,150,49)" fg:x="2683" fg:w="2970"/><text x="41.7825%" y="270.50">torch::autograd::Engine::evaluate_function (libtorch_cpu.so)</text></g><g><title>0x77d25141e02a (libgomp-c9fef706.so.1) (18 samples, 0.28%)</title><rect x="87.6471%" y="340" width="0.2786%" height="15" fill="rgb(225,197,26)" fg:x="5662" fg:w="18"/><text x="87.8971%" y="350.50"></text></g><g><title>0x77d25141ca9d (libgomp-c9fef706.so.1) (20 samples, 0.31%)</title><rect x="87.6316%" y="324" width="0.3096%" height="15" fill="rgb(214,17,42)" fg:x="5661" fg:w="20"/><text x="87.8816%" y="334.50"></text></g><g><title>0x77d25141c19a (libgomp-c9fef706.so.1) (11 samples, 0.17%)</title><rect x="87.9412%" y="340" width="0.1703%" height="15" fill="rgb(224,165,40)" fg:x="5681" fg:w="11"/><text x="88.1912%" y="350.50"></text></g><g><title>0x77d25141de62 (libgomp-c9fef706.so.1) (11 samples, 0.17%)</title><rect x="87.9412%" y="356" width="0.1703%" height="15" fill="rgb(246,100,4)" fg:x="5681" fg:w="11"/><text x="88.1912%" y="366.50"></text></g><g><title>torch::autograd::THPVariable_add_ (libtorch_python.so) (33 samples, 0.51%)</title><rect x="87.6316%" y="196" width="0.5108%" height="15" fill="rgb(222,103,0)" fg:x="5661" fg:w="33"/><text x="87.8816%" y="206.50"></text></g><g><title>at::_ops::add__Tensor::call (libtorch_cpu.so) (33 samples, 0.51%)</title><rect x="87.6316%" y="212" width="0.5108%" height="15" fill="rgb(227,189,26)" fg:x="5661" fg:w="33"/><text x="87.8816%" y="222.50"></text></g><g><title>torch::autograd::VariableType::(anonymous namespace)::add__Tensor (libtorch_cpu.so) (33 samples, 0.51%)</title><rect x="87.6316%" y="228" width="0.5108%" height="15" fill="rgb(214,202,17)" fg:x="5661" fg:w="33"/><text x="87.8816%" y="238.50"></text></g><g><title>c10::impl::wrap_kernel_functor_unboxed_&lt;c10::impl::detail::WrapFunctionIntoFunctor_&lt;c10::CompileTimeFunctionPointer&lt;at::Tensor&amp; (c10::DispatchKeySet, at::Tensor&amp;, at::Tensor const&amp;, c10::Scalar const&amp;), &amp;torch::ADInplaceOrView::(anonymous namespace)::add__Tensor(c10::DispatchKeySet, at::Tensor&amp;, at::Tensor const&amp;, c10::Scalar const&amp;)&gt;, at::Tensor&amp;, c10::guts::typelist::typelist&lt;c10::DispatchKeySet, at::Tensor&amp;, at::Tensor const&amp;, c10::Scalar const&amp;&gt; &gt;, at::Tensor&amp; (c10::DispatchKeySet, at::Tensor&amp;, at::Tensor const&amp;, c10::Scalar const&amp;)&gt;::call (libtorch_cpu.so) (33 samples, 0.51%)</title><rect x="87.6316%" y="244" width="0.5108%" height="15" fill="rgb(229,111,3)" fg:x="5661" fg:w="33"/><text x="87.8816%" y="254.50"></text></g><g><title>at::(anonymous namespace)::wrapper_CPU_add__Tensor (libtorch_cpu.so) (33 samples, 0.51%)</title><rect x="87.6316%" y="260" width="0.5108%" height="15" fill="rgb(229,172,15)" fg:x="5661" fg:w="33"/><text x="87.8816%" y="270.50"></text></g><g><title>at::native::(anonymous namespace)::add_kernel (libtorch_cpu.so) (33 samples, 0.51%)</title><rect x="87.6316%" y="276" width="0.5108%" height="15" fill="rgb(230,224,35)" fg:x="5661" fg:w="33"/><text x="87.8816%" y="286.50"></text></g><g><title>at::native::(anonymous namespace)::add_kernel(at::TensorIteratorBase&amp;, c10::Scalar const&amp;)::{lambda()#1}::operator() const (libtorch_cpu.so) (33 samples, 0.51%)</title><rect x="87.6316%" y="292" width="0.5108%" height="15" fill="rgb(251,141,6)" fg:x="5661" fg:w="33"/><text x="87.8816%" y="302.50"></text></g><g><title>at::TensorIteratorBase::for_each (libtorch_cpu.so) (33 samples, 0.51%)</title><rect x="87.6316%" y="308" width="0.5108%" height="15" fill="rgb(225,208,6)" fg:x="5661" fg:w="33"/><text x="87.8816%" y="318.50"></text></g><g><title>GOMP_parallel (libgomp-c9fef706.so.1) (13 samples, 0.20%)</title><rect x="87.9412%" y="324" width="0.2012%" height="15" fill="rgb(246,181,16)" fg:x="5681" fg:w="13"/><text x="88.1912%" y="334.50"></text></g><g><title>0x77d25141ca9d (libgomp-c9fef706.so.1) (16 samples, 0.25%)</title><rect x="88.1734%" y="308" width="0.2477%" height="15" fill="rgb(227,129,36)" fg:x="5696" fg:w="16"/><text x="88.4234%" y="318.50"></text></g><g><title>0x77d25141e02a (libgomp-c9fef706.so.1) (16 samples, 0.25%)</title><rect x="88.1734%" y="324" width="0.2477%" height="15" fill="rgb(248,117,24)" fg:x="5696" fg:w="16"/><text x="88.4234%" y="334.50"></text></g><g><title>at::_ops::mul__Tensor::call (libtorch_cpu.so) (24 samples, 0.37%)</title><rect x="88.1424%" y="212" width="0.3715%" height="15" fill="rgb(214,185,35)" fg:x="5694" fg:w="24"/><text x="88.3924%" y="222.50"></text></g><g><title>torch::autograd::VariableType::(anonymous namespace)::mul__Tensor (libtorch_cpu.so) (24 samples, 0.37%)</title><rect x="88.1424%" y="228" width="0.3715%" height="15" fill="rgb(236,150,34)" fg:x="5694" fg:w="24"/><text x="88.3924%" y="238.50"></text></g><g><title>c10::impl::wrap_kernel_functor_unboxed_&lt;c10::impl::detail::WrapFunctionIntoFunctor_&lt;c10::CompileTimeFunctionPointer&lt;at::Tensor&amp; (c10::DispatchKeySet, at::Tensor&amp;, at::Tensor const&amp;), &amp;torch::ADInplaceOrView::(anonymous namespace)::mul__Tensor(c10::DispatchKeySet, at::Tensor&amp;, at::Tensor const&amp;)&gt;, at::Tensor&amp;, c10::guts::typelist::typelist&lt;c10::DispatchKeySet, at::Tensor&amp;, at::Tensor const&amp;&gt; &gt;, at::Tensor&amp; (c10::DispatchKeySet, at::Tensor&amp;, at::Tensor const&amp;)&gt;::call (libtorch_cpu.so) (24 samples, 0.37%)</title><rect x="88.1424%" y="244" width="0.3715%" height="15" fill="rgb(243,228,27)" fg:x="5694" fg:w="24"/><text x="88.3924%" y="254.50"></text></g><g><title>at::(anonymous namespace)::wrapper_CPU_mul__Tensor (libtorch_cpu.so) (24 samples, 0.37%)</title><rect x="88.1424%" y="260" width="0.3715%" height="15" fill="rgb(245,77,44)" fg:x="5694" fg:w="24"/><text x="88.3924%" y="270.50"></text></g><g><title>at::native::(anonymous namespace)::mul_kernel (libtorch_cpu.so) (22 samples, 0.34%)</title><rect x="88.1734%" y="276" width="0.3406%" height="15" fill="rgb(235,214,42)" fg:x="5696" fg:w="22"/><text x="88.4234%" y="286.50"></text></g><g><title>at::TensorIteratorBase::for_each (libtorch_cpu.so) (22 samples, 0.34%)</title><rect x="88.1734%" y="292" width="0.3406%" height="15" fill="rgb(221,74,3)" fg:x="5696" fg:w="22"/><text x="88.4234%" y="302.50"></text></g><g><title>_single_tensor_sgd (torch/optim/sgd.py:354) (58 samples, 0.90%)</title><rect x="87.6316%" y="180" width="0.8978%" height="15" fill="rgb(206,121,29)" fg:x="5661" fg:w="58"/><text x="87.8816%" y="190.50"></text></g><g><title>torch::autograd::THPVariable_mul_ (libtorch_python.so) (25 samples, 0.39%)</title><rect x="88.1424%" y="196" width="0.3870%" height="15" fill="rgb(249,131,53)" fg:x="5694" fg:w="25"/><text x="88.3924%" y="206.50"></text></g><g><title>0x77d25141ca9d (libgomp-c9fef706.so.1) (20 samples, 0.31%)</title><rect x="88.5604%" y="324" width="0.3096%" height="15" fill="rgb(236,170,29)" fg:x="5721" fg:w="20"/><text x="88.8104%" y="334.50"></text></g><g><title>0x77d25141e02a (libgomp-c9fef706.so.1) (20 samples, 0.31%)</title><rect x="88.5604%" y="340" width="0.3096%" height="15" fill="rgb(247,96,15)" fg:x="5721" fg:w="20"/><text x="88.8104%" y="350.50"></text></g><g><title>0x77d25141c19a (libgomp-c9fef706.so.1) (8 samples, 0.12%)</title><rect x="88.8700%" y="340" width="0.1238%" height="15" fill="rgb(211,210,7)" fg:x="5741" fg:w="8"/><text x="89.1200%" y="350.50"></text></g><g><title>0x77d25141de62 (libgomp-c9fef706.so.1) (8 samples, 0.12%)</title><rect x="88.8700%" y="356" width="0.1238%" height="15" fill="rgb(240,88,50)" fg:x="5741" fg:w="8"/><text x="89.1200%" y="366.50"></text></g><g><title>&lt;module&gt; (pytorch-sample.py:23) (5,139 samples, 79.55%)</title><rect x="9.5046%" y="84" width="79.5511%" height="15" fill="rgb(209,229,26)" fg:x="614" fg:w="5139"/><text x="9.7546%" y="94.50">&lt;module&gt; (pytorch-sample.py:23)</text></g><g><title>run_model (pytorch-sample.py:20) (100 samples, 1.55%)</title><rect x="87.5077%" y="100" width="1.5480%" height="15" fill="rgb(210,68,23)" fg:x="5653" fg:w="100"/><text x="87.7577%" y="110.50"></text></g><g><title>wrapper (torch/optim/optimizer.py:485) (100 samples, 1.55%)</title><rect x="87.5077%" y="116" width="1.5480%" height="15" fill="rgb(229,180,13)" fg:x="5653" fg:w="100"/><text x="87.7577%" y="126.50"></text></g><g><title>_use_grad (torch/optim/optimizer.py:79) (100 samples, 1.55%)</title><rect x="87.5077%" y="132" width="1.5480%" height="15" fill="rgb(236,53,44)" fg:x="5653" fg:w="100"/><text x="87.7577%" y="142.50"></text></g><g><title>step (torch/optim/sgd.py:125) (95 samples, 1.47%)</title><rect x="87.5851%" y="148" width="1.4706%" height="15" fill="rgb(244,214,29)" fg:x="5658" fg:w="95"/><text x="87.8351%" y="158.50"></text></g><g><title>sgd (torch/optim/sgd.py:300) (95 samples, 1.47%)</title><rect x="87.5851%" y="164" width="1.4706%" height="15" fill="rgb(220,75,29)" fg:x="5658" fg:w="95"/><text x="87.8351%" y="174.50"></text></g><g><title>_single_tensor_sgd (torch/optim/sgd.py:368) (34 samples, 0.53%)</title><rect x="88.5294%" y="180" width="0.5263%" height="15" fill="rgb(214,183,37)" fg:x="5719" fg:w="34"/><text x="88.7794%" y="190.50"></text></g><g><title>torch::autograd::THPVariable_add_ (libtorch_python.so) (34 samples, 0.53%)</title><rect x="88.5294%" y="196" width="0.5263%" height="15" fill="rgb(239,117,29)" fg:x="5719" fg:w="34"/><text x="88.7794%" y="206.50"></text></g><g><title>at::_ops::add__Tensor::call (libtorch_cpu.so) (34 samples, 0.53%)</title><rect x="88.5294%" y="212" width="0.5263%" height="15" fill="rgb(237,171,35)" fg:x="5719" fg:w="34"/><text x="88.7794%" y="222.50"></text></g><g><title>torch::autograd::VariableType::(anonymous namespace)::add__Tensor (libtorch_cpu.so) (34 samples, 0.53%)</title><rect x="88.5294%" y="228" width="0.5263%" height="15" fill="rgb(229,178,53)" fg:x="5719" fg:w="34"/><text x="88.7794%" y="238.50"></text></g><g><title>c10::impl::wrap_kernel_functor_unboxed_&lt;c10::impl::detail::WrapFunctionIntoFunctor_&lt;c10::CompileTimeFunctionPointer&lt;at::Tensor&amp; (c10::DispatchKeySet, at::Tensor&amp;, at::Tensor const&amp;, c10::Scalar const&amp;), &amp;torch::ADInplaceOrView::(anonymous namespace)::add__Tensor(c10::DispatchKeySet, at::Tensor&amp;, at::Tensor const&amp;, c10::Scalar const&amp;)&gt;, at::Tensor&amp;, c10::guts::typelist::typelist&lt;c10::DispatchKeySet, at::Tensor&amp;, at::Tensor const&amp;, c10::Scalar const&amp;&gt; &gt;, at::Tensor&amp; (c10::DispatchKeySet, at::Tensor&amp;, at::Tensor const&amp;, c10::Scalar const&amp;)&gt;::call (libtorch_cpu.so) (34 samples, 0.53%)</title><rect x="88.5294%" y="244" width="0.5263%" height="15" fill="rgb(210,102,19)" fg:x="5719" fg:w="34"/><text x="88.7794%" y="254.50"></text></g><g><title>at::(anonymous namespace)::wrapper_CPU_add__Tensor (libtorch_cpu.so) (34 samples, 0.53%)</title><rect x="88.5294%" y="260" width="0.5263%" height="15" fill="rgb(235,127,22)" fg:x="5719" fg:w="34"/><text x="88.7794%" y="270.50"></text></g><g><title>at::native::(anonymous namespace)::add_kernel (libtorch_cpu.so) (32 samples, 0.50%)</title><rect x="88.5604%" y="276" width="0.4954%" height="15" fill="rgb(244,31,31)" fg:x="5721" fg:w="32"/><text x="88.8104%" y="286.50"></text></g><g><title>at::native::(anonymous namespace)::add_kernel(at::TensorIteratorBase&amp;, c10::Scalar const&amp;)::{lambda()#1}::operator() const (libtorch_cpu.so) (32 samples, 0.50%)</title><rect x="88.5604%" y="292" width="0.4954%" height="15" fill="rgb(231,43,21)" fg:x="5721" fg:w="32"/><text x="88.8104%" y="302.50"></text></g><g><title>at::TensorIteratorBase::for_each (libtorch_cpu.so) (32 samples, 0.50%)</title><rect x="88.5604%" y="308" width="0.4954%" height="15" fill="rgb(217,131,35)" fg:x="5721" fg:w="32"/><text x="88.8104%" y="318.50"></text></g><g><title>GOMP_parallel (libgomp-c9fef706.so.1) (12 samples, 0.19%)</title><rect x="88.8700%" y="324" width="0.1858%" height="15" fill="rgb(221,149,4)" fg:x="5741" fg:w="12"/><text x="89.1200%" y="334.50"></text></g><g><title>&lt;module&gt; (torch/onnx/_internal/diagnostics/infra/sarif/__init__.py:13) (10 samples, 0.15%)</title><rect x="89.4427%" y="1540" width="0.1548%" height="15" fill="rgb(232,170,28)" fg:x="5778" fg:w="10"/><text x="89.6927%" y="1550.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:1360) (10 samples, 0.15%)</title><rect x="89.4427%" y="1556" width="0.1548%" height="15" fill="rgb(238,56,10)" fg:x="5778" fg:w="10"/><text x="89.6927%" y="1566.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:1331) (10 samples, 0.15%)</title><rect x="89.4427%" y="1572" width="0.1548%" height="15" fill="rgb(235,196,14)" fg:x="5778" fg:w="10"/><text x="89.6927%" y="1582.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:935) (10 samples, 0.15%)</title><rect x="89.4427%" y="1588" width="0.1548%" height="15" fill="rgb(216,45,48)" fg:x="5778" fg:w="10"/><text x="89.6927%" y="1598.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:995) (10 samples, 0.15%)</title><rect x="89.4427%" y="1604" width="0.1548%" height="15" fill="rgb(238,213,17)" fg:x="5778" fg:w="10"/><text x="89.6927%" y="1614.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:488) (10 samples, 0.15%)</title><rect x="89.4427%" y="1620" width="0.1548%" height="15" fill="rgb(212,13,2)" fg:x="5778" fg:w="10"/><text x="89.6927%" y="1630.50"></text></g><g><title>&lt;module&gt; (torch/onnx/_internal/diagnostics/infra/sarif/__init__.py:14) (21 samples, 0.33%)</title><rect x="89.5975%" y="1540" width="0.3251%" height="15" fill="rgb(240,114,20)" fg:x="5788" fg:w="21"/><text x="89.8475%" y="1550.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:1360) (21 samples, 0.33%)</title><rect x="89.5975%" y="1556" width="0.3251%" height="15" fill="rgb(228,41,40)" fg:x="5788" fg:w="21"/><text x="89.8475%" y="1566.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:1331) (21 samples, 0.33%)</title><rect x="89.5975%" y="1572" width="0.3251%" height="15" fill="rgb(244,132,35)" fg:x="5788" fg:w="21"/><text x="89.8475%" y="1582.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:935) (21 samples, 0.33%)</title><rect x="89.5975%" y="1588" width="0.3251%" height="15" fill="rgb(253,189,4)" fg:x="5788" fg:w="21"/><text x="89.8475%" y="1598.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:995) (21 samples, 0.33%)</title><rect x="89.5975%" y="1604" width="0.3251%" height="15" fill="rgb(224,37,19)" fg:x="5788" fg:w="21"/><text x="89.8475%" y="1614.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:488) (21 samples, 0.33%)</title><rect x="89.5975%" y="1620" width="0.3251%" height="15" fill="rgb(235,223,18)" fg:x="5788" fg:w="21"/><text x="89.8475%" y="1630.50"></text></g><g><title>&lt;module&gt; (torch/onnx/_internal/diagnostics/infra/sarif/_code_flow.py:9) (21 samples, 0.33%)</title><rect x="89.5975%" y="1636" width="0.3251%" height="15" fill="rgb(235,163,25)" fg:x="5788" fg:w="21"/><text x="89.8475%" y="1646.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;:1415) (21 samples, 0.33%)</title><rect x="89.5975%" y="1652" width="0.3251%" height="15" fill="rgb(217,145,28)" fg:x="5788" fg:w="21"/><text x="89.8475%" y="1662.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:488) (21 samples, 0.33%)</title><rect x="89.5975%" y="1668" width="0.3251%" height="15" fill="rgb(223,223,32)" fg:x="5788" fg:w="21"/><text x="89.8475%" y="1678.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:1360) (21 samples, 0.33%)</title><rect x="89.5975%" y="1684" width="0.3251%" height="15" fill="rgb(227,189,39)" fg:x="5788" fg:w="21"/><text x="89.8475%" y="1694.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:1331) (21 samples, 0.33%)</title><rect x="89.5975%" y="1700" width="0.3251%" height="15" fill="rgb(248,10,22)" fg:x="5788" fg:w="21"/><text x="89.8475%" y="1710.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:935) (21 samples, 0.33%)</title><rect x="89.5975%" y="1716" width="0.3251%" height="15" fill="rgb(248,46,39)" fg:x="5788" fg:w="21"/><text x="89.8475%" y="1726.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:995) (21 samples, 0.33%)</title><rect x="89.5975%" y="1732" width="0.3251%" height="15" fill="rgb(248,113,48)" fg:x="5788" fg:w="21"/><text x="89.8475%" y="1742.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:488) (21 samples, 0.33%)</title><rect x="89.5975%" y="1748" width="0.3251%" height="15" fill="rgb(245,16,25)" fg:x="5788" fg:w="21"/><text x="89.8475%" y="1758.50"></text></g><g><title>&lt;module&gt; (torch/onnx/_internal/diagnostics/infra/sarif/_thread_flow.py:9) (21 samples, 0.33%)</title><rect x="89.5975%" y="1764" width="0.3251%" height="15" fill="rgb(249,152,16)" fg:x="5788" fg:w="21"/><text x="89.8475%" y="1774.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;:1415) (21 samples, 0.33%)</title><rect x="89.5975%" y="1780" width="0.3251%" height="15" fill="rgb(250,16,1)" fg:x="5788" fg:w="21"/><text x="89.8475%" y="1790.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:488) (21 samples, 0.33%)</title><rect x="89.5975%" y="1796" width="0.3251%" height="15" fill="rgb(249,138,3)" fg:x="5788" fg:w="21"/><text x="89.8475%" y="1806.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:1360) (21 samples, 0.33%)</title><rect x="89.5975%" y="1812" width="0.3251%" height="15" fill="rgb(227,71,41)" fg:x="5788" fg:w="21"/><text x="89.8475%" y="1822.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:1331) (21 samples, 0.33%)</title><rect x="89.5975%" y="1828" width="0.3251%" height="15" fill="rgb(209,184,23)" fg:x="5788" fg:w="21"/><text x="89.8475%" y="1838.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:935) (21 samples, 0.33%)</title><rect x="89.5975%" y="1844" width="0.3251%" height="15" fill="rgb(223,215,31)" fg:x="5788" fg:w="21"/><text x="89.8475%" y="1854.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:995) (21 samples, 0.33%)</title><rect x="89.5975%" y="1860" width="0.3251%" height="15" fill="rgb(210,146,28)" fg:x="5788" fg:w="21"/><text x="89.8475%" y="1870.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:488) (21 samples, 0.33%)</title><rect x="89.5975%" y="1876" width="0.3251%" height="15" fill="rgb(209,183,41)" fg:x="5788" fg:w="21"/><text x="89.8475%" y="1886.50"></text></g><g><title>&lt;module&gt; (torch/onnx/_internal/diagnostics/infra/sarif/_thread_flow_location.py:9) (21 samples, 0.33%)</title><rect x="89.5975%" y="1892" width="0.3251%" height="15" fill="rgb(209,224,45)" fg:x="5788" fg:w="21"/><text x="89.8475%" y="1902.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;:1415) (21 samples, 0.33%)</title><rect x="89.5975%" y="1908" width="0.3251%" height="15" fill="rgb(224,209,51)" fg:x="5788" fg:w="21"/><text x="89.8475%" y="1918.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:488) (21 samples, 0.33%)</title><rect x="89.5975%" y="1924" width="0.3251%" height="15" fill="rgb(223,17,39)" fg:x="5788" fg:w="21"/><text x="89.8475%" y="1934.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:1360) (21 samples, 0.33%)</title><rect x="89.5975%" y="1940" width="0.3251%" height="15" fill="rgb(234,204,37)" fg:x="5788" fg:w="21"/><text x="89.8475%" y="1950.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:1331) (20 samples, 0.31%)</title><rect x="89.6130%" y="1956" width="0.3096%" height="15" fill="rgb(236,120,5)" fg:x="5789" fg:w="20"/><text x="89.8630%" y="1966.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:935) (20 samples, 0.31%)</title><rect x="89.6130%" y="1972" width="0.3096%" height="15" fill="rgb(248,97,27)" fg:x="5789" fg:w="20"/><text x="89.8630%" y="1982.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:995) (19 samples, 0.29%)</title><rect x="89.6285%" y="1988" width="0.2941%" height="15" fill="rgb(240,66,17)" fg:x="5790" fg:w="19"/><text x="89.8785%" y="1998.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:488) (19 samples, 0.29%)</title><rect x="89.6285%" y="2004" width="0.2941%" height="15" fill="rgb(210,79,3)" fg:x="5790" fg:w="19"/><text x="89.8785%" y="2014.50"></text></g><g><title>&lt;module&gt; (torch/onnx/_internal/diagnostics/infra/sarif/_reporting_descriptor_reference.py:9) (11 samples, 0.17%)</title><rect x="89.7523%" y="2020" width="0.1703%" height="15" fill="rgb(214,176,27)" fg:x="5798" fg:w="11"/><text x="90.0023%" y="2030.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;:1415) (11 samples, 0.17%)</title><rect x="89.7523%" y="2036" width="0.1703%" height="15" fill="rgb(235,185,3)" fg:x="5798" fg:w="11"/><text x="90.0023%" y="2046.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:488) (11 samples, 0.17%)</title><rect x="89.7523%" y="2052" width="0.1703%" height="15" fill="rgb(227,24,12)" fg:x="5798" fg:w="11"/><text x="90.0023%" y="2062.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:1360) (11 samples, 0.17%)</title><rect x="89.7523%" y="2068" width="0.1703%" height="15" fill="rgb(252,169,48)" fg:x="5798" fg:w="11"/><text x="90.0023%" y="2078.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:1331) (10 samples, 0.15%)</title><rect x="89.7678%" y="2084" width="0.1548%" height="15" fill="rgb(212,65,1)" fg:x="5799" fg:w="10"/><text x="90.0178%" y="2094.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:935) (10 samples, 0.15%)</title><rect x="89.7678%" y="2100" width="0.1548%" height="15" fill="rgb(242,39,24)" fg:x="5799" fg:w="10"/><text x="90.0178%" y="2110.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:995) (8 samples, 0.12%)</title><rect x="89.7988%" y="2116" width="0.1238%" height="15" fill="rgb(249,32,23)" fg:x="5801" fg:w="8"/><text x="90.0488%" y="2126.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:488) (8 samples, 0.12%)</title><rect x="89.7988%" y="2132" width="0.1238%" height="15" fill="rgb(251,195,23)" fg:x="5801" fg:w="8"/><text x="90.0488%" y="2142.50"></text></g><g><title>&lt;module&gt; (torch/onnx/_internal/diagnostics/infra/sarif/_tool_component_reference.py:12) (8 samples, 0.12%)</title><rect x="89.7988%" y="2148" width="0.1238%" height="15" fill="rgb(236,174,8)" fg:x="5801" fg:w="8"/><text x="90.0488%" y="2158.50"></text></g><g><title>dataclass (dataclasses.py:1268) (8 samples, 0.12%)</title><rect x="89.7988%" y="2164" width="0.1238%" height="15" fill="rgb(220,197,8)" fg:x="5801" fg:w="8"/><text x="90.0488%" y="2174.50"></text></g><g><title>wrap (dataclasses.py:1258) (8 samples, 0.12%)</title><rect x="89.7988%" y="2180" width="0.1238%" height="15" fill="rgb(240,108,37)" fg:x="5801" fg:w="8"/><text x="90.0488%" y="2190.50"></text></g><g><title>&lt;module&gt; (torch/onnx/__init__.py:68) (39 samples, 0.60%)</title><rect x="89.4272%" y="740" width="0.6037%" height="15" fill="rgb(232,176,24)" fg:x="5777" fg:w="39"/><text x="89.6772%" y="750.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:1360) (39 samples, 0.60%)</title><rect x="89.4272%" y="756" width="0.6037%" height="15" fill="rgb(243,35,29)" fg:x="5777" fg:w="39"/><text x="89.6772%" y="766.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:1331) (39 samples, 0.60%)</title><rect x="89.4272%" y="772" width="0.6037%" height="15" fill="rgb(210,37,18)" fg:x="5777" fg:w="39"/><text x="89.6772%" y="782.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:935) (39 samples, 0.60%)</title><rect x="89.4272%" y="788" width="0.6037%" height="15" fill="rgb(224,184,40)" fg:x="5777" fg:w="39"/><text x="89.6772%" y="798.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:995) (39 samples, 0.60%)</title><rect x="89.4272%" y="804" width="0.6037%" height="15" fill="rgb(236,39,29)" fg:x="5777" fg:w="39"/><text x="89.6772%" y="814.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:488) (39 samples, 0.60%)</title><rect x="89.4272%" y="820" width="0.6037%" height="15" fill="rgb(232,48,39)" fg:x="5777" fg:w="39"/><text x="89.6772%" y="830.50"></text></g><g><title>&lt;module&gt; (torch/onnx/utils.py:26) (39 samples, 0.60%)</title><rect x="89.4272%" y="836" width="0.6037%" height="15" fill="rgb(236,34,42)" fg:x="5777" fg:w="39"/><text x="89.6772%" y="846.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;:1415) (39 samples, 0.60%)</title><rect x="89.4272%" y="852" width="0.6037%" height="15" fill="rgb(243,106,37)" fg:x="5777" fg:w="39"/><text x="89.6772%" y="862.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:488) (39 samples, 0.60%)</title><rect x="89.4272%" y="868" width="0.6037%" height="15" fill="rgb(218,96,6)" fg:x="5777" fg:w="39"/><text x="89.6772%" y="878.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:1360) (39 samples, 0.60%)</title><rect x="89.4272%" y="884" width="0.6037%" height="15" fill="rgb(235,130,12)" fg:x="5777" fg:w="39"/><text x="89.6772%" y="894.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:1331) (39 samples, 0.60%)</title><rect x="89.4272%" y="900" width="0.6037%" height="15" fill="rgb(231,95,0)" fg:x="5777" fg:w="39"/><text x="89.6772%" y="910.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:935) (39 samples, 0.60%)</title><rect x="89.4272%" y="916" width="0.6037%" height="15" fill="rgb(228,12,23)" fg:x="5777" fg:w="39"/><text x="89.6772%" y="926.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:995) (38 samples, 0.59%)</title><rect x="89.4427%" y="932" width="0.5882%" height="15" fill="rgb(216,12,1)" fg:x="5778" fg:w="38"/><text x="89.6927%" y="942.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:488) (38 samples, 0.59%)</title><rect x="89.4427%" y="948" width="0.5882%" height="15" fill="rgb(219,59,3)" fg:x="5778" fg:w="38"/><text x="89.6927%" y="958.50"></text></g><g><title>&lt;module&gt; (torch/onnx/_internal/diagnostics/__init__.py:1) (38 samples, 0.59%)</title><rect x="89.4427%" y="964" width="0.5882%" height="15" fill="rgb(215,208,46)" fg:x="5778" fg:w="38"/><text x="89.6927%" y="974.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:1360) (38 samples, 0.59%)</title><rect x="89.4427%" y="980" width="0.5882%" height="15" fill="rgb(254,224,29)" fg:x="5778" fg:w="38"/><text x="89.6927%" y="990.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:1331) (38 samples, 0.59%)</title><rect x="89.4427%" y="996" width="0.5882%" height="15" fill="rgb(232,14,29)" fg:x="5778" fg:w="38"/><text x="89.6927%" y="1006.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:935) (38 samples, 0.59%)</title><rect x="89.4427%" y="1012" width="0.5882%" height="15" fill="rgb(208,45,52)" fg:x="5778" fg:w="38"/><text x="89.6927%" y="1022.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:995) (38 samples, 0.59%)</title><rect x="89.4427%" y="1028" width="0.5882%" height="15" fill="rgb(234,191,28)" fg:x="5778" fg:w="38"/><text x="89.6927%" y="1038.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:488) (38 samples, 0.59%)</title><rect x="89.4427%" y="1044" width="0.5882%" height="15" fill="rgb(244,67,43)" fg:x="5778" fg:w="38"/><text x="89.6927%" y="1054.50"></text></g><g><title>&lt;module&gt; (torch/onnx/_internal/diagnostics/_diagnostic.py:11) (38 samples, 0.59%)</title><rect x="89.4427%" y="1060" width="0.5882%" height="15" fill="rgb(236,189,24)" fg:x="5778" fg:w="38"/><text x="89.6927%" y="1070.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;:1415) (38 samples, 0.59%)</title><rect x="89.4427%" y="1076" width="0.5882%" height="15" fill="rgb(239,214,33)" fg:x="5778" fg:w="38"/><text x="89.6927%" y="1086.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:488) (38 samples, 0.59%)</title><rect x="89.4427%" y="1092" width="0.5882%" height="15" fill="rgb(226,176,41)" fg:x="5778" fg:w="38"/><text x="89.6927%" y="1102.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:1360) (38 samples, 0.59%)</title><rect x="89.4427%" y="1108" width="0.5882%" height="15" fill="rgb(248,47,8)" fg:x="5778" fg:w="38"/><text x="89.6927%" y="1118.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:1331) (38 samples, 0.59%)</title><rect x="89.4427%" y="1124" width="0.5882%" height="15" fill="rgb(218,81,44)" fg:x="5778" fg:w="38"/><text x="89.6927%" y="1134.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:935) (38 samples, 0.59%)</title><rect x="89.4427%" y="1140" width="0.5882%" height="15" fill="rgb(213,98,6)" fg:x="5778" fg:w="38"/><text x="89.6927%" y="1150.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:995) (38 samples, 0.59%)</title><rect x="89.4427%" y="1156" width="0.5882%" height="15" fill="rgb(222,85,22)" fg:x="5778" fg:w="38"/><text x="89.6927%" y="1166.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:488) (38 samples, 0.59%)</title><rect x="89.4427%" y="1172" width="0.5882%" height="15" fill="rgb(239,46,39)" fg:x="5778" fg:w="38"/><text x="89.6927%" y="1182.50"></text></g><g><title>&lt;module&gt; (torch/onnx/_internal/diagnostics/infra/__init__.py:1) (38 samples, 0.59%)</title><rect x="89.4427%" y="1188" width="0.5882%" height="15" fill="rgb(237,12,29)" fg:x="5778" fg:w="38"/><text x="89.6927%" y="1198.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:1360) (38 samples, 0.59%)</title><rect x="89.4427%" y="1204" width="0.5882%" height="15" fill="rgb(214,77,8)" fg:x="5778" fg:w="38"/><text x="89.6927%" y="1214.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:1331) (38 samples, 0.59%)</title><rect x="89.4427%" y="1220" width="0.5882%" height="15" fill="rgb(217,168,37)" fg:x="5778" fg:w="38"/><text x="89.6927%" y="1230.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:935) (38 samples, 0.59%)</title><rect x="89.4427%" y="1236" width="0.5882%" height="15" fill="rgb(221,217,23)" fg:x="5778" fg:w="38"/><text x="89.6927%" y="1246.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:995) (38 samples, 0.59%)</title><rect x="89.4427%" y="1252" width="0.5882%" height="15" fill="rgb(243,229,36)" fg:x="5778" fg:w="38"/><text x="89.6927%" y="1262.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:488) (38 samples, 0.59%)</title><rect x="89.4427%" y="1268" width="0.5882%" height="15" fill="rgb(251,163,40)" fg:x="5778" fg:w="38"/><text x="89.6927%" y="1278.50"></text></g><g><title>&lt;module&gt; (torch/onnx/_internal/diagnostics/infra/_infra.py:11) (38 samples, 0.59%)</title><rect x="89.4427%" y="1284" width="0.5882%" height="15" fill="rgb(237,222,12)" fg:x="5778" fg:w="38"/><text x="89.6927%" y="1294.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;:1415) (38 samples, 0.59%)</title><rect x="89.4427%" y="1300" width="0.5882%" height="15" fill="rgb(248,132,6)" fg:x="5778" fg:w="38"/><text x="89.6927%" y="1310.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:488) (38 samples, 0.59%)</title><rect x="89.4427%" y="1316" width="0.5882%" height="15" fill="rgb(227,167,50)" fg:x="5778" fg:w="38"/><text x="89.6927%" y="1326.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:1360) (38 samples, 0.59%)</title><rect x="89.4427%" y="1332" width="0.5882%" height="15" fill="rgb(242,84,37)" fg:x="5778" fg:w="38"/><text x="89.6927%" y="1342.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:1331) (38 samples, 0.59%)</title><rect x="89.4427%" y="1348" width="0.5882%" height="15" fill="rgb(212,4,50)" fg:x="5778" fg:w="38"/><text x="89.6927%" y="1358.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:935) (38 samples, 0.59%)</title><rect x="89.4427%" y="1364" width="0.5882%" height="15" fill="rgb(230,228,32)" fg:x="5778" fg:w="38"/><text x="89.6927%" y="1374.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:995) (38 samples, 0.59%)</title><rect x="89.4427%" y="1380" width="0.5882%" height="15" fill="rgb(248,217,23)" fg:x="5778" fg:w="38"/><text x="89.6927%" y="1390.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:488) (38 samples, 0.59%)</title><rect x="89.4427%" y="1396" width="0.5882%" height="15" fill="rgb(238,197,32)" fg:x="5778" fg:w="38"/><text x="89.6927%" y="1406.50"></text></g><g><title>&lt;module&gt; (torch/onnx/_internal/diagnostics/infra/formatter.py:10) (38 samples, 0.59%)</title><rect x="89.4427%" y="1412" width="0.5882%" height="15" fill="rgb(236,106,1)" fg:x="5778" fg:w="38"/><text x="89.6927%" y="1422.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;:1415) (38 samples, 0.59%)</title><rect x="89.4427%" y="1428" width="0.5882%" height="15" fill="rgb(219,228,13)" fg:x="5778" fg:w="38"/><text x="89.6927%" y="1438.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:488) (38 samples, 0.59%)</title><rect x="89.4427%" y="1444" width="0.5882%" height="15" fill="rgb(238,30,35)" fg:x="5778" fg:w="38"/><text x="89.6927%" y="1454.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:1360) (38 samples, 0.59%)</title><rect x="89.4427%" y="1460" width="0.5882%" height="15" fill="rgb(236,70,23)" fg:x="5778" fg:w="38"/><text x="89.6927%" y="1470.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:1331) (38 samples, 0.59%)</title><rect x="89.4427%" y="1476" width="0.5882%" height="15" fill="rgb(249,104,48)" fg:x="5778" fg:w="38"/><text x="89.6927%" y="1486.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:935) (38 samples, 0.59%)</title><rect x="89.4427%" y="1492" width="0.5882%" height="15" fill="rgb(254,117,50)" fg:x="5778" fg:w="38"/><text x="89.6927%" y="1502.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:995) (38 samples, 0.59%)</title><rect x="89.4427%" y="1508" width="0.5882%" height="15" fill="rgb(223,152,4)" fg:x="5778" fg:w="38"/><text x="89.6927%" y="1518.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:488) (38 samples, 0.59%)</title><rect x="89.4427%" y="1524" width="0.5882%" height="15" fill="rgb(245,6,2)" fg:x="5778" fg:w="38"/><text x="89.6927%" y="1534.50"></text></g><g><title>&lt;module&gt; (torchvision/ops/__init__.py:1) (42 samples, 0.65%)</title><rect x="89.3963%" y="548" width="0.6502%" height="15" fill="rgb(249,150,24)" fg:x="5775" fg:w="42"/><text x="89.6463%" y="558.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:1360) (42 samples, 0.65%)</title><rect x="89.3963%" y="564" width="0.6502%" height="15" fill="rgb(228,185,42)" fg:x="5775" fg:w="42"/><text x="89.6463%" y="574.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:1331) (42 samples, 0.65%)</title><rect x="89.3963%" y="580" width="0.6502%" height="15" fill="rgb(226,39,33)" fg:x="5775" fg:w="42"/><text x="89.6463%" y="590.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:935) (42 samples, 0.65%)</title><rect x="89.3963%" y="596" width="0.6502%" height="15" fill="rgb(221,166,19)" fg:x="5775" fg:w="42"/><text x="89.6463%" y="606.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:995) (42 samples, 0.65%)</title><rect x="89.3963%" y="612" width="0.6502%" height="15" fill="rgb(209,109,2)" fg:x="5775" fg:w="42"/><text x="89.6463%" y="622.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:488) (42 samples, 0.65%)</title><rect x="89.3963%" y="628" width="0.6502%" height="15" fill="rgb(252,216,26)" fg:x="5775" fg:w="42"/><text x="89.6463%" y="638.50"></text></g><g><title>&lt;module&gt; (torchvision/ops/_register_onnx_ops.py:5) (42 samples, 0.65%)</title><rect x="89.3963%" y="644" width="0.6502%" height="15" fill="rgb(227,173,36)" fg:x="5775" fg:w="42"/><text x="89.6463%" y="654.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:1360) (42 samples, 0.65%)</title><rect x="89.3963%" y="660" width="0.6502%" height="15" fill="rgb(209,90,7)" fg:x="5775" fg:w="42"/><text x="89.6463%" y="670.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:1331) (42 samples, 0.65%)</title><rect x="89.3963%" y="676" width="0.6502%" height="15" fill="rgb(250,194,11)" fg:x="5775" fg:w="42"/><text x="89.6463%" y="686.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:935) (42 samples, 0.65%)</title><rect x="89.3963%" y="692" width="0.6502%" height="15" fill="rgb(220,72,50)" fg:x="5775" fg:w="42"/><text x="89.6463%" y="702.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:995) (42 samples, 0.65%)</title><rect x="89.3963%" y="708" width="0.6502%" height="15" fill="rgb(222,106,48)" fg:x="5775" fg:w="42"/><text x="89.6463%" y="718.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:488) (42 samples, 0.65%)</title><rect x="89.3963%" y="724" width="0.6502%" height="15" fill="rgb(216,220,45)" fg:x="5775" fg:w="42"/><text x="89.6463%" y="734.50"></text></g><g><title>&lt;module&gt; (triton/language/__init__.py:4) (8 samples, 0.12%)</title><rect x="90.1548%" y="1924" width="0.1238%" height="15" fill="rgb(234,112,18)" fg:x="5824" fg:w="8"/><text x="90.4048%" y="1934.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;:1415) (8 samples, 0.12%)</title><rect x="90.1548%" y="1940" width="0.1238%" height="15" fill="rgb(206,179,9)" fg:x="5824" fg:w="8"/><text x="90.4048%" y="1950.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:488) (8 samples, 0.12%)</title><rect x="90.1548%" y="1956" width="0.1238%" height="15" fill="rgb(215,115,40)" fg:x="5824" fg:w="8"/><text x="90.4048%" y="1966.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:1360) (8 samples, 0.12%)</title><rect x="90.1548%" y="1972" width="0.1238%" height="15" fill="rgb(222,69,34)" fg:x="5824" fg:w="8"/><text x="90.4048%" y="1982.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:1331) (8 samples, 0.12%)</title><rect x="90.1548%" y="1988" width="0.1238%" height="15" fill="rgb(209,161,10)" fg:x="5824" fg:w="8"/><text x="90.4048%" y="1998.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:935) (8 samples, 0.12%)</title><rect x="90.1548%" y="2004" width="0.1238%" height="15" fill="rgb(217,6,38)" fg:x="5824" fg:w="8"/><text x="90.4048%" y="2014.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:995) (8 samples, 0.12%)</title><rect x="90.1548%" y="2020" width="0.1238%" height="15" fill="rgb(229,229,48)" fg:x="5824" fg:w="8"/><text x="90.4048%" y="2030.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:488) (8 samples, 0.12%)</title><rect x="90.1548%" y="2036" width="0.1238%" height="15" fill="rgb(225,21,28)" fg:x="5824" fg:w="8"/><text x="90.4048%" y="2046.50"></text></g><g><title>&lt;module&gt; (triton/language/math.py:1) (8 samples, 0.12%)</title><rect x="90.1548%" y="2052" width="0.1238%" height="15" fill="rgb(206,33,13)" fg:x="5824" fg:w="8"/><text x="90.4048%" y="2062.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;:1415) (8 samples, 0.12%)</title><rect x="90.1548%" y="2068" width="0.1238%" height="15" fill="rgb(242,178,17)" fg:x="5824" fg:w="8"/><text x="90.4048%" y="2078.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:488) (8 samples, 0.12%)</title><rect x="90.1548%" y="2084" width="0.1238%" height="15" fill="rgb(220,162,5)" fg:x="5824" fg:w="8"/><text x="90.4048%" y="2094.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:1360) (8 samples, 0.12%)</title><rect x="90.1548%" y="2100" width="0.1238%" height="15" fill="rgb(210,33,43)" fg:x="5824" fg:w="8"/><text x="90.4048%" y="2110.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:1331) (8 samples, 0.12%)</title><rect x="90.1548%" y="2116" width="0.1238%" height="15" fill="rgb(216,116,54)" fg:x="5824" fg:w="8"/><text x="90.4048%" y="2126.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:935) (8 samples, 0.12%)</title><rect x="90.1548%" y="2132" width="0.1238%" height="15" fill="rgb(249,92,24)" fg:x="5824" fg:w="8"/><text x="90.4048%" y="2142.50"></text></g><g><title>&lt;module&gt; (torch/_dynamo/utils.py:2240) (19 samples, 0.29%)</title><rect x="90.1084%" y="1300" width="0.2941%" height="15" fill="rgb(231,189,14)" fg:x="5821" fg:w="19"/><text x="90.3584%" y="1310.50"></text></g><g><title>has_triton_package (torch/utils/_triton.py:9) (19 samples, 0.29%)</title><rect x="90.1084%" y="1316" width="0.2941%" height="15" fill="rgb(230,8,41)" fg:x="5821" fg:w="19"/><text x="90.3584%" y="1326.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:1360) (19 samples, 0.29%)</title><rect x="90.1084%" y="1332" width="0.2941%" height="15" fill="rgb(249,7,27)" fg:x="5821" fg:w="19"/><text x="90.3584%" y="1342.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:1310) (19 samples, 0.29%)</title><rect x="90.1084%" y="1348" width="0.2941%" height="15" fill="rgb(232,86,5)" fg:x="5821" fg:w="19"/><text x="90.3584%" y="1358.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:488) (19 samples, 0.29%)</title><rect x="90.1084%" y="1364" width="0.2941%" height="15" fill="rgb(224,175,18)" fg:x="5821" fg:w="19"/><text x="90.3584%" y="1374.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:1360) (19 samples, 0.29%)</title><rect x="90.1084%" y="1380" width="0.2941%" height="15" fill="rgb(220,129,12)" fg:x="5821" fg:w="19"/><text x="90.3584%" y="1390.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:1310) (19 samples, 0.29%)</title><rect x="90.1084%" y="1396" width="0.2941%" height="15" fill="rgb(210,19,36)" fg:x="5821" fg:w="19"/><text x="90.3584%" y="1406.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:488) (19 samples, 0.29%)</title><rect x="90.1084%" y="1412" width="0.2941%" height="15" fill="rgb(219,96,14)" fg:x="5821" fg:w="19"/><text x="90.3584%" y="1422.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:1360) (19 samples, 0.29%)</title><rect x="90.1084%" y="1428" width="0.2941%" height="15" fill="rgb(249,106,1)" fg:x="5821" fg:w="19"/><text x="90.3584%" y="1438.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:1331) (19 samples, 0.29%)</title><rect x="90.1084%" y="1444" width="0.2941%" height="15" fill="rgb(249,155,20)" fg:x="5821" fg:w="19"/><text x="90.3584%" y="1454.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:935) (19 samples, 0.29%)</title><rect x="90.1084%" y="1460" width="0.2941%" height="15" fill="rgb(244,168,9)" fg:x="5821" fg:w="19"/><text x="90.3584%" y="1470.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:995) (19 samples, 0.29%)</title><rect x="90.1084%" y="1476" width="0.2941%" height="15" fill="rgb(216,23,50)" fg:x="5821" fg:w="19"/><text x="90.3584%" y="1486.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:488) (19 samples, 0.29%)</title><rect x="90.1084%" y="1492" width="0.2941%" height="15" fill="rgb(224,219,20)" fg:x="5821" fg:w="19"/><text x="90.3584%" y="1502.50"></text></g><g><title>&lt;module&gt; (triton/__init__.py:21) (19 samples, 0.29%)</title><rect x="90.1084%" y="1508" width="0.2941%" height="15" fill="rgb(222,156,15)" fg:x="5821" fg:w="19"/><text x="90.3584%" y="1518.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:1360) (19 samples, 0.29%)</title><rect x="90.1084%" y="1524" width="0.2941%" height="15" fill="rgb(231,97,17)" fg:x="5821" fg:w="19"/><text x="90.3584%" y="1534.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:1331) (19 samples, 0.29%)</title><rect x="90.1084%" y="1540" width="0.2941%" height="15" fill="rgb(218,70,48)" fg:x="5821" fg:w="19"/><text x="90.3584%" y="1550.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:935) (19 samples, 0.29%)</title><rect x="90.1084%" y="1556" width="0.2941%" height="15" fill="rgb(212,196,52)" fg:x="5821" fg:w="19"/><text x="90.3584%" y="1566.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:995) (19 samples, 0.29%)</title><rect x="90.1084%" y="1572" width="0.2941%" height="15" fill="rgb(243,203,18)" fg:x="5821" fg:w="19"/><text x="90.3584%" y="1582.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:488) (19 samples, 0.29%)</title><rect x="90.1084%" y="1588" width="0.2941%" height="15" fill="rgb(252,125,41)" fg:x="5821" fg:w="19"/><text x="90.3584%" y="1598.50"></text></g><g><title>&lt;module&gt; (triton/compiler/__init__.py:1) (19 samples, 0.29%)</title><rect x="90.1084%" y="1604" width="0.2941%" height="15" fill="rgb(223,180,33)" fg:x="5821" fg:w="19"/><text x="90.3584%" y="1614.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:1360) (19 samples, 0.29%)</title><rect x="90.1084%" y="1620" width="0.2941%" height="15" fill="rgb(254,159,46)" fg:x="5821" fg:w="19"/><text x="90.3584%" y="1630.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:1331) (19 samples, 0.29%)</title><rect x="90.1084%" y="1636" width="0.2941%" height="15" fill="rgb(254,38,10)" fg:x="5821" fg:w="19"/><text x="90.3584%" y="1646.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:935) (19 samples, 0.29%)</title><rect x="90.1084%" y="1652" width="0.2941%" height="15" fill="rgb(208,217,32)" fg:x="5821" fg:w="19"/><text x="90.3584%" y="1662.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:995) (19 samples, 0.29%)</title><rect x="90.1084%" y="1668" width="0.2941%" height="15" fill="rgb(221,120,13)" fg:x="5821" fg:w="19"/><text x="90.3584%" y="1678.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:488) (19 samples, 0.29%)</title><rect x="90.1084%" y="1684" width="0.2941%" height="15" fill="rgb(246,54,52)" fg:x="5821" fg:w="19"/><text x="90.3584%" y="1694.50"></text></g><g><title>&lt;module&gt; (triton/compiler/compiler.py:13) (19 samples, 0.29%)</title><rect x="90.1084%" y="1700" width="0.2941%" height="15" fill="rgb(242,34,25)" fg:x="5821" fg:w="19"/><text x="90.3584%" y="1710.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:1360) (19 samples, 0.29%)</title><rect x="90.1084%" y="1716" width="0.2941%" height="15" fill="rgb(247,209,9)" fg:x="5821" fg:w="19"/><text x="90.3584%" y="1726.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:1331) (19 samples, 0.29%)</title><rect x="90.1084%" y="1732" width="0.2941%" height="15" fill="rgb(228,71,26)" fg:x="5821" fg:w="19"/><text x="90.3584%" y="1742.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:935) (19 samples, 0.29%)</title><rect x="90.1084%" y="1748" width="0.2941%" height="15" fill="rgb(222,145,49)" fg:x="5821" fg:w="19"/><text x="90.3584%" y="1758.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:995) (19 samples, 0.29%)</title><rect x="90.1084%" y="1764" width="0.2941%" height="15" fill="rgb(218,121,17)" fg:x="5821" fg:w="19"/><text x="90.3584%" y="1774.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:488) (19 samples, 0.29%)</title><rect x="90.1084%" y="1780" width="0.2941%" height="15" fill="rgb(244,50,7)" fg:x="5821" fg:w="19"/><text x="90.3584%" y="1790.50"></text></g><g><title>&lt;module&gt; (triton/compiler/code_generator.py:11) (19 samples, 0.29%)</title><rect x="90.1084%" y="1796" width="0.2941%" height="15" fill="rgb(246,229,37)" fg:x="5821" fg:w="19"/><text x="90.3584%" y="1806.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;:1415) (19 samples, 0.29%)</title><rect x="90.1084%" y="1812" width="0.2941%" height="15" fill="rgb(225,18,5)" fg:x="5821" fg:w="19"/><text x="90.3584%" y="1822.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:488) (19 samples, 0.29%)</title><rect x="90.1084%" y="1828" width="0.2941%" height="15" fill="rgb(213,204,8)" fg:x="5821" fg:w="19"/><text x="90.3584%" y="1838.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:1360) (19 samples, 0.29%)</title><rect x="90.1084%" y="1844" width="0.2941%" height="15" fill="rgb(238,103,6)" fg:x="5821" fg:w="19"/><text x="90.3584%" y="1854.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:1331) (19 samples, 0.29%)</title><rect x="90.1084%" y="1860" width="0.2941%" height="15" fill="rgb(222,25,35)" fg:x="5821" fg:w="19"/><text x="90.3584%" y="1870.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:935) (19 samples, 0.29%)</title><rect x="90.1084%" y="1876" width="0.2941%" height="15" fill="rgb(213,203,35)" fg:x="5821" fg:w="19"/><text x="90.3584%" y="1886.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:995) (19 samples, 0.29%)</title><rect x="90.1084%" y="1892" width="0.2941%" height="15" fill="rgb(221,79,53)" fg:x="5821" fg:w="19"/><text x="90.3584%" y="1902.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:488) (19 samples, 0.29%)</title><rect x="90.1084%" y="1908" width="0.2941%" height="15" fill="rgb(243,200,35)" fg:x="5821" fg:w="19"/><text x="90.3584%" y="1918.50"></text></g><g><title>&lt;module&gt; (triton/language/__init__.py:6) (8 samples, 0.12%)</title><rect x="90.2786%" y="1924" width="0.1238%" height="15" fill="rgb(248,60,25)" fg:x="5832" fg:w="8"/><text x="90.5286%" y="1934.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:1360) (8 samples, 0.12%)</title><rect x="90.2786%" y="1940" width="0.1238%" height="15" fill="rgb(227,53,46)" fg:x="5832" fg:w="8"/><text x="90.5286%" y="1950.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:1331) (8 samples, 0.12%)</title><rect x="90.2786%" y="1956" width="0.1238%" height="15" fill="rgb(216,120,32)" fg:x="5832" fg:w="8"/><text x="90.5286%" y="1966.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:935) (8 samples, 0.12%)</title><rect x="90.2786%" y="1972" width="0.1238%" height="15" fill="rgb(220,134,1)" fg:x="5832" fg:w="8"/><text x="90.5286%" y="1982.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:995) (8 samples, 0.12%)</title><rect x="90.2786%" y="1988" width="0.1238%" height="15" fill="rgb(237,168,5)" fg:x="5832" fg:w="8"/><text x="90.5286%" y="1998.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:488) (8 samples, 0.12%)</title><rect x="90.2786%" y="2004" width="0.1238%" height="15" fill="rgb(231,100,33)" fg:x="5832" fg:w="8"/><text x="90.5286%" y="2014.50"></text></g><g><title>&lt;module&gt; (mpmath/ctx_base.py:5) (19 samples, 0.29%)</title><rect x="90.7740%" y="1876" width="0.2941%" height="15" fill="rgb(236,177,47)" fg:x="5864" fg:w="19"/><text x="91.0240%" y="1886.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:1360) (19 samples, 0.29%)</title><rect x="90.7740%" y="1892" width="0.2941%" height="15" fill="rgb(235,7,49)" fg:x="5864" fg:w="19"/><text x="91.0240%" y="1902.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:1310) (19 samples, 0.29%)</title><rect x="90.7740%" y="1908" width="0.2941%" height="15" fill="rgb(232,119,22)" fg:x="5864" fg:w="19"/><text x="91.0240%" y="1918.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:488) (19 samples, 0.29%)</title><rect x="90.7740%" y="1924" width="0.2941%" height="15" fill="rgb(254,73,53)" fg:x="5864" fg:w="19"/><text x="91.0240%" y="1934.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:1360) (19 samples, 0.29%)</title><rect x="90.7740%" y="1940" width="0.2941%" height="15" fill="rgb(251,35,20)" fg:x="5864" fg:w="19"/><text x="91.0240%" y="1950.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:1331) (19 samples, 0.29%)</title><rect x="90.7740%" y="1956" width="0.2941%" height="15" fill="rgb(241,119,20)" fg:x="5864" fg:w="19"/><text x="91.0240%" y="1966.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:935) (19 samples, 0.29%)</title><rect x="90.7740%" y="1972" width="0.2941%" height="15" fill="rgb(207,102,14)" fg:x="5864" fg:w="19"/><text x="91.0240%" y="1982.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:995) (19 samples, 0.29%)</title><rect x="90.7740%" y="1988" width="0.2941%" height="15" fill="rgb(248,201,50)" fg:x="5864" fg:w="19"/><text x="91.0240%" y="1998.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:488) (19 samples, 0.29%)</title><rect x="90.7740%" y="2004" width="0.2941%" height="15" fill="rgb(222,185,44)" fg:x="5864" fg:w="19"/><text x="91.0240%" y="2014.50"></text></g><g><title>&lt;module&gt; (mpmath/__init__.py:5) (44 samples, 0.68%)</title><rect x="90.6656%" y="1684" width="0.6811%" height="15" fill="rgb(218,107,18)" fg:x="5857" fg:w="44"/><text x="90.9156%" y="1694.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:1360) (44 samples, 0.68%)</title><rect x="90.6656%" y="1700" width="0.6811%" height="15" fill="rgb(237,177,39)" fg:x="5857" fg:w="44"/><text x="90.9156%" y="1710.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:1331) (44 samples, 0.68%)</title><rect x="90.6656%" y="1716" width="0.6811%" height="15" fill="rgb(246,69,6)" fg:x="5857" fg:w="44"/><text x="90.9156%" y="1726.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:935) (44 samples, 0.68%)</title><rect x="90.6656%" y="1732" width="0.6811%" height="15" fill="rgb(234,208,37)" fg:x="5857" fg:w="44"/><text x="90.9156%" y="1742.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:995) (44 samples, 0.68%)</title><rect x="90.6656%" y="1748" width="0.6811%" height="15" fill="rgb(225,4,6)" fg:x="5857" fg:w="44"/><text x="90.9156%" y="1758.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:488) (44 samples, 0.68%)</title><rect x="90.6656%" y="1764" width="0.6811%" height="15" fill="rgb(233,45,0)" fg:x="5857" fg:w="44"/><text x="90.9156%" y="1774.50"></text></g><g><title>&lt;module&gt; (mpmath/ctx_fp.py:1) (44 samples, 0.68%)</title><rect x="90.6656%" y="1780" width="0.6811%" height="15" fill="rgb(226,136,5)" fg:x="5857" fg:w="44"/><text x="90.9156%" y="1790.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:1360) (44 samples, 0.68%)</title><rect x="90.6656%" y="1796" width="0.6811%" height="15" fill="rgb(211,91,47)" fg:x="5857" fg:w="44"/><text x="90.9156%" y="1806.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:1331) (44 samples, 0.68%)</title><rect x="90.6656%" y="1812" width="0.6811%" height="15" fill="rgb(242,88,51)" fg:x="5857" fg:w="44"/><text x="90.9156%" y="1822.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:935) (44 samples, 0.68%)</title><rect x="90.6656%" y="1828" width="0.6811%" height="15" fill="rgb(230,91,28)" fg:x="5857" fg:w="44"/><text x="90.9156%" y="1838.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:995) (44 samples, 0.68%)</title><rect x="90.6656%" y="1844" width="0.6811%" height="15" fill="rgb(254,186,29)" fg:x="5857" fg:w="44"/><text x="90.9156%" y="1854.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:488) (44 samples, 0.68%)</title><rect x="90.6656%" y="1860" width="0.6811%" height="15" fill="rgb(238,6,4)" fg:x="5857" fg:w="44"/><text x="90.9156%" y="1870.50"></text></g><g><title>&lt;module&gt; (mpmath/ctx_base.py:7) (18 samples, 0.28%)</title><rect x="91.0681%" y="1876" width="0.2786%" height="15" fill="rgb(221,151,16)" fg:x="5883" fg:w="18"/><text x="91.3181%" y="1886.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:1360) (18 samples, 0.28%)</title><rect x="91.0681%" y="1892" width="0.2786%" height="15" fill="rgb(251,143,52)" fg:x="5883" fg:w="18"/><text x="91.3181%" y="1902.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:1310) (18 samples, 0.28%)</title><rect x="91.0681%" y="1908" width="0.2786%" height="15" fill="rgb(206,90,15)" fg:x="5883" fg:w="18"/><text x="91.3181%" y="1918.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:488) (18 samples, 0.28%)</title><rect x="91.0681%" y="1924" width="0.2786%" height="15" fill="rgb(218,35,8)" fg:x="5883" fg:w="18"/><text x="91.3181%" y="1934.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:1360) (18 samples, 0.28%)</title><rect x="91.0681%" y="1940" width="0.2786%" height="15" fill="rgb(239,215,6)" fg:x="5883" fg:w="18"/><text x="91.3181%" y="1950.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:1331) (17 samples, 0.26%)</title><rect x="91.0836%" y="1956" width="0.2632%" height="15" fill="rgb(245,116,39)" fg:x="5884" fg:w="17"/><text x="91.3336%" y="1966.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:935) (17 samples, 0.26%)</title><rect x="91.0836%" y="1972" width="0.2632%" height="15" fill="rgb(242,65,28)" fg:x="5884" fg:w="17"/><text x="91.3336%" y="1982.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:995) (16 samples, 0.25%)</title><rect x="91.0991%" y="1988" width="0.2477%" height="15" fill="rgb(252,132,53)" fg:x="5885" fg:w="16"/><text x="91.3491%" y="1998.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:488) (16 samples, 0.25%)</title><rect x="91.0991%" y="2004" width="0.2477%" height="15" fill="rgb(224,159,50)" fg:x="5885" fg:w="16"/><text x="91.3491%" y="2014.50"></text></g><g><title>&lt;module&gt; (sympy/__init__.py:23) (51 samples, 0.79%)</title><rect x="90.6656%" y="1588" width="0.7895%" height="15" fill="rgb(224,93,4)" fg:x="5857" fg:w="51"/><text x="90.9156%" y="1598.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:1360) (51 samples, 0.79%)</title><rect x="90.6656%" y="1604" width="0.7895%" height="15" fill="rgb(208,81,34)" fg:x="5857" fg:w="51"/><text x="90.9156%" y="1614.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:1331) (51 samples, 0.79%)</title><rect x="90.6656%" y="1620" width="0.7895%" height="15" fill="rgb(233,92,54)" fg:x="5857" fg:w="51"/><text x="90.9156%" y="1630.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:935) (51 samples, 0.79%)</title><rect x="90.6656%" y="1636" width="0.7895%" height="15" fill="rgb(237,21,14)" fg:x="5857" fg:w="51"/><text x="90.9156%" y="1646.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:995) (51 samples, 0.79%)</title><rect x="90.6656%" y="1652" width="0.7895%" height="15" fill="rgb(249,128,51)" fg:x="5857" fg:w="51"/><text x="90.9156%" y="1662.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:488) (51 samples, 0.79%)</title><rect x="90.6656%" y="1668" width="0.7895%" height="15" fill="rgb(223,129,24)" fg:x="5857" fg:w="51"/><text x="90.9156%" y="1678.50"></text></g><g><title>&lt;module&gt; (sympy/utilities/__init__.py:11) (9 samples, 0.14%)</title><rect x="91.5170%" y="2068" width="0.1393%" height="15" fill="rgb(231,168,25)" fg:x="5912" fg:w="9"/><text x="91.7670%" y="2078.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:1360) (9 samples, 0.14%)</title><rect x="91.5170%" y="2084" width="0.1393%" height="15" fill="rgb(224,39,20)" fg:x="5912" fg:w="9"/><text x="91.7670%" y="2094.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:1331) (8 samples, 0.12%)</title><rect x="91.5325%" y="2100" width="0.1238%" height="15" fill="rgb(225,152,53)" fg:x="5913" fg:w="8"/><text x="91.7825%" y="2110.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:935) (8 samples, 0.12%)</title><rect x="91.5325%" y="2116" width="0.1238%" height="15" fill="rgb(252,17,24)" fg:x="5913" fg:w="8"/><text x="91.7825%" y="2126.50"></text></g><g><title>&lt;module&gt; (sympy/utilities/iterables.py:17) (7 samples, 0.11%)</title><rect x="91.6873%" y="2164" width="0.1084%" height="15" fill="rgb(250,114,30)" fg:x="5923" fg:w="7"/><text x="91.9373%" y="2174.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:1360) (7 samples, 0.11%)</title><rect x="91.6873%" y="2180" width="0.1084%" height="15" fill="rgb(229,5,4)" fg:x="5923" fg:w="7"/><text x="91.9373%" y="2190.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:1331) (7 samples, 0.11%)</title><rect x="91.6873%" y="2196" width="0.1084%" height="15" fill="rgb(225,176,49)" fg:x="5923" fg:w="7"/><text x="91.9373%" y="2206.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:935) (7 samples, 0.11%)</title><rect x="91.6873%" y="2212" width="0.1084%" height="15" fill="rgb(224,221,49)" fg:x="5923" fg:w="7"/><text x="91.9373%" y="2222.50"></text></g><g><title>&lt;module&gt; (sympy/core/sympify.py:11) (21 samples, 0.33%)</title><rect x="91.5015%" y="1828" width="0.3251%" height="15" fill="rgb(253,169,27)" fg:x="5911" fg:w="21"/><text x="91.7515%" y="1838.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:1360) (21 samples, 0.33%)</title><rect x="91.5015%" y="1844" width="0.3251%" height="15" fill="rgb(211,206,16)" fg:x="5911" fg:w="21"/><text x="91.7515%" y="1854.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:1331) (21 samples, 0.33%)</title><rect x="91.5015%" y="1860" width="0.3251%" height="15" fill="rgb(244,87,35)" fg:x="5911" fg:w="21"/><text x="91.7515%" y="1870.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:935) (21 samples, 0.33%)</title><rect x="91.5015%" y="1876" width="0.3251%" height="15" fill="rgb(246,28,10)" fg:x="5911" fg:w="21"/><text x="91.7515%" y="1886.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:995) (21 samples, 0.33%)</title><rect x="91.5015%" y="1892" width="0.3251%" height="15" fill="rgb(229,12,44)" fg:x="5911" fg:w="21"/><text x="91.7515%" y="1902.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:488) (21 samples, 0.33%)</title><rect x="91.5015%" y="1908" width="0.3251%" height="15" fill="rgb(210,145,37)" fg:x="5911" fg:w="21"/><text x="91.7515%" y="1918.50"></text></g><g><title>&lt;module&gt; (sympy/core/random.py:25) (21 samples, 0.33%)</title><rect x="91.5015%" y="1924" width="0.3251%" height="15" fill="rgb(227,112,52)" fg:x="5911" fg:w="21"/><text x="91.7515%" y="1934.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:1360) (21 samples, 0.33%)</title><rect x="91.5015%" y="1940" width="0.3251%" height="15" fill="rgb(238,155,34)" fg:x="5911" fg:w="21"/><text x="91.7515%" y="1950.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:1310) (21 samples, 0.33%)</title><rect x="91.5015%" y="1956" width="0.3251%" height="15" fill="rgb(239,226,36)" fg:x="5911" fg:w="21"/><text x="91.7515%" y="1966.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:488) (21 samples, 0.33%)</title><rect x="91.5015%" y="1972" width="0.3251%" height="15" fill="rgb(230,16,23)" fg:x="5911" fg:w="21"/><text x="91.7515%" y="1982.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:1360) (21 samples, 0.33%)</title><rect x="91.5015%" y="1988" width="0.3251%" height="15" fill="rgb(236,171,36)" fg:x="5911" fg:w="21"/><text x="91.7515%" y="1998.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:1331) (21 samples, 0.33%)</title><rect x="91.5015%" y="2004" width="0.3251%" height="15" fill="rgb(221,22,14)" fg:x="5911" fg:w="21"/><text x="91.7515%" y="2014.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:935) (21 samples, 0.33%)</title><rect x="91.5015%" y="2020" width="0.3251%" height="15" fill="rgb(242,43,11)" fg:x="5911" fg:w="21"/><text x="91.7515%" y="2030.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:995) (20 samples, 0.31%)</title><rect x="91.5170%" y="2036" width="0.3096%" height="15" fill="rgb(232,69,23)" fg:x="5912" fg:w="20"/><text x="91.7670%" y="2046.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:488) (20 samples, 0.31%)</title><rect x="91.5170%" y="2052" width="0.3096%" height="15" fill="rgb(216,180,54)" fg:x="5912" fg:w="20"/><text x="91.7670%" y="2062.50"></text></g><g><title>&lt;module&gt; (sympy/utilities/__init__.py:4) (11 samples, 0.17%)</title><rect x="91.6563%" y="2068" width="0.1703%" height="15" fill="rgb(216,5,24)" fg:x="5921" fg:w="11"/><text x="91.9063%" y="2078.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:1360) (9 samples, 0.14%)</title><rect x="91.6873%" y="2084" width="0.1393%" height="15" fill="rgb(225,89,9)" fg:x="5923" fg:w="9"/><text x="91.9373%" y="2094.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:1331) (9 samples, 0.14%)</title><rect x="91.6873%" y="2100" width="0.1393%" height="15" fill="rgb(243,75,33)" fg:x="5923" fg:w="9"/><text x="91.9373%" y="2110.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:935) (9 samples, 0.14%)</title><rect x="91.6873%" y="2116" width="0.1393%" height="15" fill="rgb(247,141,45)" fg:x="5923" fg:w="9"/><text x="91.9373%" y="2126.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:995) (9 samples, 0.14%)</title><rect x="91.6873%" y="2132" width="0.1393%" height="15" fill="rgb(232,177,36)" fg:x="5923" fg:w="9"/><text x="91.9373%" y="2142.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:488) (9 samples, 0.14%)</title><rect x="91.6873%" y="2148" width="0.1393%" height="15" fill="rgb(219,125,36)" fg:x="5923" fg:w="9"/><text x="91.9373%" y="2158.50"></text></g><g><title>&lt;module&gt; (sympy/core/__init__.py:4) (26 samples, 0.40%)</title><rect x="91.5015%" y="1732" width="0.4025%" height="15" fill="rgb(227,94,9)" fg:x="5911" fg:w="26"/><text x="91.7515%" y="1742.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:1360) (26 samples, 0.40%)</title><rect x="91.5015%" y="1748" width="0.4025%" height="15" fill="rgb(240,34,52)" fg:x="5911" fg:w="26"/><text x="91.7515%" y="1758.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:1331) (26 samples, 0.40%)</title><rect x="91.5015%" y="1764" width="0.4025%" height="15" fill="rgb(216,45,12)" fg:x="5911" fg:w="26"/><text x="91.7515%" y="1774.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:935) (26 samples, 0.40%)</title><rect x="91.5015%" y="1780" width="0.4025%" height="15" fill="rgb(246,21,19)" fg:x="5911" fg:w="26"/><text x="91.7515%" y="1790.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:995) (26 samples, 0.40%)</title><rect x="91.5015%" y="1796" width="0.4025%" height="15" fill="rgb(213,98,42)" fg:x="5911" fg:w="26"/><text x="91.7515%" y="1806.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:488) (26 samples, 0.40%)</title><rect x="91.5015%" y="1812" width="0.4025%" height="15" fill="rgb(250,136,47)" fg:x="5911" fg:w="26"/><text x="91.7515%" y="1822.50"></text></g><g><title>&lt;module&gt; (sympy/__init__.py:31) (31 samples, 0.48%)</title><rect x="91.5015%" y="1588" width="0.4799%" height="15" fill="rgb(251,124,27)" fg:x="5911" fg:w="31"/><text x="91.7515%" y="1598.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:1360) (31 samples, 0.48%)</title><rect x="91.5015%" y="1604" width="0.4799%" height="15" fill="rgb(229,180,14)" fg:x="5911" fg:w="31"/><text x="91.7515%" y="1614.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:1310) (31 samples, 0.48%)</title><rect x="91.5015%" y="1620" width="0.4799%" height="15" fill="rgb(245,216,25)" fg:x="5911" fg:w="31"/><text x="91.7515%" y="1630.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:488) (31 samples, 0.48%)</title><rect x="91.5015%" y="1636" width="0.4799%" height="15" fill="rgb(251,43,5)" fg:x="5911" fg:w="31"/><text x="91.7515%" y="1646.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:1360) (31 samples, 0.48%)</title><rect x="91.5015%" y="1652" width="0.4799%" height="15" fill="rgb(250,128,24)" fg:x="5911" fg:w="31"/><text x="91.7515%" y="1662.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:1331) (31 samples, 0.48%)</title><rect x="91.5015%" y="1668" width="0.4799%" height="15" fill="rgb(217,117,27)" fg:x="5911" fg:w="31"/><text x="91.7515%" y="1678.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:935) (31 samples, 0.48%)</title><rect x="91.5015%" y="1684" width="0.4799%" height="15" fill="rgb(245,147,4)" fg:x="5911" fg:w="31"/><text x="91.7515%" y="1694.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:995) (31 samples, 0.48%)</title><rect x="91.5015%" y="1700" width="0.4799%" height="15" fill="rgb(242,201,35)" fg:x="5911" fg:w="31"/><text x="91.7515%" y="1710.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:488) (31 samples, 0.48%)</title><rect x="91.5015%" y="1716" width="0.4799%" height="15" fill="rgb(218,181,1)" fg:x="5911" fg:w="31"/><text x="91.7515%" y="1726.50"></text></g><g><title>&lt;module&gt; (sympy/polys/__init__.py:124) (12 samples, 0.19%)</title><rect x="92.0124%" y="1684" width="0.1858%" height="15" fill="rgb(222,6,29)" fg:x="5944" fg:w="12"/><text x="92.2624%" y="1694.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:1360) (12 samples, 0.19%)</title><rect x="92.0124%" y="1700" width="0.1858%" height="15" fill="rgb(208,186,3)" fg:x="5944" fg:w="12"/><text x="92.2624%" y="1710.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:1331) (12 samples, 0.19%)</title><rect x="92.0124%" y="1716" width="0.1858%" height="15" fill="rgb(216,36,26)" fg:x="5944" fg:w="12"/><text x="92.2624%" y="1726.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:935) (12 samples, 0.19%)</title><rect x="92.0124%" y="1732" width="0.1858%" height="15" fill="rgb(248,201,23)" fg:x="5944" fg:w="12"/><text x="92.2624%" y="1742.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:995) (12 samples, 0.19%)</title><rect x="92.0124%" y="1748" width="0.1858%" height="15" fill="rgb(251,170,31)" fg:x="5944" fg:w="12"/><text x="92.2624%" y="1758.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:488) (12 samples, 0.19%)</title><rect x="92.0124%" y="1764" width="0.1858%" height="15" fill="rgb(207,110,25)" fg:x="5944" fg:w="12"/><text x="92.2624%" y="1774.50"></text></g><g><title>&lt;module&gt; (sympy/polys/partfrac.py:13) (12 samples, 0.19%)</title><rect x="92.0124%" y="1780" width="0.1858%" height="15" fill="rgb(250,54,15)" fg:x="5944" fg:w="12"/><text x="92.2624%" y="1790.50"></text></g><g><title>xthreaded (sympy/utilities/decorator.py:82) (12 samples, 0.19%)</title><rect x="92.0124%" y="1796" width="0.1858%" height="15" fill="rgb(227,68,33)" fg:x="5944" fg:w="12"/><text x="92.2624%" y="1806.50"></text></g><g><title>threaded_factory (sympy/utilities/decorator.py:19) (12 samples, 0.19%)</title><rect x="92.0124%" y="1812" width="0.1858%" height="15" fill="rgb(238,34,41)" fg:x="5944" fg:w="12"/><text x="92.2624%" y="1822.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:1360) (12 samples, 0.19%)</title><rect x="92.0124%" y="1828" width="0.1858%" height="15" fill="rgb(220,11,15)" fg:x="5944" fg:w="12"/><text x="92.2624%" y="1838.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:1331) (12 samples, 0.19%)</title><rect x="92.0124%" y="1844" width="0.1858%" height="15" fill="rgb(246,111,35)" fg:x="5944" fg:w="12"/><text x="92.2624%" y="1854.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:935) (12 samples, 0.19%)</title><rect x="92.0124%" y="1860" width="0.1858%" height="15" fill="rgb(209,88,53)" fg:x="5944" fg:w="12"/><text x="92.2624%" y="1870.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:995) (12 samples, 0.19%)</title><rect x="92.0124%" y="1876" width="0.1858%" height="15" fill="rgb(231,185,47)" fg:x="5944" fg:w="12"/><text x="92.2624%" y="1886.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:488) (12 samples, 0.19%)</title><rect x="92.0124%" y="1892" width="0.1858%" height="15" fill="rgb(233,154,1)" fg:x="5944" fg:w="12"/><text x="92.2624%" y="1902.50"></text></g><g><title>&lt;module&gt; (sympy/matrices/__init__.py:8) (9 samples, 0.14%)</title><rect x="92.0588%" y="1908" width="0.1393%" height="15" fill="rgb(225,15,46)" fg:x="5947" fg:w="9"/><text x="92.3088%" y="1918.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:1360) (9 samples, 0.14%)</title><rect x="92.0588%" y="1924" width="0.1393%" height="15" fill="rgb(211,135,41)" fg:x="5947" fg:w="9"/><text x="92.3088%" y="1934.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:1331) (9 samples, 0.14%)</title><rect x="92.0588%" y="1940" width="0.1393%" height="15" fill="rgb(208,54,0)" fg:x="5947" fg:w="9"/><text x="92.3088%" y="1950.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:935) (9 samples, 0.14%)</title><rect x="92.0588%" y="1956" width="0.1393%" height="15" fill="rgb(244,136,14)" fg:x="5947" fg:w="9"/><text x="92.3088%" y="1966.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:995) (9 samples, 0.14%)</title><rect x="92.0588%" y="1972" width="0.1393%" height="15" fill="rgb(241,56,14)" fg:x="5947" fg:w="9"/><text x="92.3088%" y="1982.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:488) (9 samples, 0.14%)</title><rect x="92.0588%" y="1988" width="0.1393%" height="15" fill="rgb(205,80,24)" fg:x="5947" fg:w="9"/><text x="92.3088%" y="1998.50"></text></g><g><title>&lt;module&gt; (sympy/matrices/dense.py:15) (9 samples, 0.14%)</title><rect x="92.0588%" y="2004" width="0.1393%" height="15" fill="rgb(220,57,4)" fg:x="5947" fg:w="9"/><text x="92.3088%" y="2014.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:1360) (9 samples, 0.14%)</title><rect x="92.0588%" y="2020" width="0.1393%" height="15" fill="rgb(226,193,50)" fg:x="5947" fg:w="9"/><text x="92.3088%" y="2030.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:1331) (9 samples, 0.14%)</title><rect x="92.0588%" y="2036" width="0.1393%" height="15" fill="rgb(231,168,22)" fg:x="5947" fg:w="9"/><text x="92.3088%" y="2046.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:935) (9 samples, 0.14%)</title><rect x="92.0588%" y="2052" width="0.1393%" height="15" fill="rgb(254,215,14)" fg:x="5947" fg:w="9"/><text x="92.3088%" y="2062.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:995) (9 samples, 0.14%)</title><rect x="92.0588%" y="2068" width="0.1393%" height="15" fill="rgb(211,115,16)" fg:x="5947" fg:w="9"/><text x="92.3088%" y="2078.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:488) (9 samples, 0.14%)</title><rect x="92.0588%" y="2084" width="0.1393%" height="15" fill="rgb(236,210,16)" fg:x="5947" fg:w="9"/><text x="92.3088%" y="2094.50"></text></g><g><title>&lt;module&gt; (sympy/matrices/matrixbase.py:61) (8 samples, 0.12%)</title><rect x="92.0743%" y="2100" width="0.1238%" height="15" fill="rgb(221,94,12)" fg:x="5948" fg:w="8"/><text x="92.3243%" y="2110.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:1360) (8 samples, 0.12%)</title><rect x="92.0743%" y="2116" width="0.1238%" height="15" fill="rgb(235,218,49)" fg:x="5948" fg:w="8"/><text x="92.3243%" y="2126.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:1331) (8 samples, 0.12%)</title><rect x="92.0743%" y="2132" width="0.1238%" height="15" fill="rgb(217,114,14)" fg:x="5948" fg:w="8"/><text x="92.3243%" y="2142.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:935) (8 samples, 0.12%)</title><rect x="92.0743%" y="2148" width="0.1238%" height="15" fill="rgb(216,145,22)" fg:x="5948" fg:w="8"/><text x="92.3243%" y="2158.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:995) (8 samples, 0.12%)</title><rect x="92.0743%" y="2164" width="0.1238%" height="15" fill="rgb(217,112,39)" fg:x="5948" fg:w="8"/><text x="92.3243%" y="2174.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:488) (8 samples, 0.12%)</title><rect x="92.0743%" y="2180" width="0.1238%" height="15" fill="rgb(225,85,32)" fg:x="5948" fg:w="8"/><text x="92.3243%" y="2190.50"></text></g><g><title>&lt;module&gt; (sympy/polys/__init__.py:68) (11 samples, 0.17%)</title><rect x="92.1981%" y="1684" width="0.1703%" height="15" fill="rgb(245,209,47)" fg:x="5956" fg:w="11"/><text x="92.4481%" y="1694.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:1360) (11 samples, 0.17%)</title><rect x="92.1981%" y="1700" width="0.1703%" height="15" fill="rgb(218,220,15)" fg:x="5956" fg:w="11"/><text x="92.4481%" y="1710.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:1331) (11 samples, 0.17%)</title><rect x="92.1981%" y="1716" width="0.1703%" height="15" fill="rgb(222,202,31)" fg:x="5956" fg:w="11"/><text x="92.4481%" y="1726.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:935) (11 samples, 0.17%)</title><rect x="92.1981%" y="1732" width="0.1703%" height="15" fill="rgb(243,203,4)" fg:x="5956" fg:w="11"/><text x="92.4481%" y="1742.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:995) (11 samples, 0.17%)</title><rect x="92.1981%" y="1748" width="0.1703%" height="15" fill="rgb(237,92,17)" fg:x="5956" fg:w="11"/><text x="92.4481%" y="1758.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:488) (11 samples, 0.17%)</title><rect x="92.1981%" y="1764" width="0.1703%" height="15" fill="rgb(231,119,7)" fg:x="5956" fg:w="11"/><text x="92.4481%" y="1774.50"></text></g><g><title>&lt;module&gt; (sympy/polys/polytools.py:29) (11 samples, 0.17%)</title><rect x="92.1981%" y="1780" width="0.1703%" height="15" fill="rgb(237,82,41)" fg:x="5956" fg:w="11"/><text x="92.4481%" y="1790.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:1360) (11 samples, 0.17%)</title><rect x="92.1981%" y="1796" width="0.1703%" height="15" fill="rgb(226,81,48)" fg:x="5956" fg:w="11"/><text x="92.4481%" y="1806.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:1331) (11 samples, 0.17%)</title><rect x="92.1981%" y="1812" width="0.1703%" height="15" fill="rgb(234,70,51)" fg:x="5956" fg:w="11"/><text x="92.4481%" y="1822.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:935) (11 samples, 0.17%)</title><rect x="92.1981%" y="1828" width="0.1703%" height="15" fill="rgb(251,86,4)" fg:x="5956" fg:w="11"/><text x="92.4481%" y="1838.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:995) (11 samples, 0.17%)</title><rect x="92.1981%" y="1844" width="0.1703%" height="15" fill="rgb(244,144,28)" fg:x="5956" fg:w="11"/><text x="92.4481%" y="1854.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:488) (11 samples, 0.17%)</title><rect x="92.1981%" y="1860" width="0.1703%" height="15" fill="rgb(232,161,39)" fg:x="5956" fg:w="11"/><text x="92.4481%" y="1870.50"></text></g><g><title>&lt;module&gt; (sympy/polys/constructor.py:7) (11 samples, 0.17%)</title><rect x="92.1981%" y="1876" width="0.1703%" height="15" fill="rgb(247,34,51)" fg:x="5956" fg:w="11"/><text x="92.4481%" y="1886.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:1360) (11 samples, 0.17%)</title><rect x="92.1981%" y="1892" width="0.1703%" height="15" fill="rgb(225,132,2)" fg:x="5956" fg:w="11"/><text x="92.4481%" y="1902.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:1331) (11 samples, 0.17%)</title><rect x="92.1981%" y="1908" width="0.1703%" height="15" fill="rgb(209,159,44)" fg:x="5956" fg:w="11"/><text x="92.4481%" y="1918.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:935) (11 samples, 0.17%)</title><rect x="92.1981%" y="1924" width="0.1703%" height="15" fill="rgb(251,214,1)" fg:x="5956" fg:w="11"/><text x="92.4481%" y="1934.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:995) (11 samples, 0.17%)</title><rect x="92.1981%" y="1940" width="0.1703%" height="15" fill="rgb(247,84,47)" fg:x="5956" fg:w="11"/><text x="92.4481%" y="1950.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:488) (11 samples, 0.17%)</title><rect x="92.1981%" y="1956" width="0.1703%" height="15" fill="rgb(240,111,43)" fg:x="5956" fg:w="11"/><text x="92.4481%" y="1966.50"></text></g><g><title>&lt;module&gt; (sympy/functions/__init__.py:19) (15 samples, 0.23%)</title><rect x="92.3684%" y="2500" width="0.2322%" height="15" fill="rgb(215,214,35)" fg:x="5967" fg:w="15"/><text x="92.6184%" y="2510.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:1360) (15 samples, 0.23%)</title><rect x="92.3684%" y="2516" width="0.2322%" height="15" fill="rgb(248,207,23)" fg:x="5967" fg:w="15"/><text x="92.6184%" y="2526.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:1331) (15 samples, 0.23%)</title><rect x="92.3684%" y="2532" width="0.2322%" height="15" fill="rgb(214,186,4)" fg:x="5967" fg:w="15"/><text x="92.6184%" y="2542.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:935) (15 samples, 0.23%)</title><rect x="92.3684%" y="2548" width="0.2322%" height="15" fill="rgb(220,133,22)" fg:x="5967" fg:w="15"/><text x="92.6184%" y="2558.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:995) (15 samples, 0.23%)</title><rect x="92.3684%" y="2564" width="0.2322%" height="15" fill="rgb(239,134,19)" fg:x="5967" fg:w="15"/><text x="92.6184%" y="2574.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:488) (15 samples, 0.23%)</title><rect x="92.3684%" y="2580" width="0.2322%" height="15" fill="rgb(250,140,9)" fg:x="5967" fg:w="15"/><text x="92.6184%" y="2590.50"></text></g><g><title>&lt;module&gt; (sympy/functions/elementary/trigonometric.py:2029) (15 samples, 0.23%)</title><rect x="92.3684%" y="2596" width="0.2322%" height="15" fill="rgb(225,59,14)" fg:x="5967" fg:w="15"/><text x="92.6184%" y="2606.50"></text></g><g><title>InverseTrigonometricFunction (sympy/functions/elementary/trigonometric.py:2085) (15 samples, 0.23%)</title><rect x="92.3684%" y="2612" width="0.2322%" height="15" fill="rgb(214,152,51)" fg:x="5967" fg:w="15"/><text x="92.6184%" y="2622.50"></text></g><g><title>func_wrapper (sympy/core/cache.py:70) (15 samples, 0.23%)</title><rect x="92.3684%" y="2628" width="0.2322%" height="15" fill="rgb(251,227,43)" fg:x="5967" fg:w="15"/><text x="92.6184%" y="2638.50"></text></g><g><title>update_wrapper (functools.py:52) (15 samples, 0.23%)</title><rect x="92.3684%" y="2644" width="0.2322%" height="15" fill="rgb(241,96,17)" fg:x="5967" fg:w="15"/><text x="92.6184%" y="2654.50"></text></g><g><title>&lt;module&gt; (sympy/functions/__init__.py:31) (17 samples, 0.26%)</title><rect x="92.6471%" y="2500" width="0.2632%" height="15" fill="rgb(234,198,43)" fg:x="5985" fg:w="17"/><text x="92.8971%" y="2510.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:1360) (17 samples, 0.26%)</title><rect x="92.6471%" y="2516" width="0.2632%" height="15" fill="rgb(220,108,29)" fg:x="5985" fg:w="17"/><text x="92.8971%" y="2526.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:1331) (17 samples, 0.26%)</title><rect x="92.6471%" y="2532" width="0.2632%" height="15" fill="rgb(226,163,33)" fg:x="5985" fg:w="17"/><text x="92.8971%" y="2542.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:935) (17 samples, 0.26%)</title><rect x="92.6471%" y="2548" width="0.2632%" height="15" fill="rgb(205,194,45)" fg:x="5985" fg:w="17"/><text x="92.8971%" y="2558.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:995) (17 samples, 0.26%)</title><rect x="92.6471%" y="2564" width="0.2632%" height="15" fill="rgb(206,143,44)" fg:x="5985" fg:w="17"/><text x="92.8971%" y="2574.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:488) (17 samples, 0.26%)</title><rect x="92.6471%" y="2580" width="0.2632%" height="15" fill="rgb(236,136,36)" fg:x="5985" fg:w="17"/><text x="92.8971%" y="2590.50"></text></g><g><title>&lt;module&gt; (sympy/functions/special/gamma_functions.py:9) (7 samples, 0.11%)</title><rect x="92.8019%" y="2596" width="0.1084%" height="15" fill="rgb(249,172,42)" fg:x="5995" fg:w="7"/><text x="93.0519%" y="2606.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:1360) (7 samples, 0.11%)</title><rect x="92.8019%" y="2612" width="0.1084%" height="15" fill="rgb(216,139,23)" fg:x="5995" fg:w="7"/><text x="93.0519%" y="2622.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:1331) (7 samples, 0.11%)</title><rect x="92.8019%" y="2628" width="0.1084%" height="15" fill="rgb(207,166,20)" fg:x="5995" fg:w="7"/><text x="93.0519%" y="2638.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:935) (7 samples, 0.11%)</title><rect x="92.8019%" y="2644" width="0.1084%" height="15" fill="rgb(210,209,22)" fg:x="5995" fg:w="7"/><text x="93.0519%" y="2654.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:995) (7 samples, 0.11%)</title><rect x="92.8019%" y="2660" width="0.1084%" height="15" fill="rgb(232,118,20)" fg:x="5995" fg:w="7"/><text x="93.0519%" y="2670.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:488) (7 samples, 0.11%)</title><rect x="92.8019%" y="2676" width="0.1084%" height="15" fill="rgb(238,113,42)" fg:x="5995" fg:w="7"/><text x="93.0519%" y="2686.50"></text></g><g><title>&lt;module&gt; (sympy/functions/__init__.py:37) (8 samples, 0.12%)</title><rect x="92.9257%" y="2500" width="0.1238%" height="15" fill="rgb(231,42,5)" fg:x="6003" fg:w="8"/><text x="93.1757%" y="2510.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:1360) (8 samples, 0.12%)</title><rect x="92.9257%" y="2516" width="0.1238%" height="15" fill="rgb(243,166,24)" fg:x="6003" fg:w="8"/><text x="93.1757%" y="2526.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:1331) (8 samples, 0.12%)</title><rect x="92.9257%" y="2532" width="0.1238%" height="15" fill="rgb(237,226,12)" fg:x="6003" fg:w="8"/><text x="93.1757%" y="2542.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:935) (8 samples, 0.12%)</title><rect x="92.9257%" y="2548" width="0.1238%" height="15" fill="rgb(229,133,24)" fg:x="6003" fg:w="8"/><text x="93.1757%" y="2558.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:995) (8 samples, 0.12%)</title><rect x="92.9257%" y="2564" width="0.1238%" height="15" fill="rgb(238,33,43)" fg:x="6003" fg:w="8"/><text x="93.1757%" y="2574.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:488) (8 samples, 0.12%)</title><rect x="92.9257%" y="2580" width="0.1238%" height="15" fill="rgb(227,59,38)" fg:x="6003" fg:w="8"/><text x="93.1757%" y="2590.50"></text></g><g><title>&lt;module&gt; (sympy/functions/special/singularity_functions.py:7) (8 samples, 0.12%)</title><rect x="92.9257%" y="2596" width="0.1238%" height="15" fill="rgb(230,97,0)" fg:x="6003" fg:w="8"/><text x="93.1757%" y="2606.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:1360) (8 samples, 0.12%)</title><rect x="92.9257%" y="2612" width="0.1238%" height="15" fill="rgb(250,173,50)" fg:x="6003" fg:w="8"/><text x="93.1757%" y="2622.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:1331) (8 samples, 0.12%)</title><rect x="92.9257%" y="2628" width="0.1238%" height="15" fill="rgb(240,15,50)" fg:x="6003" fg:w="8"/><text x="93.1757%" y="2638.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:935) (8 samples, 0.12%)</title><rect x="92.9257%" y="2644" width="0.1238%" height="15" fill="rgb(221,93,22)" fg:x="6003" fg:w="8"/><text x="93.1757%" y="2654.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:995) (8 samples, 0.12%)</title><rect x="92.9257%" y="2660" width="0.1238%" height="15" fill="rgb(245,180,53)" fg:x="6003" fg:w="8"/><text x="93.1757%" y="2670.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:488) (8 samples, 0.12%)</title><rect x="92.9257%" y="2676" width="0.1238%" height="15" fill="rgb(231,88,51)" fg:x="6003" fg:w="8"/><text x="93.1757%" y="2686.50"></text></g><g><title>&lt;module&gt; (sympy/functions/special/delta_functions.py:8) (8 samples, 0.12%)</title><rect x="92.9257%" y="2692" width="0.1238%" height="15" fill="rgb(240,58,21)" fg:x="6003" fg:w="8"/><text x="93.1757%" y="2702.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:1360) (8 samples, 0.12%)</title><rect x="92.9257%" y="2708" width="0.1238%" height="15" fill="rgb(237,21,10)" fg:x="6003" fg:w="8"/><text x="93.1757%" y="2718.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:1331) (8 samples, 0.12%)</title><rect x="92.9257%" y="2724" width="0.1238%" height="15" fill="rgb(218,43,11)" fg:x="6003" fg:w="8"/><text x="93.1757%" y="2734.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:935) (8 samples, 0.12%)</title><rect x="92.9257%" y="2740" width="0.1238%" height="15" fill="rgb(218,221,29)" fg:x="6003" fg:w="8"/><text x="93.1757%" y="2750.50"></text></g><g><title>&lt;module&gt; (sympy/functions/__init__.py:39) (7 samples, 0.11%)</title><rect x="93.0495%" y="2500" width="0.1084%" height="15" fill="rgb(214,118,42)" fg:x="6011" fg:w="7"/><text x="93.2995%" y="2510.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:1360) (7 samples, 0.11%)</title><rect x="93.0495%" y="2516" width="0.1084%" height="15" fill="rgb(251,200,26)" fg:x="6011" fg:w="7"/><text x="93.2995%" y="2526.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:1331) (7 samples, 0.11%)</title><rect x="93.0495%" y="2532" width="0.1084%" height="15" fill="rgb(237,101,39)" fg:x="6011" fg:w="7"/><text x="93.2995%" y="2542.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:935) (7 samples, 0.11%)</title><rect x="93.0495%" y="2548" width="0.1084%" height="15" fill="rgb(251,117,11)" fg:x="6011" fg:w="7"/><text x="93.2995%" y="2558.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:995) (7 samples, 0.11%)</title><rect x="93.0495%" y="2564" width="0.1084%" height="15" fill="rgb(216,223,23)" fg:x="6011" fg:w="7"/><text x="93.2995%" y="2574.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:488) (7 samples, 0.11%)</title><rect x="93.0495%" y="2580" width="0.1084%" height="15" fill="rgb(251,54,12)" fg:x="6011" fg:w="7"/><text x="93.2995%" y="2590.50"></text></g><g><title>&lt;module&gt; (sympy/functions/special/bsplines.py:5) (7 samples, 0.11%)</title><rect x="93.0495%" y="2596" width="0.1084%" height="15" fill="rgb(254,176,54)" fg:x="6011" fg:w="7"/><text x="93.2995%" y="2606.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:1360) (7 samples, 0.11%)</title><rect x="93.0495%" y="2612" width="0.1084%" height="15" fill="rgb(210,32,8)" fg:x="6011" fg:w="7"/><text x="93.2995%" y="2622.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:1310) (7 samples, 0.11%)</title><rect x="93.0495%" y="2628" width="0.1084%" height="15" fill="rgb(235,52,38)" fg:x="6011" fg:w="7"/><text x="93.2995%" y="2638.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:488) (7 samples, 0.11%)</title><rect x="93.0495%" y="2644" width="0.1084%" height="15" fill="rgb(231,4,44)" fg:x="6011" fg:w="7"/><text x="93.2995%" y="2654.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:1360) (7 samples, 0.11%)</title><rect x="93.0495%" y="2660" width="0.1084%" height="15" fill="rgb(249,2,32)" fg:x="6011" fg:w="7"/><text x="93.2995%" y="2670.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:1331) (7 samples, 0.11%)</title><rect x="93.0495%" y="2676" width="0.1084%" height="15" fill="rgb(224,65,26)" fg:x="6011" fg:w="7"/><text x="93.2995%" y="2686.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:935) (7 samples, 0.11%)</title><rect x="93.0495%" y="2692" width="0.1084%" height="15" fill="rgb(250,73,40)" fg:x="6011" fg:w="7"/><text x="93.2995%" y="2702.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:995) (7 samples, 0.11%)</title><rect x="93.0495%" y="2708" width="0.1084%" height="15" fill="rgb(253,177,16)" fg:x="6011" fg:w="7"/><text x="93.2995%" y="2718.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:488) (7 samples, 0.11%)</title><rect x="93.0495%" y="2724" width="0.1084%" height="15" fill="rgb(217,32,34)" fg:x="6011" fg:w="7"/><text x="93.2995%" y="2734.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:991) (7 samples, 0.11%)</title><rect x="93.1734%" y="2564" width="0.1084%" height="15" fill="rgb(212,7,10)" fg:x="6019" fg:w="7"/><text x="93.4234%" y="2574.50"></text></g><g><title>&lt;module&gt; (sympy/polys/__init__.py:79) (81 samples, 1.25%)</title><rect x="92.3684%" y="1684" width="1.2539%" height="15" fill="rgb(245,89,8)" fg:x="5967" fg:w="81"/><text x="92.6184%" y="1694.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:1360) (81 samples, 1.25%)</title><rect x="92.3684%" y="1700" width="1.2539%" height="15" fill="rgb(237,16,53)" fg:x="5967" fg:w="81"/><text x="92.6184%" y="1710.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:1331) (81 samples, 1.25%)</title><rect x="92.3684%" y="1716" width="1.2539%" height="15" fill="rgb(250,204,30)" fg:x="5967" fg:w="81"/><text x="92.6184%" y="1726.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:935) (81 samples, 1.25%)</title><rect x="92.3684%" y="1732" width="1.2539%" height="15" fill="rgb(208,77,27)" fg:x="5967" fg:w="81"/><text x="92.6184%" y="1742.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:995) (81 samples, 1.25%)</title><rect x="92.3684%" y="1748" width="1.2539%" height="15" fill="rgb(250,204,28)" fg:x="5967" fg:w="81"/><text x="92.6184%" y="1758.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:488) (81 samples, 1.25%)</title><rect x="92.3684%" y="1764" width="1.2539%" height="15" fill="rgb(244,63,21)" fg:x="5967" fg:w="81"/><text x="92.6184%" y="1774.50"></text></g><g><title>&lt;module&gt; (sympy/polys/polyfuncs.py:10) (81 samples, 1.25%)</title><rect x="92.3684%" y="1780" width="1.2539%" height="15" fill="rgb(236,85,44)" fg:x="5967" fg:w="81"/><text x="92.6184%" y="1790.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:1360) (81 samples, 1.25%)</title><rect x="92.3684%" y="1796" width="1.2539%" height="15" fill="rgb(215,98,4)" fg:x="5967" fg:w="81"/><text x="92.6184%" y="1806.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:1331) (81 samples, 1.25%)</title><rect x="92.3684%" y="1812" width="1.2539%" height="15" fill="rgb(235,38,11)" fg:x="5967" fg:w="81"/><text x="92.6184%" y="1822.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:935) (81 samples, 1.25%)</title><rect x="92.3684%" y="1828" width="1.2539%" height="15" fill="rgb(254,186,25)" fg:x="5967" fg:w="81"/><text x="92.6184%" y="1838.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:995) (81 samples, 1.25%)</title><rect x="92.3684%" y="1844" width="1.2539%" height="15" fill="rgb(225,55,31)" fg:x="5967" fg:w="81"/><text x="92.6184%" y="1854.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:488) (81 samples, 1.25%)</title><rect x="92.3684%" y="1860" width="1.2539%" height="15" fill="rgb(211,15,21)" fg:x="5967" fg:w="81"/><text x="92.6184%" y="1870.50"></text></g><g><title>&lt;module&gt; (sympy/polys/specialpolys.py:298) (81 samples, 1.25%)</title><rect x="92.3684%" y="1876" width="1.2539%" height="15" fill="rgb(215,187,41)" fg:x="5967" fg:w="81"/><text x="92.6184%" y="1886.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:1360) (81 samples, 1.25%)</title><rect x="92.3684%" y="1892" width="1.2539%" height="15" fill="rgb(248,69,32)" fg:x="5967" fg:w="81"/><text x="92.6184%" y="1902.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:1331) (81 samples, 1.25%)</title><rect x="92.3684%" y="1908" width="1.2539%" height="15" fill="rgb(252,102,52)" fg:x="5967" fg:w="81"/><text x="92.6184%" y="1918.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:935) (81 samples, 1.25%)</title><rect x="92.3684%" y="1924" width="1.2539%" height="15" fill="rgb(253,140,32)" fg:x="5967" fg:w="81"/><text x="92.6184%" y="1934.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:995) (81 samples, 1.25%)</title><rect x="92.3684%" y="1940" width="1.2539%" height="15" fill="rgb(216,56,42)" fg:x="5967" fg:w="81"/><text x="92.6184%" y="1950.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:488) (81 samples, 1.25%)</title><rect x="92.3684%" y="1956" width="1.2539%" height="15" fill="rgb(216,184,14)" fg:x="5967" fg:w="81"/><text x="92.6184%" y="1966.50"></text></g><g><title>&lt;module&gt; (sympy/polys/rings.py:31) (81 samples, 1.25%)</title><rect x="92.3684%" y="1972" width="1.2539%" height="15" fill="rgb(237,187,27)" fg:x="5967" fg:w="81"/><text x="92.6184%" y="1982.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:1360) (81 samples, 1.25%)</title><rect x="92.3684%" y="1988" width="1.2539%" height="15" fill="rgb(219,65,3)" fg:x="5967" fg:w="81"/><text x="92.6184%" y="1998.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:1310) (81 samples, 1.25%)</title><rect x="92.3684%" y="2004" width="1.2539%" height="15" fill="rgb(245,83,25)" fg:x="5967" fg:w="81"/><text x="92.6184%" y="2014.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:488) (81 samples, 1.25%)</title><rect x="92.3684%" y="2020" width="1.2539%" height="15" fill="rgb(214,205,45)" fg:x="5967" fg:w="81"/><text x="92.6184%" y="2030.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:1360) (81 samples, 1.25%)</title><rect x="92.3684%" y="2036" width="1.2539%" height="15" fill="rgb(241,20,18)" fg:x="5967" fg:w="81"/><text x="92.6184%" y="2046.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:1331) (81 samples, 1.25%)</title><rect x="92.3684%" y="2052" width="1.2539%" height="15" fill="rgb(232,163,23)" fg:x="5967" fg:w="81"/><text x="92.6184%" y="2062.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:935) (81 samples, 1.25%)</title><rect x="92.3684%" y="2068" width="1.2539%" height="15" fill="rgb(214,5,46)" fg:x="5967" fg:w="81"/><text x="92.6184%" y="2078.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:995) (81 samples, 1.25%)</title><rect x="92.3684%" y="2084" width="1.2539%" height="15" fill="rgb(229,78,17)" fg:x="5967" fg:w="81"/><text x="92.6184%" y="2094.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:488) (81 samples, 1.25%)</title><rect x="92.3684%" y="2100" width="1.2539%" height="15" fill="rgb(248,89,10)" fg:x="5967" fg:w="81"/><text x="92.6184%" y="2110.50"></text></g><g><title>&lt;module&gt; (sympy/printing/__init__.py:11) (81 samples, 1.25%)</title><rect x="92.3684%" y="2116" width="1.2539%" height="15" fill="rgb(248,54,15)" fg:x="5967" fg:w="81"/><text x="92.6184%" y="2126.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:1360) (81 samples, 1.25%)</title><rect x="92.3684%" y="2132" width="1.2539%" height="15" fill="rgb(223,116,6)" fg:x="5967" fg:w="81"/><text x="92.6184%" y="2142.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:1331) (81 samples, 1.25%)</title><rect x="92.3684%" y="2148" width="1.2539%" height="15" fill="rgb(205,125,38)" fg:x="5967" fg:w="81"/><text x="92.6184%" y="2158.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:935) (81 samples, 1.25%)</title><rect x="92.3684%" y="2164" width="1.2539%" height="15" fill="rgb(251,78,38)" fg:x="5967" fg:w="81"/><text x="92.6184%" y="2174.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:995) (81 samples, 1.25%)</title><rect x="92.3684%" y="2180" width="1.2539%" height="15" fill="rgb(253,78,28)" fg:x="5967" fg:w="81"/><text x="92.6184%" y="2190.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:488) (81 samples, 1.25%)</title><rect x="92.3684%" y="2196" width="1.2539%" height="15" fill="rgb(209,120,3)" fg:x="5967" fg:w="81"/><text x="92.6184%" y="2206.50"></text></g><g><title>&lt;module&gt; (sympy/printing/pycode.py:11) (81 samples, 1.25%)</title><rect x="92.3684%" y="2212" width="1.2539%" height="15" fill="rgb(238,229,9)" fg:x="5967" fg:w="81"/><text x="92.6184%" y="2222.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:1360) (81 samples, 1.25%)</title><rect x="92.3684%" y="2228" width="1.2539%" height="15" fill="rgb(253,159,18)" fg:x="5967" fg:w="81"/><text x="92.6184%" y="2238.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:1331) (81 samples, 1.25%)</title><rect x="92.3684%" y="2244" width="1.2539%" height="15" fill="rgb(244,42,34)" fg:x="5967" fg:w="81"/><text x="92.6184%" y="2254.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:935) (81 samples, 1.25%)</title><rect x="92.3684%" y="2260" width="1.2539%" height="15" fill="rgb(224,8,7)" fg:x="5967" fg:w="81"/><text x="92.6184%" y="2270.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:995) (81 samples, 1.25%)</title><rect x="92.3684%" y="2276" width="1.2539%" height="15" fill="rgb(210,201,45)" fg:x="5967" fg:w="81"/><text x="92.6184%" y="2286.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:488) (81 samples, 1.25%)</title><rect x="92.3684%" y="2292" width="1.2539%" height="15" fill="rgb(252,185,21)" fg:x="5967" fg:w="81"/><text x="92.6184%" y="2302.50"></text></g><g><title>&lt;module&gt; (sympy/printing/codeprinter.py:13) (81 samples, 1.25%)</title><rect x="92.3684%" y="2308" width="1.2539%" height="15" fill="rgb(223,131,1)" fg:x="5967" fg:w="81"/><text x="92.6184%" y="2318.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:1360) (81 samples, 1.25%)</title><rect x="92.3684%" y="2324" width="1.2539%" height="15" fill="rgb(245,141,16)" fg:x="5967" fg:w="81"/><text x="92.6184%" y="2334.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:1310) (81 samples, 1.25%)</title><rect x="92.3684%" y="2340" width="1.2539%" height="15" fill="rgb(229,55,45)" fg:x="5967" fg:w="81"/><text x="92.6184%" y="2350.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:488) (81 samples, 1.25%)</title><rect x="92.3684%" y="2356" width="1.2539%" height="15" fill="rgb(208,92,15)" fg:x="5967" fg:w="81"/><text x="92.6184%" y="2366.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:1360) (81 samples, 1.25%)</title><rect x="92.3684%" y="2372" width="1.2539%" height="15" fill="rgb(234,185,47)" fg:x="5967" fg:w="81"/><text x="92.6184%" y="2382.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:1310) (81 samples, 1.25%)</title><rect x="92.3684%" y="2388" width="1.2539%" height="15" fill="rgb(253,104,50)" fg:x="5967" fg:w="81"/><text x="92.6184%" y="2398.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:488) (81 samples, 1.25%)</title><rect x="92.3684%" y="2404" width="1.2539%" height="15" fill="rgb(205,70,7)" fg:x="5967" fg:w="81"/><text x="92.6184%" y="2414.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:1360) (81 samples, 1.25%)</title><rect x="92.3684%" y="2420" width="1.2539%" height="15" fill="rgb(240,178,43)" fg:x="5967" fg:w="81"/><text x="92.6184%" y="2430.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:1331) (81 samples, 1.25%)</title><rect x="92.3684%" y="2436" width="1.2539%" height="15" fill="rgb(214,112,2)" fg:x="5967" fg:w="81"/><text x="92.6184%" y="2446.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:935) (81 samples, 1.25%)</title><rect x="92.3684%" y="2452" width="1.2539%" height="15" fill="rgb(206,46,17)" fg:x="5967" fg:w="81"/><text x="92.6184%" y="2462.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:995) (81 samples, 1.25%)</title><rect x="92.3684%" y="2468" width="1.2539%" height="15" fill="rgb(225,220,16)" fg:x="5967" fg:w="81"/><text x="92.6184%" y="2478.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:488) (81 samples, 1.25%)</title><rect x="92.3684%" y="2484" width="1.2539%" height="15" fill="rgb(238,65,40)" fg:x="5967" fg:w="81"/><text x="92.6184%" y="2494.50"></text></g><g><title>&lt;module&gt; (sympy/functions/__init__.py:40) (30 samples, 0.46%)</title><rect x="93.1579%" y="2500" width="0.4644%" height="15" fill="rgb(230,151,21)" fg:x="6018" fg:w="30"/><text x="93.4079%" y="2510.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:1360) (30 samples, 0.46%)</title><rect x="93.1579%" y="2516" width="0.4644%" height="15" fill="rgb(218,58,49)" fg:x="6018" fg:w="30"/><text x="93.4079%" y="2526.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:1331) (29 samples, 0.45%)</title><rect x="93.1734%" y="2532" width="0.4489%" height="15" fill="rgb(219,179,14)" fg:x="6019" fg:w="29"/><text x="93.4234%" y="2542.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:935) (29 samples, 0.45%)</title><rect x="93.1734%" y="2548" width="0.4489%" height="15" fill="rgb(223,72,1)" fg:x="6019" fg:w="29"/><text x="93.4234%" y="2558.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:995) (22 samples, 0.34%)</title><rect x="93.2817%" y="2564" width="0.3406%" height="15" fill="rgb(238,126,10)" fg:x="6026" fg:w="22"/><text x="93.5317%" y="2574.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:488) (22 samples, 0.34%)</title><rect x="93.2817%" y="2580" width="0.3406%" height="15" fill="rgb(224,206,38)" fg:x="6026" fg:w="22"/><text x="93.5317%" y="2590.50"></text></g><g><title>&lt;module&gt; (sympy/polys/matrices/ddm.py:1175) (8 samples, 0.12%)</title><rect x="93.6687%" y="2212" width="0.1238%" height="15" fill="rgb(212,201,54)" fg:x="6051" fg:w="8"/><text x="93.9187%" y="2222.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:1360) (8 samples, 0.12%)</title><rect x="93.6687%" y="2228" width="0.1238%" height="15" fill="rgb(218,154,48)" fg:x="6051" fg:w="8"/><text x="93.9187%" y="2238.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:1331) (8 samples, 0.12%)</title><rect x="93.6687%" y="2244" width="0.1238%" height="15" fill="rgb(232,93,24)" fg:x="6051" fg:w="8"/><text x="93.9187%" y="2254.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:935) (8 samples, 0.12%)</title><rect x="93.6687%" y="2260" width="0.1238%" height="15" fill="rgb(245,30,21)" fg:x="6051" fg:w="8"/><text x="93.9187%" y="2270.50"></text></g><g><title>&lt;module&gt; (sympy/polys/numberfields/utilities.py:7) (12 samples, 0.19%)</title><rect x="93.6533%" y="1876" width="0.1858%" height="15" fill="rgb(242,148,29)" fg:x="6050" fg:w="12"/><text x="93.9033%" y="1886.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:1360) (12 samples, 0.19%)</title><rect x="93.6533%" y="1892" width="0.1858%" height="15" fill="rgb(244,153,54)" fg:x="6050" fg:w="12"/><text x="93.9033%" y="1902.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:1310) (12 samples, 0.19%)</title><rect x="93.6533%" y="1908" width="0.1858%" height="15" fill="rgb(252,87,22)" fg:x="6050" fg:w="12"/><text x="93.9033%" y="1918.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:488) (12 samples, 0.19%)</title><rect x="93.6533%" y="1924" width="0.1858%" height="15" fill="rgb(210,51,29)" fg:x="6050" fg:w="12"/><text x="93.9033%" y="1934.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:1360) (12 samples, 0.19%)</title><rect x="93.6533%" y="1940" width="0.1858%" height="15" fill="rgb(242,136,47)" fg:x="6050" fg:w="12"/><text x="93.9033%" y="1950.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:1331) (11 samples, 0.17%)</title><rect x="93.6687%" y="1956" width="0.1703%" height="15" fill="rgb(238,68,4)" fg:x="6051" fg:w="11"/><text x="93.9187%" y="1966.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:935) (11 samples, 0.17%)</title><rect x="93.6687%" y="1972" width="0.1703%" height="15" fill="rgb(242,161,30)" fg:x="6051" fg:w="11"/><text x="93.9187%" y="1982.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:995) (11 samples, 0.17%)</title><rect x="93.6687%" y="1988" width="0.1703%" height="15" fill="rgb(218,58,44)" fg:x="6051" fg:w="11"/><text x="93.9187%" y="1998.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:488) (11 samples, 0.17%)</title><rect x="93.6687%" y="2004" width="0.1703%" height="15" fill="rgb(252,125,32)" fg:x="6051" fg:w="11"/><text x="93.9187%" y="2014.50"></text></g><g><title>&lt;module&gt; (sympy/polys/matrices/__init__.py:11) (11 samples, 0.17%)</title><rect x="93.6687%" y="2020" width="0.1703%" height="15" fill="rgb(219,178,0)" fg:x="6051" fg:w="11"/><text x="93.9187%" y="2030.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:1360) (11 samples, 0.17%)</title><rect x="93.6687%" y="2036" width="0.1703%" height="15" fill="rgb(213,152,7)" fg:x="6051" fg:w="11"/><text x="93.9187%" y="2046.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:1331) (11 samples, 0.17%)</title><rect x="93.6687%" y="2052" width="0.1703%" height="15" fill="rgb(249,109,34)" fg:x="6051" fg:w="11"/><text x="93.9187%" y="2062.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:935) (11 samples, 0.17%)</title><rect x="93.6687%" y="2068" width="0.1703%" height="15" fill="rgb(232,96,21)" fg:x="6051" fg:w="11"/><text x="93.9187%" y="2078.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:995) (11 samples, 0.17%)</title><rect x="93.6687%" y="2084" width="0.1703%" height="15" fill="rgb(228,27,39)" fg:x="6051" fg:w="11"/><text x="93.9187%" y="2094.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:488) (11 samples, 0.17%)</title><rect x="93.6687%" y="2100" width="0.1703%" height="15" fill="rgb(211,182,52)" fg:x="6051" fg:w="11"/><text x="93.9187%" y="2110.50"></text></g><g><title>&lt;module&gt; (sympy/polys/matrices/domainmatrix.py:52) (11 samples, 0.17%)</title><rect x="93.6687%" y="2116" width="0.1703%" height="15" fill="rgb(234,178,38)" fg:x="6051" fg:w="11"/><text x="93.9187%" y="2126.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:1360) (11 samples, 0.17%)</title><rect x="93.6687%" y="2132" width="0.1703%" height="15" fill="rgb(221,111,3)" fg:x="6051" fg:w="11"/><text x="93.9187%" y="2142.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:1331) (11 samples, 0.17%)</title><rect x="93.6687%" y="2148" width="0.1703%" height="15" fill="rgb(228,175,21)" fg:x="6051" fg:w="11"/><text x="93.9187%" y="2158.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:935) (11 samples, 0.17%)</title><rect x="93.6687%" y="2164" width="0.1703%" height="15" fill="rgb(228,174,43)" fg:x="6051" fg:w="11"/><text x="93.9187%" y="2174.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:995) (11 samples, 0.17%)</title><rect x="93.6687%" y="2180" width="0.1703%" height="15" fill="rgb(211,191,0)" fg:x="6051" fg:w="11"/><text x="93.9187%" y="2190.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:488) (11 samples, 0.17%)</title><rect x="93.6687%" y="2196" width="0.1703%" height="15" fill="rgb(253,117,3)" fg:x="6051" fg:w="11"/><text x="93.9187%" y="2206.50"></text></g><g><title>&lt;module&gt; (sympy/polys/numberfields/__init__.py:21) (15 samples, 0.23%)</title><rect x="93.6223%" y="1780" width="0.2322%" height="15" fill="rgb(241,127,19)" fg:x="6048" fg:w="15"/><text x="93.8723%" y="1790.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:1360) (15 samples, 0.23%)</title><rect x="93.6223%" y="1796" width="0.2322%" height="15" fill="rgb(218,103,12)" fg:x="6048" fg:w="15"/><text x="93.8723%" y="1806.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:1331) (15 samples, 0.23%)</title><rect x="93.6223%" y="1812" width="0.2322%" height="15" fill="rgb(236,214,43)" fg:x="6048" fg:w="15"/><text x="93.8723%" y="1822.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:935) (15 samples, 0.23%)</title><rect x="93.6223%" y="1828" width="0.2322%" height="15" fill="rgb(244,144,19)" fg:x="6048" fg:w="15"/><text x="93.8723%" y="1838.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:995) (14 samples, 0.22%)</title><rect x="93.6378%" y="1844" width="0.2167%" height="15" fill="rgb(246,188,10)" fg:x="6049" fg:w="14"/><text x="93.8878%" y="1854.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:488) (14 samples, 0.22%)</title><rect x="93.6378%" y="1860" width="0.2167%" height="15" fill="rgb(212,193,33)" fg:x="6049" fg:w="14"/><text x="93.8878%" y="1870.50"></text></g><g><title>&lt;module&gt; (torch/fx/experimental/symbolic_shapes.py:67) (220 samples, 3.41%)</title><rect x="90.4954%" y="1396" width="3.4056%" height="15" fill="rgb(241,51,29)" fg:x="5846" fg:w="220"/><text x="90.7454%" y="1406.50">&lt;mo..</text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:1360) (220 samples, 3.41%)</title><rect x="90.4954%" y="1412" width="3.4056%" height="15" fill="rgb(211,58,19)" fg:x="5846" fg:w="220"/><text x="90.7454%" y="1422.50">_fi..</text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:1331) (218 samples, 3.37%)</title><rect x="90.5263%" y="1428" width="3.3746%" height="15" fill="rgb(229,111,26)" fg:x="5848" fg:w="218"/><text x="90.7763%" y="1438.50">_fi..</text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:935) (218 samples, 3.37%)</title><rect x="90.5263%" y="1444" width="3.3746%" height="15" fill="rgb(213,115,40)" fg:x="5848" fg:w="218"/><text x="90.7763%" y="1454.50">_lo..</text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:995) (216 samples, 3.34%)</title><rect x="90.5573%" y="1460" width="3.3437%" height="15" fill="rgb(209,56,44)" fg:x="5850" fg:w="216"/><text x="90.8073%" y="1470.50">exe..</text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:488) (216 samples, 3.34%)</title><rect x="90.5573%" y="1476" width="3.3437%" height="15" fill="rgb(230,108,32)" fg:x="5850" fg:w="216"/><text x="90.8073%" y="1486.50">_ca..</text></g><g><title>&lt;module&gt; (torch/utils/_sympy/functions.py:9) (216 samples, 3.34%)</title><rect x="90.5573%" y="1492" width="3.3437%" height="15" fill="rgb(216,165,31)" fg:x="5850" fg:w="216"/><text x="90.8073%" y="1502.50">&lt;mo..</text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:1360) (216 samples, 3.34%)</title><rect x="90.5573%" y="1508" width="3.3437%" height="15" fill="rgb(218,122,21)" fg:x="5850" fg:w="216"/><text x="90.8073%" y="1518.50">_fi..</text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:1331) (216 samples, 3.34%)</title><rect x="90.5573%" y="1524" width="3.3437%" height="15" fill="rgb(223,224,47)" fg:x="5850" fg:w="216"/><text x="90.8073%" y="1534.50">_fi..</text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:935) (216 samples, 3.34%)</title><rect x="90.5573%" y="1540" width="3.3437%" height="15" fill="rgb(238,102,44)" fg:x="5850" fg:w="216"/><text x="90.8073%" y="1550.50">_lo..</text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:995) (216 samples, 3.34%)</title><rect x="90.5573%" y="1556" width="3.3437%" height="15" fill="rgb(236,46,40)" fg:x="5850" fg:w="216"/><text x="90.8073%" y="1566.50">exe..</text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:488) (216 samples, 3.34%)</title><rect x="90.5573%" y="1572" width="3.3437%" height="15" fill="rgb(247,202,50)" fg:x="5850" fg:w="216"/><text x="90.8073%" y="1582.50">_ca..</text></g><g><title>&lt;module&gt; (sympy/__init__.py:77) (122 samples, 1.89%)</title><rect x="92.0124%" y="1588" width="1.8885%" height="15" fill="rgb(209,99,20)" fg:x="5944" fg:w="122"/><text x="92.2624%" y="1598.50">&lt;..</text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:1360) (122 samples, 1.89%)</title><rect x="92.0124%" y="1604" width="1.8885%" height="15" fill="rgb(252,27,34)" fg:x="5944" fg:w="122"/><text x="92.2624%" y="1614.50">_..</text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:1331) (122 samples, 1.89%)</title><rect x="92.0124%" y="1620" width="1.8885%" height="15" fill="rgb(215,206,23)" fg:x="5944" fg:w="122"/><text x="92.2624%" y="1630.50">_..</text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:935) (122 samples, 1.89%)</title><rect x="92.0124%" y="1636" width="1.8885%" height="15" fill="rgb(212,135,36)" fg:x="5944" fg:w="122"/><text x="92.2624%" y="1646.50">_..</text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:995) (122 samples, 1.89%)</title><rect x="92.0124%" y="1652" width="1.8885%" height="15" fill="rgb(240,189,1)" fg:x="5944" fg:w="122"/><text x="92.2624%" y="1662.50">e..</text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:488) (122 samples, 1.89%)</title><rect x="92.0124%" y="1668" width="1.8885%" height="15" fill="rgb(242,56,20)" fg:x="5944" fg:w="122"/><text x="92.2624%" y="1678.50">_..</text></g><g><title>&lt;module&gt; (sympy/polys/__init__.py:94) (18 samples, 0.28%)</title><rect x="93.6223%" y="1684" width="0.2786%" height="15" fill="rgb(247,132,33)" fg:x="6048" fg:w="18"/><text x="93.8723%" y="1694.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:1360) (18 samples, 0.28%)</title><rect x="93.6223%" y="1700" width="0.2786%" height="15" fill="rgb(208,149,11)" fg:x="6048" fg:w="18"/><text x="93.8723%" y="1710.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:1331) (18 samples, 0.28%)</title><rect x="93.6223%" y="1716" width="0.2786%" height="15" fill="rgb(211,33,11)" fg:x="6048" fg:w="18"/><text x="93.8723%" y="1726.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:935) (18 samples, 0.28%)</title><rect x="93.6223%" y="1732" width="0.2786%" height="15" fill="rgb(221,29,38)" fg:x="6048" fg:w="18"/><text x="93.8723%" y="1742.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:995) (18 samples, 0.28%)</title><rect x="93.6223%" y="1748" width="0.2786%" height="15" fill="rgb(206,182,49)" fg:x="6048" fg:w="18"/><text x="93.8723%" y="1758.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:488) (18 samples, 0.28%)</title><rect x="93.6223%" y="1764" width="0.2786%" height="15" fill="rgb(216,140,1)" fg:x="6048" fg:w="18"/><text x="93.8723%" y="1774.50"></text></g><g><title>&lt;module&gt; (torch/_dynamo/symbolic_convert.py:52) (254 samples, 3.93%)</title><rect x="90.0619%" y="1108" width="3.9319%" height="15" fill="rgb(232,57,40)" fg:x="5818" fg:w="254"/><text x="90.3119%" y="1118.50">&lt;mod..</text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:1360) (254 samples, 3.93%)</title><rect x="90.0619%" y="1124" width="3.9319%" height="15" fill="rgb(224,186,18)" fg:x="5818" fg:w="254"/><text x="90.3119%" y="1134.50">_fin..</text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:1331) (254 samples, 3.93%)</title><rect x="90.0619%" y="1140" width="3.9319%" height="15" fill="rgb(215,121,11)" fg:x="5818" fg:w="254"/><text x="90.3119%" y="1150.50">_fin..</text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:935) (254 samples, 3.93%)</title><rect x="90.0619%" y="1156" width="3.9319%" height="15" fill="rgb(245,147,10)" fg:x="5818" fg:w="254"/><text x="90.3119%" y="1166.50">_loa..</text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:995) (254 samples, 3.93%)</title><rect x="90.0619%" y="1172" width="3.9319%" height="15" fill="rgb(238,153,13)" fg:x="5818" fg:w="254"/><text x="90.3119%" y="1182.50">exec..</text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:488) (254 samples, 3.93%)</title><rect x="90.0619%" y="1188" width="3.9319%" height="15" fill="rgb(233,108,0)" fg:x="5818" fg:w="254"/><text x="90.3119%" y="1198.50">_cal..</text></g><g><title>&lt;module&gt; (torch/_dynamo/exc.py:41) (254 samples, 3.93%)</title><rect x="90.0619%" y="1204" width="3.9319%" height="15" fill="rgb(212,157,17)" fg:x="5818" fg:w="254"/><text x="90.3119%" y="1214.50">&lt;mod..</text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:1360) (254 samples, 3.93%)</title><rect x="90.0619%" y="1220" width="3.9319%" height="15" fill="rgb(225,213,38)" fg:x="5818" fg:w="254"/><text x="90.3119%" y="1230.50">_fin..</text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:1331) (254 samples, 3.93%)</title><rect x="90.0619%" y="1236" width="3.9319%" height="15" fill="rgb(248,16,11)" fg:x="5818" fg:w="254"/><text x="90.3119%" y="1246.50">_fin..</text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:935) (254 samples, 3.93%)</title><rect x="90.0619%" y="1252" width="3.9319%" height="15" fill="rgb(241,33,4)" fg:x="5818" fg:w="254"/><text x="90.3119%" y="1262.50">_loa..</text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:995) (252 samples, 3.90%)</title><rect x="90.0929%" y="1268" width="3.9009%" height="15" fill="rgb(222,26,43)" fg:x="5820" fg:w="252"/><text x="90.3429%" y="1278.50">exec..</text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:488) (252 samples, 3.90%)</title><rect x="90.0929%" y="1284" width="3.9009%" height="15" fill="rgb(243,29,36)" fg:x="5820" fg:w="252"/><text x="90.3429%" y="1294.50">_cal..</text></g><g><title>&lt;module&gt; (torch/_dynamo/utils.py:69) (227 samples, 3.51%)</title><rect x="90.4799%" y="1300" width="3.5139%" height="15" fill="rgb(241,9,27)" fg:x="5845" fg:w="227"/><text x="90.7299%" y="1310.50">&lt;mo..</text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:1360) (227 samples, 3.51%)</title><rect x="90.4799%" y="1316" width="3.5139%" height="15" fill="rgb(205,117,26)" fg:x="5845" fg:w="227"/><text x="90.7299%" y="1326.50">_fi..</text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:1331) (227 samples, 3.51%)</title><rect x="90.4799%" y="1332" width="3.5139%" height="15" fill="rgb(209,80,39)" fg:x="5845" fg:w="227"/><text x="90.7299%" y="1342.50">_fi..</text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:935) (227 samples, 3.51%)</title><rect x="90.4799%" y="1348" width="3.5139%" height="15" fill="rgb(239,155,6)" fg:x="5845" fg:w="227"/><text x="90.7299%" y="1358.50">_lo..</text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:995) (227 samples, 3.51%)</title><rect x="90.4799%" y="1364" width="3.5139%" height="15" fill="rgb(212,104,12)" fg:x="5845" fg:w="227"/><text x="90.7299%" y="1374.50">exe..</text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:488) (227 samples, 3.51%)</title><rect x="90.4799%" y="1380" width="3.5139%" height="15" fill="rgb(234,204,3)" fg:x="5845" fg:w="227"/><text x="90.7299%" y="1390.50">_ca..</text></g><g><title>&lt;module&gt; (torch/_dynamo/source.py:288) (9 samples, 0.14%)</title><rect x="94.0712%" y="1620" width="0.1393%" height="15" fill="rgb(251,218,7)" fg:x="6077" fg:w="9"/><text x="94.3212%" y="1630.50"></text></g><g><title>wrap (dataclasses.py:1258) (9 samples, 0.14%)</title><rect x="94.0712%" y="1636" width="0.1393%" height="15" fill="rgb(221,81,32)" fg:x="6077" fg:w="9"/><text x="94.3212%" y="1646.50"></text></g><g><title>&lt;module&gt; (torch/_dynamo/source.py:661) (8 samples, 0.12%)</title><rect x="94.4737%" y="1620" width="0.1238%" height="15" fill="rgb(214,152,26)" fg:x="6103" fg:w="8"/><text x="94.7237%" y="1630.50"></text></g><g><title>wrap (dataclasses.py:1258) (8 samples, 0.12%)</title><rect x="94.4737%" y="1636" width="0.1238%" height="15" fill="rgb(223,22,3)" fg:x="6103" fg:w="8"/><text x="94.7237%" y="1646.50"></text></g><g><title>&lt;module&gt; (torch/_dynamo/variables/base.py:26) (47 samples, 0.73%)</title><rect x="94.0248%" y="1428" width="0.7276%" height="15" fill="rgb(207,174,7)" fg:x="6074" fg:w="47"/><text x="94.2748%" y="1438.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:1360) (47 samples, 0.73%)</title><rect x="94.0248%" y="1444" width="0.7276%" height="15" fill="rgb(224,19,52)" fg:x="6074" fg:w="47"/><text x="94.2748%" y="1454.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:1331) (47 samples, 0.73%)</title><rect x="94.0248%" y="1460" width="0.7276%" height="15" fill="rgb(228,24,14)" fg:x="6074" fg:w="47"/><text x="94.2748%" y="1470.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:935) (47 samples, 0.73%)</title><rect x="94.0248%" y="1476" width="0.7276%" height="15" fill="rgb(230,153,43)" fg:x="6074" fg:w="47"/><text x="94.2748%" y="1486.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:995) (47 samples, 0.73%)</title><rect x="94.0248%" y="1492" width="0.7276%" height="15" fill="rgb(231,106,12)" fg:x="6074" fg:w="47"/><text x="94.2748%" y="1502.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:488) (47 samples, 0.73%)</title><rect x="94.0248%" y="1508" width="0.7276%" height="15" fill="rgb(215,92,2)" fg:x="6074" fg:w="47"/><text x="94.2748%" y="1518.50"></text></g><g><title>&lt;module&gt; (torch/_dynamo/guards.py:59) (47 samples, 0.73%)</title><rect x="94.0248%" y="1524" width="0.7276%" height="15" fill="rgb(249,143,25)" fg:x="6074" fg:w="47"/><text x="94.2748%" y="1534.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:1360) (47 samples, 0.73%)</title><rect x="94.0248%" y="1540" width="0.7276%" height="15" fill="rgb(252,7,35)" fg:x="6074" fg:w="47"/><text x="94.2748%" y="1550.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:1331) (47 samples, 0.73%)</title><rect x="94.0248%" y="1556" width="0.7276%" height="15" fill="rgb(216,69,40)" fg:x="6074" fg:w="47"/><text x="94.2748%" y="1566.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:935) (47 samples, 0.73%)</title><rect x="94.0248%" y="1572" width="0.7276%" height="15" fill="rgb(240,36,33)" fg:x="6074" fg:w="47"/><text x="94.2748%" y="1582.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:995) (47 samples, 0.73%)</title><rect x="94.0248%" y="1588" width="0.7276%" height="15" fill="rgb(231,128,14)" fg:x="6074" fg:w="47"/><text x="94.2748%" y="1598.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:488) (47 samples, 0.73%)</title><rect x="94.0248%" y="1604" width="0.7276%" height="15" fill="rgb(245,143,14)" fg:x="6074" fg:w="47"/><text x="94.2748%" y="1614.50"></text></g><g><title>&lt;module&gt; (torch/distributed/tensor/placement_types.py:10) (13 samples, 0.20%)</title><rect x="94.8452%" y="2756" width="0.2012%" height="15" fill="rgb(222,130,28)" fg:x="6127" fg:w="13"/><text x="95.0952%" y="2766.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:1360) (13 samples, 0.20%)</title><rect x="94.8452%" y="2772" width="0.2012%" height="15" fill="rgb(212,10,48)" fg:x="6127" fg:w="13"/><text x="95.0952%" y="2782.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:1331) (13 samples, 0.20%)</title><rect x="94.8452%" y="2788" width="0.2012%" height="15" fill="rgb(254,118,45)" fg:x="6127" fg:w="13"/><text x="95.0952%" y="2798.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:935) (13 samples, 0.20%)</title><rect x="94.8452%" y="2804" width="0.2012%" height="15" fill="rgb(228,6,45)" fg:x="6127" fg:w="13"/><text x="95.0952%" y="2814.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:995) (13 samples, 0.20%)</title><rect x="94.8452%" y="2820" width="0.2012%" height="15" fill="rgb(241,18,35)" fg:x="6127" fg:w="13"/><text x="95.0952%" y="2830.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:488) (13 samples, 0.20%)</title><rect x="94.8452%" y="2836" width="0.2012%" height="15" fill="rgb(227,214,53)" fg:x="6127" fg:w="13"/><text x="95.0952%" y="2846.50"></text></g><g><title>&lt;module&gt; (torch/distributed/tensor/_collective_utils.py:29) (12 samples, 0.19%)</title><rect x="94.8607%" y="2852" width="0.1858%" height="15" fill="rgb(224,107,51)" fg:x="6128" fg:w="12"/><text x="95.1107%" y="2862.50"></text></g><g><title>register (torch/library.py:1023) (12 samples, 0.19%)</title><rect x="94.8607%" y="2868" width="0.1858%" height="15" fill="rgb(248,60,28)" fg:x="6128" fg:w="12"/><text x="95.1107%" y="2878.50"></text></g><g><title>_register_fake (torch/library.py:193) (12 samples, 0.19%)</title><rect x="94.8607%" y="2884" width="0.1858%" height="15" fill="rgb(249,101,23)" fg:x="6128" fg:w="12"/><text x="95.1107%" y="2894.50"></text></g><g><title>get_source (torch/_library/utils.py:54) (12 samples, 0.19%)</title><rect x="94.8607%" y="2900" width="0.1858%" height="15" fill="rgb(228,51,19)" fg:x="6128" fg:w="12"/><text x="95.1107%" y="2910.50"></text></g><g><title>getframeinfo (inspect.py:1707) (12 samples, 0.19%)</title><rect x="94.8607%" y="2916" width="0.1858%" height="15" fill="rgb(213,20,6)" fg:x="6128" fg:w="12"/><text x="95.1107%" y="2926.50"></text></g><g><title>findsource (inspect.py:1083) (12 samples, 0.19%)</title><rect x="94.8607%" y="2932" width="0.1858%" height="15" fill="rgb(212,124,10)" fg:x="6128" fg:w="12"/><text x="95.1107%" y="2942.50"></text></g><g><title>getmodule (inspect.py:1009) (10 samples, 0.15%)</title><rect x="94.8916%" y="2948" width="0.1548%" height="15" fill="rgb(248,3,40)" fg:x="6130" fg:w="10"/><text x="95.1416%" y="2958.50"></text></g><g><title>realpath (&lt;frozen posixpath&gt;:435) (10 samples, 0.15%)</title><rect x="94.8916%" y="2964" width="0.1548%" height="15" fill="rgb(223,178,23)" fg:x="6130" fg:w="10"/><text x="95.1416%" y="2974.50"></text></g><g><title>_joinrealpath (&lt;frozen posixpath&gt;:470) (10 samples, 0.15%)</title><rect x="94.8916%" y="2980" width="0.1548%" height="15" fill="rgb(240,132,45)" fg:x="6130" fg:w="10"/><text x="95.1416%" y="2990.50"></text></g><g><title>fstatat64 (libc.so.6) (8 samples, 0.12%)</title><rect x="94.9226%" y="2996" width="0.1238%" height="15" fill="rgb(245,164,36)" fg:x="6132" fg:w="8"/><text x="95.1726%" y="3006.50"></text></g><g><title>&lt;module&gt; (torch/distributed/tensor/_ops/__init__.py:2) (19 samples, 0.29%)</title><rect x="94.8452%" y="2468" width="0.2941%" height="15" fill="rgb(231,188,53)" fg:x="6127" fg:w="19"/><text x="95.0952%" y="2478.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:1360) (19 samples, 0.29%)</title><rect x="94.8452%" y="2484" width="0.2941%" height="15" fill="rgb(237,198,39)" fg:x="6127" fg:w="19"/><text x="95.0952%" y="2494.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:1331) (19 samples, 0.29%)</title><rect x="94.8452%" y="2500" width="0.2941%" height="15" fill="rgb(223,120,35)" fg:x="6127" fg:w="19"/><text x="95.0952%" y="2510.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:935) (19 samples, 0.29%)</title><rect x="94.8452%" y="2516" width="0.2941%" height="15" fill="rgb(253,107,49)" fg:x="6127" fg:w="19"/><text x="95.0952%" y="2526.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:995) (19 samples, 0.29%)</title><rect x="94.8452%" y="2532" width="0.2941%" height="15" fill="rgb(216,44,31)" fg:x="6127" fg:w="19"/><text x="95.0952%" y="2542.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:488) (19 samples, 0.29%)</title><rect x="94.8452%" y="2548" width="0.2941%" height="15" fill="rgb(253,87,21)" fg:x="6127" fg:w="19"/><text x="95.0952%" y="2558.50"></text></g><g><title>&lt;module&gt; (torch/distributed/tensor/_ops/_conv_ops.py:5) (19 samples, 0.29%)</title><rect x="94.8452%" y="2564" width="0.2941%" height="15" fill="rgb(226,18,2)" fg:x="6127" fg:w="19"/><text x="95.0952%" y="2574.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:1360) (19 samples, 0.29%)</title><rect x="94.8452%" y="2580" width="0.2941%" height="15" fill="rgb(216,8,46)" fg:x="6127" fg:w="19"/><text x="95.0952%" y="2590.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:1331) (19 samples, 0.29%)</title><rect x="94.8452%" y="2596" width="0.2941%" height="15" fill="rgb(226,140,39)" fg:x="6127" fg:w="19"/><text x="95.0952%" y="2606.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:935) (19 samples, 0.29%)</title><rect x="94.8452%" y="2612" width="0.2941%" height="15" fill="rgb(221,194,54)" fg:x="6127" fg:w="19"/><text x="95.0952%" y="2622.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:995) (19 samples, 0.29%)</title><rect x="94.8452%" y="2628" width="0.2941%" height="15" fill="rgb(213,92,11)" fg:x="6127" fg:w="19"/><text x="95.0952%" y="2638.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:488) (19 samples, 0.29%)</title><rect x="94.8452%" y="2644" width="0.2941%" height="15" fill="rgb(229,162,46)" fg:x="6127" fg:w="19"/><text x="95.0952%" y="2654.50"></text></g><g><title>&lt;module&gt; (torch/distributed/tensor/_dtensor_spec.py:6) (19 samples, 0.29%)</title><rect x="94.8452%" y="2660" width="0.2941%" height="15" fill="rgb(214,111,36)" fg:x="6127" fg:w="19"/><text x="95.0952%" y="2670.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:1360) (19 samples, 0.29%)</title><rect x="94.8452%" y="2676" width="0.2941%" height="15" fill="rgb(207,6,21)" fg:x="6127" fg:w="19"/><text x="95.0952%" y="2686.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:1331) (19 samples, 0.29%)</title><rect x="94.8452%" y="2692" width="0.2941%" height="15" fill="rgb(213,127,38)" fg:x="6127" fg:w="19"/><text x="95.0952%" y="2702.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:935) (19 samples, 0.29%)</title><rect x="94.8452%" y="2708" width="0.2941%" height="15" fill="rgb(238,118,32)" fg:x="6127" fg:w="19"/><text x="95.0952%" y="2718.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:995) (19 samples, 0.29%)</title><rect x="94.8452%" y="2724" width="0.2941%" height="15" fill="rgb(240,139,39)" fg:x="6127" fg:w="19"/><text x="95.0952%" y="2734.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:488) (19 samples, 0.29%)</title><rect x="94.8452%" y="2740" width="0.2941%" height="15" fill="rgb(235,10,37)" fg:x="6127" fg:w="19"/><text x="95.0952%" y="2750.50"></text></g><g><title>&lt;module&gt; (torch/distributed/fsdp/__init__.py:1) (25 samples, 0.39%)</title><rect x="94.7833%" y="1988" width="0.3870%" height="15" fill="rgb(249,171,38)" fg:x="6123" fg:w="25"/><text x="95.0333%" y="1998.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:1360) (25 samples, 0.39%)</title><rect x="94.7833%" y="2004" width="0.3870%" height="15" fill="rgb(242,144,32)" fg:x="6123" fg:w="25"/><text x="95.0333%" y="2014.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:1331) (25 samples, 0.39%)</title><rect x="94.7833%" y="2020" width="0.3870%" height="15" fill="rgb(217,117,21)" fg:x="6123" fg:w="25"/><text x="95.0333%" y="2030.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:935) (25 samples, 0.39%)</title><rect x="94.7833%" y="2036" width="0.3870%" height="15" fill="rgb(249,87,1)" fg:x="6123" fg:w="25"/><text x="95.0333%" y="2046.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:995) (25 samples, 0.39%)</title><rect x="94.7833%" y="2052" width="0.3870%" height="15" fill="rgb(248,196,48)" fg:x="6123" fg:w="25"/><text x="95.0333%" y="2062.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:488) (25 samples, 0.39%)</title><rect x="94.7833%" y="2068" width="0.3870%" height="15" fill="rgb(251,206,33)" fg:x="6123" fg:w="25"/><text x="95.0333%" y="2078.50"></text></g><g><title>&lt;module&gt; (torch/distributed/fsdp/_flat_param.py:33) (23 samples, 0.36%)</title><rect x="94.8142%" y="2084" width="0.3560%" height="15" fill="rgb(232,141,28)" fg:x="6125" fg:w="23"/><text x="95.0642%" y="2094.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:1360) (23 samples, 0.36%)</title><rect x="94.8142%" y="2100" width="0.3560%" height="15" fill="rgb(209,167,14)" fg:x="6125" fg:w="23"/><text x="95.0642%" y="2110.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:1331) (23 samples, 0.36%)</title><rect x="94.8142%" y="2116" width="0.3560%" height="15" fill="rgb(225,11,50)" fg:x="6125" fg:w="23"/><text x="95.0642%" y="2126.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:935) (23 samples, 0.36%)</title><rect x="94.8142%" y="2132" width="0.3560%" height="15" fill="rgb(209,50,20)" fg:x="6125" fg:w="23"/><text x="95.0642%" y="2142.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:995) (22 samples, 0.34%)</title><rect x="94.8297%" y="2148" width="0.3406%" height="15" fill="rgb(212,17,46)" fg:x="6126" fg:w="22"/><text x="95.0797%" y="2158.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:488) (22 samples, 0.34%)</title><rect x="94.8297%" y="2164" width="0.3406%" height="15" fill="rgb(216,101,39)" fg:x="6126" fg:w="22"/><text x="95.0797%" y="2174.50"></text></g><g><title>&lt;module&gt; (torch/distributed/fsdp/_fsdp_extensions.py:8) (21 samples, 0.33%)</title><rect x="94.8452%" y="2180" width="0.3251%" height="15" fill="rgb(212,228,48)" fg:x="6127" fg:w="21"/><text x="95.0952%" y="2190.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:1360) (21 samples, 0.33%)</title><rect x="94.8452%" y="2196" width="0.3251%" height="15" fill="rgb(250,6,50)" fg:x="6127" fg:w="21"/><text x="95.0952%" y="2206.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:1331) (21 samples, 0.33%)</title><rect x="94.8452%" y="2212" width="0.3251%" height="15" fill="rgb(250,160,48)" fg:x="6127" fg:w="21"/><text x="95.0952%" y="2222.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:935) (21 samples, 0.33%)</title><rect x="94.8452%" y="2228" width="0.3251%" height="15" fill="rgb(244,216,33)" fg:x="6127" fg:w="21"/><text x="95.0952%" y="2238.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:995) (21 samples, 0.33%)</title><rect x="94.8452%" y="2244" width="0.3251%" height="15" fill="rgb(207,157,5)" fg:x="6127" fg:w="21"/><text x="95.0952%" y="2254.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:488) (21 samples, 0.33%)</title><rect x="94.8452%" y="2260" width="0.3251%" height="15" fill="rgb(228,199,8)" fg:x="6127" fg:w="21"/><text x="95.0952%" y="2270.50"></text></g><g><title>&lt;module&gt; (torch/distributed/fsdp/_shard_utils.py:18) (21 samples, 0.33%)</title><rect x="94.8452%" y="2276" width="0.3251%" height="15" fill="rgb(227,80,20)" fg:x="6127" fg:w="21"/><text x="95.0952%" y="2286.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:1360) (21 samples, 0.33%)</title><rect x="94.8452%" y="2292" width="0.3251%" height="15" fill="rgb(222,9,33)" fg:x="6127" fg:w="21"/><text x="95.0952%" y="2302.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:1331) (21 samples, 0.33%)</title><rect x="94.8452%" y="2308" width="0.3251%" height="15" fill="rgb(239,44,28)" fg:x="6127" fg:w="21"/><text x="95.0952%" y="2318.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:935) (21 samples, 0.33%)</title><rect x="94.8452%" y="2324" width="0.3251%" height="15" fill="rgb(249,187,43)" fg:x="6127" fg:w="21"/><text x="95.0952%" y="2334.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:995) (21 samples, 0.33%)</title><rect x="94.8452%" y="2340" width="0.3251%" height="15" fill="rgb(216,141,28)" fg:x="6127" fg:w="21"/><text x="95.0952%" y="2350.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:488) (21 samples, 0.33%)</title><rect x="94.8452%" y="2356" width="0.3251%" height="15" fill="rgb(230,154,53)" fg:x="6127" fg:w="21"/><text x="95.0952%" y="2366.50"></text></g><g><title>&lt;module&gt; (torch/distributed/tensor/__init__.py:4) (21 samples, 0.33%)</title><rect x="94.8452%" y="2372" width="0.3251%" height="15" fill="rgb(227,82,4)" fg:x="6127" fg:w="21"/><text x="95.0952%" y="2382.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:1360) (21 samples, 0.33%)</title><rect x="94.8452%" y="2388" width="0.3251%" height="15" fill="rgb(220,107,16)" fg:x="6127" fg:w="21"/><text x="95.0952%" y="2398.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:1331) (21 samples, 0.33%)</title><rect x="94.8452%" y="2404" width="0.3251%" height="15" fill="rgb(207,187,2)" fg:x="6127" fg:w="21"/><text x="95.0952%" y="2414.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:935) (21 samples, 0.33%)</title><rect x="94.8452%" y="2420" width="0.3251%" height="15" fill="rgb(210,162,52)" fg:x="6127" fg:w="21"/><text x="95.0952%" y="2430.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:995) (21 samples, 0.33%)</title><rect x="94.8452%" y="2436" width="0.3251%" height="15" fill="rgb(217,216,49)" fg:x="6127" fg:w="21"/><text x="95.0952%" y="2446.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:488) (21 samples, 0.33%)</title><rect x="94.8452%" y="2452" width="0.3251%" height="15" fill="rgb(218,146,49)" fg:x="6127" fg:w="21"/><text x="95.0952%" y="2462.50"></text></g><g><title>&lt;module&gt; (torch/distributed/fsdp/_fully_shard/_fsdp_collectives.py:16) (7 samples, 0.11%)</title><rect x="95.4025%" y="2564" width="0.1084%" height="15" fill="rgb(216,55,40)" fg:x="6163" fg:w="7"/><text x="95.6525%" y="2574.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:1360) (7 samples, 0.11%)</title><rect x="95.4025%" y="2580" width="0.1084%" height="15" fill="rgb(208,196,21)" fg:x="6163" fg:w="7"/><text x="95.6525%" y="2590.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:1331) (7 samples, 0.11%)</title><rect x="95.4025%" y="2596" width="0.1084%" height="15" fill="rgb(242,117,42)" fg:x="6163" fg:w="7"/><text x="95.6525%" y="2606.50"></text></g><g><title>&lt;module&gt; (torch/distributed/fsdp/_fully_shard/_fsdp_collectives.py:32) (8 samples, 0.12%)</title><rect x="95.5108%" y="2564" width="0.1238%" height="15" fill="rgb(210,11,23)" fg:x="6170" fg:w="8"/><text x="95.7608%" y="2574.50"></text></g><g><title>__init__ (torch/library.py:107) (8 samples, 0.12%)</title><rect x="95.5108%" y="2580" width="0.1238%" height="15" fill="rgb(217,110,2)" fg:x="6170" fg:w="8"/><text x="95.7608%" y="2590.50"></text></g><g><title>extract_stack (traceback.py:232) (8 samples, 0.12%)</title><rect x="95.5108%" y="2596" width="0.1238%" height="15" fill="rgb(229,77,54)" fg:x="6170" fg:w="8"/><text x="95.7608%" y="2606.50"></text></g><g><title>extract (traceback.py:395) (8 samples, 0.12%)</title><rect x="95.5108%" y="2612" width="0.1238%" height="15" fill="rgb(218,53,16)" fg:x="6170" fg:w="8"/><text x="95.7608%" y="2622.50"></text></g><g><title>&lt;module&gt; (torch/_dynamo/codegen.py:43) (59 samples, 0.91%)</title><rect x="94.7833%" y="1748" width="0.9133%" height="15" fill="rgb(215,38,13)" fg:x="6123" fg:w="59"/><text x="95.0333%" y="1758.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:1360) (59 samples, 0.91%)</title><rect x="94.7833%" y="1764" width="0.9133%" height="15" fill="rgb(235,42,18)" fg:x="6123" fg:w="59"/><text x="95.0333%" y="1774.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:1331) (59 samples, 0.91%)</title><rect x="94.7833%" y="1780" width="0.9133%" height="15" fill="rgb(219,66,54)" fg:x="6123" fg:w="59"/><text x="95.0333%" y="1790.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:935) (59 samples, 0.91%)</title><rect x="94.7833%" y="1796" width="0.9133%" height="15" fill="rgb(222,205,4)" fg:x="6123" fg:w="59"/><text x="95.0333%" y="1806.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:995) (59 samples, 0.91%)</title><rect x="94.7833%" y="1812" width="0.9133%" height="15" fill="rgb(227,213,46)" fg:x="6123" fg:w="59"/><text x="95.0333%" y="1822.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:488) (59 samples, 0.91%)</title><rect x="94.7833%" y="1828" width="0.9133%" height="15" fill="rgb(250,145,42)" fg:x="6123" fg:w="59"/><text x="95.0333%" y="1838.50"></text></g><g><title>&lt;module&gt; (torch/_dynamo/variables/functions.py:72) (59 samples, 0.91%)</title><rect x="94.7833%" y="1844" width="0.9133%" height="15" fill="rgb(219,15,2)" fg:x="6123" fg:w="59"/><text x="95.0333%" y="1854.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:1360) (59 samples, 0.91%)</title><rect x="94.7833%" y="1860" width="0.9133%" height="15" fill="rgb(231,181,52)" fg:x="6123" fg:w="59"/><text x="95.0333%" y="1870.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:1310) (59 samples, 0.91%)</title><rect x="94.7833%" y="1876" width="0.9133%" height="15" fill="rgb(235,1,42)" fg:x="6123" fg:w="59"/><text x="95.0333%" y="1886.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:488) (59 samples, 0.91%)</title><rect x="94.7833%" y="1892" width="0.9133%" height="15" fill="rgb(249,88,27)" fg:x="6123" fg:w="59"/><text x="95.0333%" y="1902.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:1360) (59 samples, 0.91%)</title><rect x="94.7833%" y="1908" width="0.9133%" height="15" fill="rgb(235,145,16)" fg:x="6123" fg:w="59"/><text x="95.0333%" y="1918.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:1331) (59 samples, 0.91%)</title><rect x="94.7833%" y="1924" width="0.9133%" height="15" fill="rgb(237,114,19)" fg:x="6123" fg:w="59"/><text x="95.0333%" y="1934.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:935) (59 samples, 0.91%)</title><rect x="94.7833%" y="1940" width="0.9133%" height="15" fill="rgb(238,51,50)" fg:x="6123" fg:w="59"/><text x="95.0333%" y="1950.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:995) (59 samples, 0.91%)</title><rect x="94.7833%" y="1956" width="0.9133%" height="15" fill="rgb(205,194,25)" fg:x="6123" fg:w="59"/><text x="95.0333%" y="1966.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:488) (59 samples, 0.91%)</title><rect x="94.7833%" y="1972" width="0.9133%" height="15" fill="rgb(215,203,17)" fg:x="6123" fg:w="59"/><text x="95.0333%" y="1982.50"></text></g><g><title>&lt;module&gt; (torch/distributed/fsdp/__init__.py:2) (32 samples, 0.50%)</title><rect x="95.2012%" y="1988" width="0.4954%" height="15" fill="rgb(233,112,49)" fg:x="6150" fg:w="32"/><text x="95.4512%" y="1998.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:1360) (32 samples, 0.50%)</title><rect x="95.2012%" y="2004" width="0.4954%" height="15" fill="rgb(241,130,26)" fg:x="6150" fg:w="32"/><text x="95.4512%" y="2014.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:1331) (31 samples, 0.48%)</title><rect x="95.2167%" y="2020" width="0.4799%" height="15" fill="rgb(252,223,19)" fg:x="6151" fg:w="31"/><text x="95.4667%" y="2030.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:935) (31 samples, 0.48%)</title><rect x="95.2167%" y="2036" width="0.4799%" height="15" fill="rgb(211,95,25)" fg:x="6151" fg:w="31"/><text x="95.4667%" y="2046.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:995) (30 samples, 0.46%)</title><rect x="95.2322%" y="2052" width="0.4644%" height="15" fill="rgb(251,182,27)" fg:x="6152" fg:w="30"/><text x="95.4822%" y="2062.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:488) (30 samples, 0.46%)</title><rect x="95.2322%" y="2068" width="0.4644%" height="15" fill="rgb(238,24,4)" fg:x="6152" fg:w="30"/><text x="95.4822%" y="2078.50"></text></g><g><title>&lt;module&gt; (torch/distributed/fsdp/_fully_shard/__init__.py:2) (25 samples, 0.39%)</title><rect x="95.3096%" y="2084" width="0.3870%" height="15" fill="rgb(224,220,25)" fg:x="6157" fg:w="25"/><text x="95.5596%" y="2094.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:1360) (25 samples, 0.39%)</title><rect x="95.3096%" y="2100" width="0.3870%" height="15" fill="rgb(239,133,26)" fg:x="6157" fg:w="25"/><text x="95.5596%" y="2110.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:1331) (25 samples, 0.39%)</title><rect x="95.3096%" y="2116" width="0.3870%" height="15" fill="rgb(211,94,48)" fg:x="6157" fg:w="25"/><text x="95.5596%" y="2126.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:935) (25 samples, 0.39%)</title><rect x="95.3096%" y="2132" width="0.3870%" height="15" fill="rgb(239,87,6)" fg:x="6157" fg:w="25"/><text x="95.5596%" y="2142.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:995) (25 samples, 0.39%)</title><rect x="95.3096%" y="2148" width="0.3870%" height="15" fill="rgb(227,62,0)" fg:x="6157" fg:w="25"/><text x="95.5596%" y="2158.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:488) (25 samples, 0.39%)</title><rect x="95.3096%" y="2164" width="0.3870%" height="15" fill="rgb(211,226,4)" fg:x="6157" fg:w="25"/><text x="95.5596%" y="2174.50"></text></g><g><title>&lt;module&gt; (torch/distributed/fsdp/_fully_shard/_fully_shard.py:25) (21 samples, 0.33%)</title><rect x="95.3715%" y="2180" width="0.3251%" height="15" fill="rgb(253,38,52)" fg:x="6161" fg:w="21"/><text x="95.6215%" y="2190.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:1360) (21 samples, 0.33%)</title><rect x="95.3715%" y="2196" width="0.3251%" height="15" fill="rgb(229,126,40)" fg:x="6161" fg:w="21"/><text x="95.6215%" y="2206.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:1331) (21 samples, 0.33%)</title><rect x="95.3715%" y="2212" width="0.3251%" height="15" fill="rgb(229,165,44)" fg:x="6161" fg:w="21"/><text x="95.6215%" y="2222.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:935) (21 samples, 0.33%)</title><rect x="95.3715%" y="2228" width="0.3251%" height="15" fill="rgb(247,95,47)" fg:x="6161" fg:w="21"/><text x="95.6215%" y="2238.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:995) (19 samples, 0.29%)</title><rect x="95.4025%" y="2244" width="0.2941%" height="15" fill="rgb(216,140,30)" fg:x="6163" fg:w="19"/><text x="95.6525%" y="2254.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:488) (19 samples, 0.29%)</title><rect x="95.4025%" y="2260" width="0.2941%" height="15" fill="rgb(246,214,8)" fg:x="6163" fg:w="19"/><text x="95.6525%" y="2270.50"></text></g><g><title>&lt;module&gt; (torch/distributed/fsdp/_fully_shard/_fsdp_init.py:12) (19 samples, 0.29%)</title><rect x="95.4025%" y="2276" width="0.2941%" height="15" fill="rgb(227,224,15)" fg:x="6163" fg:w="19"/><text x="95.6525%" y="2286.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:1360) (19 samples, 0.29%)</title><rect x="95.4025%" y="2292" width="0.2941%" height="15" fill="rgb(233,175,4)" fg:x="6163" fg:w="19"/><text x="95.6525%" y="2302.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:1331) (19 samples, 0.29%)</title><rect x="95.4025%" y="2308" width="0.2941%" height="15" fill="rgb(221,66,45)" fg:x="6163" fg:w="19"/><text x="95.6525%" y="2318.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:935) (19 samples, 0.29%)</title><rect x="95.4025%" y="2324" width="0.2941%" height="15" fill="rgb(221,178,18)" fg:x="6163" fg:w="19"/><text x="95.6525%" y="2334.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:995) (19 samples, 0.29%)</title><rect x="95.4025%" y="2340" width="0.2941%" height="15" fill="rgb(213,81,29)" fg:x="6163" fg:w="19"/><text x="95.6525%" y="2350.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:488) (19 samples, 0.29%)</title><rect x="95.4025%" y="2356" width="0.2941%" height="15" fill="rgb(220,89,49)" fg:x="6163" fg:w="19"/><text x="95.6525%" y="2366.50"></text></g><g><title>&lt;module&gt; (torch/distributed/fsdp/_fully_shard/_fsdp_state.py:29) (19 samples, 0.29%)</title><rect x="95.4025%" y="2372" width="0.2941%" height="15" fill="rgb(227,60,33)" fg:x="6163" fg:w="19"/><text x="95.6525%" y="2382.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:1360) (19 samples, 0.29%)</title><rect x="95.4025%" y="2388" width="0.2941%" height="15" fill="rgb(205,113,12)" fg:x="6163" fg:w="19"/><text x="95.6525%" y="2398.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:1331) (19 samples, 0.29%)</title><rect x="95.4025%" y="2404" width="0.2941%" height="15" fill="rgb(211,32,1)" fg:x="6163" fg:w="19"/><text x="95.6525%" y="2414.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:935) (19 samples, 0.29%)</title><rect x="95.4025%" y="2420" width="0.2941%" height="15" fill="rgb(246,2,12)" fg:x="6163" fg:w="19"/><text x="95.6525%" y="2430.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:995) (19 samples, 0.29%)</title><rect x="95.4025%" y="2436" width="0.2941%" height="15" fill="rgb(243,37,27)" fg:x="6163" fg:w="19"/><text x="95.6525%" y="2446.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:488) (19 samples, 0.29%)</title><rect x="95.4025%" y="2452" width="0.2941%" height="15" fill="rgb(248,211,31)" fg:x="6163" fg:w="19"/><text x="95.6525%" y="2462.50"></text></g><g><title>&lt;module&gt; (torch/distributed/fsdp/_fully_shard/_fsdp_param_group.py:17) (19 samples, 0.29%)</title><rect x="95.4025%" y="2468" width="0.2941%" height="15" fill="rgb(242,146,47)" fg:x="6163" fg:w="19"/><text x="95.6525%" y="2478.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:1360) (19 samples, 0.29%)</title><rect x="95.4025%" y="2484" width="0.2941%" height="15" fill="rgb(206,70,20)" fg:x="6163" fg:w="19"/><text x="95.6525%" y="2494.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:1331) (19 samples, 0.29%)</title><rect x="95.4025%" y="2500" width="0.2941%" height="15" fill="rgb(215,10,51)" fg:x="6163" fg:w="19"/><text x="95.6525%" y="2510.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:935) (19 samples, 0.29%)</title><rect x="95.4025%" y="2516" width="0.2941%" height="15" fill="rgb(243,178,53)" fg:x="6163" fg:w="19"/><text x="95.6525%" y="2526.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:995) (19 samples, 0.29%)</title><rect x="95.4025%" y="2532" width="0.2941%" height="15" fill="rgb(233,221,20)" fg:x="6163" fg:w="19"/><text x="95.6525%" y="2542.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:488) (19 samples, 0.29%)</title><rect x="95.4025%" y="2548" width="0.2941%" height="15" fill="rgb(218,95,35)" fg:x="6163" fg:w="19"/><text x="95.6525%" y="2558.50"></text></g><g><title>&lt;module&gt; (torch/_dynamo/trace_rules.py:32) (110 samples, 1.70%)</title><rect x="94.0248%" y="1236" width="1.7028%" height="15" fill="rgb(229,13,5)" fg:x="6074" fg:w="110"/><text x="94.2748%" y="1246.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:1360) (110 samples, 1.70%)</title><rect x="94.0248%" y="1252" width="1.7028%" height="15" fill="rgb(252,164,30)" fg:x="6074" fg:w="110"/><text x="94.2748%" y="1262.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:1331) (110 samples, 1.70%)</title><rect x="94.0248%" y="1268" width="1.7028%" height="15" fill="rgb(232,68,36)" fg:x="6074" fg:w="110"/><text x="94.2748%" y="1278.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:935) (110 samples, 1.70%)</title><rect x="94.0248%" y="1284" width="1.7028%" height="15" fill="rgb(219,59,54)" fg:x="6074" fg:w="110"/><text x="94.2748%" y="1294.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:995) (110 samples, 1.70%)</title><rect x="94.0248%" y="1300" width="1.7028%" height="15" fill="rgb(250,92,33)" fg:x="6074" fg:w="110"/><text x="94.2748%" y="1310.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:488) (110 samples, 1.70%)</title><rect x="94.0248%" y="1316" width="1.7028%" height="15" fill="rgb(229,162,54)" fg:x="6074" fg:w="110"/><text x="94.2748%" y="1326.50"></text></g><g><title>&lt;module&gt; (torch/_dynamo/variables/__init__.py:19) (110 samples, 1.70%)</title><rect x="94.0248%" y="1332" width="1.7028%" height="15" fill="rgb(244,114,52)" fg:x="6074" fg:w="110"/><text x="94.2748%" y="1342.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:1360) (110 samples, 1.70%)</title><rect x="94.0248%" y="1348" width="1.7028%" height="15" fill="rgb(212,211,43)" fg:x="6074" fg:w="110"/><text x="94.2748%" y="1358.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:1331) (110 samples, 1.70%)</title><rect x="94.0248%" y="1364" width="1.7028%" height="15" fill="rgb(226,147,8)" fg:x="6074" fg:w="110"/><text x="94.2748%" y="1374.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:935) (110 samples, 1.70%)</title><rect x="94.0248%" y="1380" width="1.7028%" height="15" fill="rgb(226,23,13)" fg:x="6074" fg:w="110"/><text x="94.2748%" y="1390.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:995) (110 samples, 1.70%)</title><rect x="94.0248%" y="1396" width="1.7028%" height="15" fill="rgb(240,63,4)" fg:x="6074" fg:w="110"/><text x="94.2748%" y="1406.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:488) (110 samples, 1.70%)</title><rect x="94.0248%" y="1412" width="1.7028%" height="15" fill="rgb(221,1,32)" fg:x="6074" fg:w="110"/><text x="94.2748%" y="1422.50"></text></g><g><title>&lt;module&gt; (torch/_dynamo/variables/base.py:581) (63 samples, 0.98%)</title><rect x="94.7523%" y="1428" width="0.9752%" height="15" fill="rgb(242,117,10)" fg:x="6121" fg:w="63"/><text x="95.0023%" y="1438.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;:1415) (63 samples, 0.98%)</title><rect x="94.7523%" y="1444" width="0.9752%" height="15" fill="rgb(249,172,44)" fg:x="6121" fg:w="63"/><text x="95.0023%" y="1454.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:488) (63 samples, 0.98%)</title><rect x="94.7523%" y="1460" width="0.9752%" height="15" fill="rgb(244,46,45)" fg:x="6121" fg:w="63"/><text x="95.0023%" y="1470.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:1360) (63 samples, 0.98%)</title><rect x="94.7523%" y="1476" width="0.9752%" height="15" fill="rgb(206,43,17)" fg:x="6121" fg:w="63"/><text x="95.0023%" y="1486.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:1331) (63 samples, 0.98%)</title><rect x="94.7523%" y="1492" width="0.9752%" height="15" fill="rgb(239,218,39)" fg:x="6121" fg:w="63"/><text x="95.0023%" y="1502.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:935) (63 samples, 0.98%)</title><rect x="94.7523%" y="1508" width="0.9752%" height="15" fill="rgb(208,169,54)" fg:x="6121" fg:w="63"/><text x="95.0023%" y="1518.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:995) (63 samples, 0.98%)</title><rect x="94.7523%" y="1524" width="0.9752%" height="15" fill="rgb(247,25,42)" fg:x="6121" fg:w="63"/><text x="95.0023%" y="1534.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:488) (63 samples, 0.98%)</title><rect x="94.7523%" y="1540" width="0.9752%" height="15" fill="rgb(226,23,31)" fg:x="6121" fg:w="63"/><text x="95.0023%" y="1550.50"></text></g><g><title>&lt;module&gt; (torch/_dynamo/variables/builder.py:86) (61 samples, 0.94%)</title><rect x="94.7833%" y="1556" width="0.9443%" height="15" fill="rgb(247,16,28)" fg:x="6123" fg:w="61"/><text x="95.0333%" y="1566.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:1360) (61 samples, 0.94%)</title><rect x="94.7833%" y="1572" width="0.9443%" height="15" fill="rgb(231,147,38)" fg:x="6123" fg:w="61"/><text x="95.0333%" y="1582.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:1331) (61 samples, 0.94%)</title><rect x="94.7833%" y="1588" width="0.9443%" height="15" fill="rgb(253,81,48)" fg:x="6123" fg:w="61"/><text x="95.0333%" y="1598.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:935) (61 samples, 0.94%)</title><rect x="94.7833%" y="1604" width="0.9443%" height="15" fill="rgb(249,222,43)" fg:x="6123" fg:w="61"/><text x="95.0333%" y="1614.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:995) (61 samples, 0.94%)</title><rect x="94.7833%" y="1620" width="0.9443%" height="15" fill="rgb(221,3,27)" fg:x="6123" fg:w="61"/><text x="95.0333%" y="1630.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:488) (61 samples, 0.94%)</title><rect x="94.7833%" y="1636" width="0.9443%" height="15" fill="rgb(228,180,5)" fg:x="6123" fg:w="61"/><text x="95.0333%" y="1646.50"></text></g><g><title>&lt;module&gt; (torch/_dynamo/side_effects.py:21) (61 samples, 0.94%)</title><rect x="94.7833%" y="1652" width="0.9443%" height="15" fill="rgb(227,131,42)" fg:x="6123" fg:w="61"/><text x="95.0333%" y="1662.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:1360) (61 samples, 0.94%)</title><rect x="94.7833%" y="1668" width="0.9443%" height="15" fill="rgb(212,3,39)" fg:x="6123" fg:w="61"/><text x="95.0333%" y="1678.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:1331) (61 samples, 0.94%)</title><rect x="94.7833%" y="1684" width="0.9443%" height="15" fill="rgb(226,45,5)" fg:x="6123" fg:w="61"/><text x="95.0333%" y="1694.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:935) (61 samples, 0.94%)</title><rect x="94.7833%" y="1700" width="0.9443%" height="15" fill="rgb(215,167,45)" fg:x="6123" fg:w="61"/><text x="95.0333%" y="1710.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:995) (61 samples, 0.94%)</title><rect x="94.7833%" y="1716" width="0.9443%" height="15" fill="rgb(250,218,53)" fg:x="6123" fg:w="61"/><text x="95.0333%" y="1726.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:488) (61 samples, 0.94%)</title><rect x="94.7833%" y="1732" width="0.9443%" height="15" fill="rgb(207,140,0)" fg:x="6123" fg:w="61"/><text x="95.0333%" y="1742.50"></text></g><g><title>&lt;module&gt; (torch/_dynamo/__init__.py:13) (368 samples, 5.70%)</title><rect x="90.0464%" y="884" width="5.6966%" height="15" fill="rgb(238,133,51)" fg:x="5817" fg:w="368"/><text x="90.2964%" y="894.50">&lt;module..</text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;:1415) (368 samples, 5.70%)</title><rect x="90.0464%" y="900" width="5.6966%" height="15" fill="rgb(218,203,53)" fg:x="5817" fg:w="368"/><text x="90.2964%" y="910.50">_handle..</text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:488) (368 samples, 5.70%)</title><rect x="90.0464%" y="916" width="5.6966%" height="15" fill="rgb(226,184,25)" fg:x="5817" fg:w="368"/><text x="90.2964%" y="926.50">_call_w..</text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:1360) (368 samples, 5.70%)</title><rect x="90.0464%" y="932" width="5.6966%" height="15" fill="rgb(231,121,21)" fg:x="5817" fg:w="368"/><text x="90.2964%" y="942.50">_find_a..</text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:1331) (368 samples, 5.70%)</title><rect x="90.0464%" y="948" width="5.6966%" height="15" fill="rgb(251,14,34)" fg:x="5817" fg:w="368"/><text x="90.2964%" y="958.50">_find_a..</text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:935) (368 samples, 5.70%)</title><rect x="90.0464%" y="964" width="5.6966%" height="15" fill="rgb(249,193,11)" fg:x="5817" fg:w="368"/><text x="90.2964%" y="974.50">_load_u..</text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:995) (368 samples, 5.70%)</title><rect x="90.0464%" y="980" width="5.6966%" height="15" fill="rgb(220,172,37)" fg:x="5817" fg:w="368"/><text x="90.2964%" y="990.50">exec_mo..</text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:488) (368 samples, 5.70%)</title><rect x="90.0464%" y="996" width="5.6966%" height="15" fill="rgb(231,229,43)" fg:x="5817" fg:w="368"/><text x="90.2964%" y="1006.50">_call_w..</text></g><g><title>&lt;module&gt; (torch/_dynamo/convert_frame.py:52) (368 samples, 5.70%)</title><rect x="90.0464%" y="1012" width="5.6966%" height="15" fill="rgb(250,161,5)" fg:x="5817" fg:w="368"/><text x="90.2964%" y="1022.50">&lt;module..</text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:1360) (368 samples, 5.70%)</title><rect x="90.0464%" y="1028" width="5.6966%" height="15" fill="rgb(218,225,18)" fg:x="5817" fg:w="368"/><text x="90.2964%" y="1038.50">_find_a..</text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:1331) (368 samples, 5.70%)</title><rect x="90.0464%" y="1044" width="5.6966%" height="15" fill="rgb(245,45,42)" fg:x="5817" fg:w="368"/><text x="90.2964%" y="1054.50">_find_a..</text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:935) (368 samples, 5.70%)</title><rect x="90.0464%" y="1060" width="5.6966%" height="15" fill="rgb(211,115,1)" fg:x="5817" fg:w="368"/><text x="90.2964%" y="1070.50">_load_u..</text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:995) (368 samples, 5.70%)</title><rect x="90.0464%" y="1076" width="5.6966%" height="15" fill="rgb(248,133,52)" fg:x="5817" fg:w="368"/><text x="90.2964%" y="1086.50">exec_mo..</text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:488) (368 samples, 5.70%)</title><rect x="90.0464%" y="1092" width="5.6966%" height="15" fill="rgb(238,100,21)" fg:x="5817" fg:w="368"/><text x="90.2964%" y="1102.50">_call_w..</text></g><g><title>&lt;module&gt; (torch/_dynamo/symbolic_convert.py:57) (113 samples, 1.75%)</title><rect x="93.9938%" y="1108" width="1.7492%" height="15" fill="rgb(247,144,11)" fg:x="6072" fg:w="113"/><text x="94.2438%" y="1118.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;:1415) (113 samples, 1.75%)</title><rect x="93.9938%" y="1124" width="1.7492%" height="15" fill="rgb(206,164,16)" fg:x="6072" fg:w="113"/><text x="94.2438%" y="1134.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:488) (113 samples, 1.75%)</title><rect x="93.9938%" y="1140" width="1.7492%" height="15" fill="rgb(222,34,3)" fg:x="6072" fg:w="113"/><text x="94.2438%" y="1150.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:1360) (113 samples, 1.75%)</title><rect x="93.9938%" y="1156" width="1.7492%" height="15" fill="rgb(248,82,4)" fg:x="6072" fg:w="113"/><text x="94.2438%" y="1166.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:1331) (113 samples, 1.75%)</title><rect x="93.9938%" y="1172" width="1.7492%" height="15" fill="rgb(228,81,46)" fg:x="6072" fg:w="113"/><text x="94.2438%" y="1182.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:935) (113 samples, 1.75%)</title><rect x="93.9938%" y="1188" width="1.7492%" height="15" fill="rgb(227,67,47)" fg:x="6072" fg:w="113"/><text x="94.2438%" y="1198.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:995) (113 samples, 1.75%)</title><rect x="93.9938%" y="1204" width="1.7492%" height="15" fill="rgb(215,93,53)" fg:x="6072" fg:w="113"/><text x="94.2438%" y="1214.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:488) (113 samples, 1.75%)</title><rect x="93.9938%" y="1220" width="1.7492%" height="15" fill="rgb(248,194,39)" fg:x="6072" fg:w="113"/><text x="94.2438%" y="1230.50"></text></g><g><title>&lt;module&gt; (torch/_functorch/partitioners.py:16) (8 samples, 0.12%)</title><rect x="95.8514%" y="1540" width="0.1238%" height="15" fill="rgb(215,5,19)" fg:x="6192" fg:w="8"/><text x="96.1014%" y="1550.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:1360) (8 samples, 0.12%)</title><rect x="95.8514%" y="1556" width="0.1238%" height="15" fill="rgb(226,215,51)" fg:x="6192" fg:w="8"/><text x="96.1014%" y="1566.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:1331) (8 samples, 0.12%)</title><rect x="95.8514%" y="1572" width="0.1238%" height="15" fill="rgb(225,56,26)" fg:x="6192" fg:w="8"/><text x="96.1014%" y="1582.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:935) (8 samples, 0.12%)</title><rect x="95.8514%" y="1588" width="0.1238%" height="15" fill="rgb(222,75,29)" fg:x="6192" fg:w="8"/><text x="96.1014%" y="1598.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:995) (8 samples, 0.12%)</title><rect x="95.8514%" y="1604" width="0.1238%" height="15" fill="rgb(236,139,6)" fg:x="6192" fg:w="8"/><text x="96.1014%" y="1614.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:488) (8 samples, 0.12%)</title><rect x="95.8514%" y="1620" width="0.1238%" height="15" fill="rgb(223,137,36)" fg:x="6192" fg:w="8"/><text x="96.1014%" y="1630.50"></text></g><g><title>&lt;module&gt; (networkx/__init__.py:19) (13 samples, 0.20%)</title><rect x="96.0062%" y="1732" width="0.2012%" height="15" fill="rgb(226,99,2)" fg:x="6202" fg:w="13"/><text x="96.2562%" y="1742.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;:1415) (13 samples, 0.20%)</title><rect x="96.0062%" y="1748" width="0.2012%" height="15" fill="rgb(206,133,23)" fg:x="6202" fg:w="13"/><text x="96.2562%" y="1758.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:488) (13 samples, 0.20%)</title><rect x="96.0062%" y="1764" width="0.2012%" height="15" fill="rgb(243,173,15)" fg:x="6202" fg:w="13"/><text x="96.2562%" y="1774.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:1360) (13 samples, 0.20%)</title><rect x="96.0062%" y="1780" width="0.2012%" height="15" fill="rgb(228,69,28)" fg:x="6202" fg:w="13"/><text x="96.2562%" y="1790.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:1331) (13 samples, 0.20%)</title><rect x="96.0062%" y="1796" width="0.2012%" height="15" fill="rgb(212,51,22)" fg:x="6202" fg:w="13"/><text x="96.2562%" y="1806.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:935) (13 samples, 0.20%)</title><rect x="96.0062%" y="1812" width="0.2012%" height="15" fill="rgb(227,113,0)" fg:x="6202" fg:w="13"/><text x="96.2562%" y="1822.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:995) (13 samples, 0.20%)</title><rect x="96.0062%" y="1828" width="0.2012%" height="15" fill="rgb(252,84,27)" fg:x="6202" fg:w="13"/><text x="96.2562%" y="1838.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:488) (13 samples, 0.20%)</title><rect x="96.0062%" y="1844" width="0.2012%" height="15" fill="rgb(223,145,39)" fg:x="6202" fg:w="13"/><text x="96.2562%" y="1854.50"></text></g><g><title>&lt;module&gt; (networkx/utils/__init__.py:8) (10 samples, 0.15%)</title><rect x="96.0526%" y="1860" width="0.1548%" height="15" fill="rgb(239,219,30)" fg:x="6205" fg:w="10"/><text x="96.3026%" y="1870.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:1360) (9 samples, 0.14%)</title><rect x="96.0681%" y="1876" width="0.1393%" height="15" fill="rgb(224,196,39)" fg:x="6206" fg:w="9"/><text x="96.3181%" y="1886.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:1331) (9 samples, 0.14%)</title><rect x="96.0681%" y="1892" width="0.1393%" height="15" fill="rgb(205,35,43)" fg:x="6206" fg:w="9"/><text x="96.3181%" y="1902.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:935) (9 samples, 0.14%)</title><rect x="96.0681%" y="1908" width="0.1393%" height="15" fill="rgb(228,201,21)" fg:x="6206" fg:w="9"/><text x="96.3181%" y="1918.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:995) (7 samples, 0.11%)</title><rect x="96.0991%" y="1924" width="0.1084%" height="15" fill="rgb(237,118,16)" fg:x="6208" fg:w="7"/><text x="96.3491%" y="1934.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:488) (7 samples, 0.11%)</title><rect x="96.0991%" y="1940" width="0.1084%" height="15" fill="rgb(241,17,19)" fg:x="6208" fg:w="7"/><text x="96.3491%" y="1950.50"></text></g><g><title>&lt;module&gt; (networkx/utils/backends.py:541) (7 samples, 0.11%)</title><rect x="96.0991%" y="1956" width="0.1084%" height="15" fill="rgb(214,10,25)" fg:x="6208" fg:w="7"/><text x="96.3491%" y="1966.50"></text></g><g><title>_get_backends (networkx/utils/backends.py:514) (7 samples, 0.11%)</title><rect x="96.0991%" y="1972" width="0.1084%" height="15" fill="rgb(238,37,29)" fg:x="6208" fg:w="7"/><text x="96.3491%" y="1982.50"></text></g><g><title>entry_points (importlib/metadata/__init__.py:913) (7 samples, 0.11%)</title><rect x="96.0991%" y="1988" width="0.1084%" height="15" fill="rgb(253,83,25)" fg:x="6208" fg:w="7"/><text x="96.3491%" y="1998.50"></text></g><g><title>_set_configs_from_environment (networkx/utils/backends.py:563) (8 samples, 0.12%)</title><rect x="96.2074%" y="1748" width="0.1238%" height="15" fill="rgb(234,192,12)" fg:x="6215" fg:w="8"/><text x="96.4574%" y="1758.50"></text></g><g><title>_get_backends (networkx/utils/backends.py:514) (8 samples, 0.12%)</title><rect x="96.2074%" y="1764" width="0.1238%" height="15" fill="rgb(241,216,45)" fg:x="6215" fg:w="8"/><text x="96.4574%" y="1774.50"></text></g><g><title>entry_points (importlib/metadata/__init__.py:913) (8 samples, 0.12%)</title><rect x="96.2074%" y="1780" width="0.1238%" height="15" fill="rgb(242,22,33)" fg:x="6215" fg:w="8"/><text x="96.4574%" y="1790.50"></text></g><g><title>&lt;module&gt; (networkx/__init__.py:23) (15 samples, 0.23%)</title><rect x="96.2074%" y="1732" width="0.2322%" height="15" fill="rgb(231,105,49)" fg:x="6215" fg:w="15"/><text x="96.4574%" y="1742.50"></text></g><g><title>_set_configs_from_environment (networkx/utils/backends.py:600) (7 samples, 0.11%)</title><rect x="96.3313%" y="1748" width="0.1084%" height="15" fill="rgb(218,204,15)" fg:x="6223" fg:w="7"/><text x="96.5813%" y="1758.50"></text></g><g><title>__iter__ (&lt;frozen _collections_abc&gt;:894) (7 samples, 0.11%)</title><rect x="96.3313%" y="1764" width="0.1084%" height="15" fill="rgb(235,138,41)" fg:x="6223" fg:w="7"/><text x="96.5813%" y="1774.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:1357) (9 samples, 0.14%)</title><rect x="96.9350%" y="2004" width="0.1393%" height="15" fill="rgb(246,0,9)" fg:x="6262" fg:w="9"/><text x="97.1850%" y="2014.50"></text></g><g><title>__enter__ (&lt;frozen importlib._bootstrap&gt;:418) (9 samples, 0.14%)</title><rect x="96.9350%" y="2020" width="0.1393%" height="15" fill="rgb(210,74,4)" fg:x="6262" fg:w="9"/><text x="97.1850%" y="2030.50"></text></g><g><title>acquire (&lt;frozen importlib._bootstrap&gt;:311) (9 samples, 0.14%)</title><rect x="96.9350%" y="2036" width="0.1393%" height="15" fill="rgb(250,60,41)" fg:x="6262" fg:w="9"/><text x="97.1850%" y="2046.50"></text></g><g><title>__enter__ (&lt;frozen importlib._bootstrap&gt;:170) (9 samples, 0.14%)</title><rect x="96.9350%" y="2052" width="0.1393%" height="15" fill="rgb(220,115,12)" fg:x="6262" fg:w="9"/><text x="97.1850%" y="2062.50"></text></g><g><title>setdefault (&lt;frozen importlib._bootstrap&gt;:128) (9 samples, 0.14%)</title><rect x="96.9350%" y="2068" width="0.1393%" height="15" fill="rgb(237,100,13)" fg:x="6262" fg:w="9"/><text x="97.1850%" y="2078.50"></text></g><g><title>&lt;module&gt; (networkx/algorithms/__init__.py:78) (20 samples, 0.31%)</title><rect x="96.8111%" y="1860" width="0.3096%" height="15" fill="rgb(213,55,26)" fg:x="6254" fg:w="20"/><text x="97.0611%" y="1870.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;:1415) (20 samples, 0.31%)</title><rect x="96.8111%" y="1876" width="0.3096%" height="15" fill="rgb(216,17,4)" fg:x="6254" fg:w="20"/><text x="97.0611%" y="1886.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:488) (20 samples, 0.31%)</title><rect x="96.8111%" y="1892" width="0.3096%" height="15" fill="rgb(220,153,47)" fg:x="6254" fg:w="20"/><text x="97.0611%" y="1902.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:1360) (20 samples, 0.31%)</title><rect x="96.8111%" y="1908" width="0.3096%" height="15" fill="rgb(215,131,9)" fg:x="6254" fg:w="20"/><text x="97.0611%" y="1918.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:1331) (20 samples, 0.31%)</title><rect x="96.8111%" y="1924" width="0.3096%" height="15" fill="rgb(233,46,42)" fg:x="6254" fg:w="20"/><text x="97.0611%" y="1934.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:935) (20 samples, 0.31%)</title><rect x="96.8111%" y="1940" width="0.3096%" height="15" fill="rgb(226,86,7)" fg:x="6254" fg:w="20"/><text x="97.0611%" y="1950.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:995) (20 samples, 0.31%)</title><rect x="96.8111%" y="1956" width="0.3096%" height="15" fill="rgb(239,226,21)" fg:x="6254" fg:w="20"/><text x="97.0611%" y="1966.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:488) (20 samples, 0.31%)</title><rect x="96.8111%" y="1972" width="0.3096%" height="15" fill="rgb(244,137,22)" fg:x="6254" fg:w="20"/><text x="97.0611%" y="1982.50"></text></g><g><title>&lt;module&gt; (networkx/algorithms/isomorphism/__init__.py:6) (12 samples, 0.19%)</title><rect x="96.9350%" y="1988" width="0.1858%" height="15" fill="rgb(211,139,35)" fg:x="6262" fg:w="12"/><text x="97.1850%" y="1998.50"></text></g><g><title>&lt;module&gt; (networkx/__init__.py:46) (40 samples, 0.62%)</title><rect x="96.5480%" y="1732" width="0.6192%" height="15" fill="rgb(214,62,50)" fg:x="6237" fg:w="40"/><text x="96.7980%" y="1742.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;:1415) (40 samples, 0.62%)</title><rect x="96.5480%" y="1748" width="0.6192%" height="15" fill="rgb(212,113,44)" fg:x="6237" fg:w="40"/><text x="96.7980%" y="1758.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:488) (40 samples, 0.62%)</title><rect x="96.5480%" y="1764" width="0.6192%" height="15" fill="rgb(226,150,43)" fg:x="6237" fg:w="40"/><text x="96.7980%" y="1774.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:1360) (40 samples, 0.62%)</title><rect x="96.5480%" y="1780" width="0.6192%" height="15" fill="rgb(250,71,37)" fg:x="6237" fg:w="40"/><text x="96.7980%" y="1790.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:1331) (40 samples, 0.62%)</title><rect x="96.5480%" y="1796" width="0.6192%" height="15" fill="rgb(219,76,19)" fg:x="6237" fg:w="40"/><text x="96.7980%" y="1806.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:935) (40 samples, 0.62%)</title><rect x="96.5480%" y="1812" width="0.6192%" height="15" fill="rgb(250,39,11)" fg:x="6237" fg:w="40"/><text x="96.7980%" y="1822.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:995) (40 samples, 0.62%)</title><rect x="96.5480%" y="1828" width="0.6192%" height="15" fill="rgb(230,64,31)" fg:x="6237" fg:w="40"/><text x="96.7980%" y="1838.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:488) (40 samples, 0.62%)</title><rect x="96.5480%" y="1844" width="0.6192%" height="15" fill="rgb(208,222,23)" fg:x="6237" fg:w="40"/><text x="96.7980%" y="1854.50"></text></g><g><title>&lt;module&gt; (torch/_functorch/aot_autograd.py:135) (90 samples, 1.39%)</title><rect x="95.8514%" y="1444" width="1.3932%" height="15" fill="rgb(227,125,18)" fg:x="6192" fg:w="90"/><text x="96.1014%" y="1454.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:1360) (90 samples, 1.39%)</title><rect x="95.8514%" y="1460" width="1.3932%" height="15" fill="rgb(234,210,9)" fg:x="6192" fg:w="90"/><text x="96.1014%" y="1470.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:1331) (90 samples, 1.39%)</title><rect x="95.8514%" y="1476" width="1.3932%" height="15" fill="rgb(217,127,24)" fg:x="6192" fg:w="90"/><text x="96.1014%" y="1486.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:935) (90 samples, 1.39%)</title><rect x="95.8514%" y="1492" width="1.3932%" height="15" fill="rgb(239,141,48)" fg:x="6192" fg:w="90"/><text x="96.1014%" y="1502.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:995) (90 samples, 1.39%)</title><rect x="95.8514%" y="1508" width="1.3932%" height="15" fill="rgb(227,109,8)" fg:x="6192" fg:w="90"/><text x="96.1014%" y="1518.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:488) (90 samples, 1.39%)</title><rect x="95.8514%" y="1524" width="1.3932%" height="15" fill="rgb(235,184,23)" fg:x="6192" fg:w="90"/><text x="96.1014%" y="1534.50"></text></g><g><title>&lt;module&gt; (torch/_functorch/partitioners.py:37) (82 samples, 1.27%)</title><rect x="95.9752%" y="1540" width="1.2693%" height="15" fill="rgb(227,226,48)" fg:x="6200" fg:w="82"/><text x="96.2252%" y="1550.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:1360) (82 samples, 1.27%)</title><rect x="95.9752%" y="1556" width="1.2693%" height="15" fill="rgb(206,150,11)" fg:x="6200" fg:w="82"/><text x="96.2252%" y="1566.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:1331) (82 samples, 1.27%)</title><rect x="95.9752%" y="1572" width="1.2693%" height="15" fill="rgb(254,2,33)" fg:x="6200" fg:w="82"/><text x="96.2252%" y="1582.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:935) (82 samples, 1.27%)</title><rect x="95.9752%" y="1588" width="1.2693%" height="15" fill="rgb(243,160,20)" fg:x="6200" fg:w="82"/><text x="96.2252%" y="1598.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:995) (81 samples, 1.25%)</title><rect x="95.9907%" y="1604" width="1.2539%" height="15" fill="rgb(218,208,30)" fg:x="6201" fg:w="81"/><text x="96.2407%" y="1614.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:488) (81 samples, 1.25%)</title><rect x="95.9907%" y="1620" width="1.2539%" height="15" fill="rgb(224,120,49)" fg:x="6201" fg:w="81"/><text x="96.2407%" y="1630.50"></text></g><g><title>&lt;module&gt; (torch/_functorch/_activation_checkpointing/graph_info_provider.py:3) (81 samples, 1.25%)</title><rect x="95.9907%" y="1636" width="1.2539%" height="15" fill="rgb(246,12,2)" fg:x="6201" fg:w="81"/><text x="96.2407%" y="1646.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:1360) (81 samples, 1.25%)</title><rect x="95.9907%" y="1652" width="1.2539%" height="15" fill="rgb(236,117,3)" fg:x="6201" fg:w="81"/><text x="96.2407%" y="1662.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:1331) (81 samples, 1.25%)</title><rect x="95.9907%" y="1668" width="1.2539%" height="15" fill="rgb(216,128,52)" fg:x="6201" fg:w="81"/><text x="96.2407%" y="1678.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:935) (81 samples, 1.25%)</title><rect x="95.9907%" y="1684" width="1.2539%" height="15" fill="rgb(246,145,19)" fg:x="6201" fg:w="81"/><text x="96.2407%" y="1694.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:995) (80 samples, 1.24%)</title><rect x="96.0062%" y="1700" width="1.2384%" height="15" fill="rgb(222,11,46)" fg:x="6202" fg:w="80"/><text x="96.2562%" y="1710.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:488) (80 samples, 1.24%)</title><rect x="96.0062%" y="1716" width="1.2384%" height="15" fill="rgb(245,82,36)" fg:x="6202" fg:w="80"/><text x="96.2562%" y="1726.50"></text></g><g><title>&lt;module&gt; (torch/_inductor/utils.py:1214) (9 samples, 0.14%)</title><rect x="97.2446%" y="1732" width="0.1393%" height="15" fill="rgb(250,73,51)" fg:x="6282" fg:w="9"/><text x="97.4946%" y="1742.50"></text></g><g><title>&lt;module&gt; (torch/_inductor/cudagraph_utils.py:10) (10 samples, 0.15%)</title><rect x="97.2446%" y="1636" width="0.1548%" height="15" fill="rgb(221,189,23)" fg:x="6282" fg:w="10"/><text x="97.4946%" y="1646.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:1360) (10 samples, 0.15%)</title><rect x="97.2446%" y="1652" width="0.1548%" height="15" fill="rgb(210,33,7)" fg:x="6282" fg:w="10"/><text x="97.4946%" y="1662.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:1331) (10 samples, 0.15%)</title><rect x="97.2446%" y="1668" width="0.1548%" height="15" fill="rgb(210,107,22)" fg:x="6282" fg:w="10"/><text x="97.4946%" y="1678.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:935) (10 samples, 0.15%)</title><rect x="97.2446%" y="1684" width="0.1548%" height="15" fill="rgb(222,116,37)" fg:x="6282" fg:w="10"/><text x="97.4946%" y="1694.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:995) (10 samples, 0.15%)</title><rect x="97.2446%" y="1700" width="0.1548%" height="15" fill="rgb(254,17,48)" fg:x="6282" fg:w="10"/><text x="97.4946%" y="1710.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:488) (10 samples, 0.15%)</title><rect x="97.2446%" y="1716" width="0.1548%" height="15" fill="rgb(224,36,32)" fg:x="6282" fg:w="10"/><text x="97.4946%" y="1726.50"></text></g><g><title>&lt;module&gt; (torch/_functorch/aot_autograd.py:26) (11 samples, 0.17%)</title><rect x="97.2446%" y="1444" width="0.1703%" height="15" fill="rgb(232,90,46)" fg:x="6282" fg:w="11"/><text x="97.4946%" y="1454.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:1360) (11 samples, 0.17%)</title><rect x="97.2446%" y="1460" width="0.1703%" height="15" fill="rgb(241,66,40)" fg:x="6282" fg:w="11"/><text x="97.4946%" y="1470.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:1331) (11 samples, 0.17%)</title><rect x="97.2446%" y="1476" width="0.1703%" height="15" fill="rgb(249,184,29)" fg:x="6282" fg:w="11"/><text x="97.4946%" y="1486.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:935) (11 samples, 0.17%)</title><rect x="97.2446%" y="1492" width="0.1703%" height="15" fill="rgb(231,181,1)" fg:x="6282" fg:w="11"/><text x="97.4946%" y="1502.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:995) (11 samples, 0.17%)</title><rect x="97.2446%" y="1508" width="0.1703%" height="15" fill="rgb(224,94,2)" fg:x="6282" fg:w="11"/><text x="97.4946%" y="1518.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:488) (11 samples, 0.17%)</title><rect x="97.2446%" y="1524" width="0.1703%" height="15" fill="rgb(229,170,15)" fg:x="6282" fg:w="11"/><text x="97.4946%" y="1534.50"></text></g><g><title>&lt;module&gt; (torch/_inductor/output_code.py:35) (11 samples, 0.17%)</title><rect x="97.2446%" y="1540" width="0.1703%" height="15" fill="rgb(240,127,35)" fg:x="6282" fg:w="11"/><text x="97.4946%" y="1550.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:1360) (11 samples, 0.17%)</title><rect x="97.2446%" y="1556" width="0.1703%" height="15" fill="rgb(248,196,34)" fg:x="6282" fg:w="11"/><text x="97.4946%" y="1566.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:1331) (11 samples, 0.17%)</title><rect x="97.2446%" y="1572" width="0.1703%" height="15" fill="rgb(236,137,7)" fg:x="6282" fg:w="11"/><text x="97.4946%" y="1582.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:935) (11 samples, 0.17%)</title><rect x="97.2446%" y="1588" width="0.1703%" height="15" fill="rgb(235,127,16)" fg:x="6282" fg:w="11"/><text x="97.4946%" y="1598.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:995) (11 samples, 0.17%)</title><rect x="97.2446%" y="1604" width="0.1703%" height="15" fill="rgb(250,192,54)" fg:x="6282" fg:w="11"/><text x="97.4946%" y="1614.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:488) (11 samples, 0.17%)</title><rect x="97.2446%" y="1620" width="0.1703%" height="15" fill="rgb(218,98,20)" fg:x="6282" fg:w="11"/><text x="97.4946%" y="1630.50"></text></g><g><title>load_object (torch/_dynamo/trace_rules.py:2901) (108 samples, 1.67%)</title><rect x="95.8204%" y="1204" width="1.6718%" height="15" fill="rgb(230,176,47)" fg:x="6190" fg:w="108"/><text x="96.0704%" y="1214.50"></text></g><g><title>_load_obj_from_str (torch/_dynamo/trace_rules.py:2885) (108 samples, 1.67%)</title><rect x="95.8204%" y="1220" width="1.6718%" height="15" fill="rgb(244,2,33)" fg:x="6190" fg:w="108"/><text x="96.0704%" y="1230.50"></text></g><g><title>import_module (importlib/__init__.py:90) (108 samples, 1.67%)</title><rect x="95.8204%" y="1236" width="1.6718%" height="15" fill="rgb(231,100,17)" fg:x="6190" fg:w="108"/><text x="96.0704%" y="1246.50"></text></g><g><title>_gcd_import (&lt;frozen importlib._bootstrap&gt;:1387) (107 samples, 1.66%)</title><rect x="95.8359%" y="1252" width="1.6563%" height="15" fill="rgb(245,23,12)" fg:x="6191" fg:w="107"/><text x="96.0859%" y="1262.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:1360) (106 samples, 1.64%)</title><rect x="95.8514%" y="1268" width="1.6409%" height="15" fill="rgb(249,55,22)" fg:x="6192" fg:w="106"/><text x="96.1014%" y="1278.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:1331) (106 samples, 1.64%)</title><rect x="95.8514%" y="1284" width="1.6409%" height="15" fill="rgb(207,134,9)" fg:x="6192" fg:w="106"/><text x="96.1014%" y="1294.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:935) (106 samples, 1.64%)</title><rect x="95.8514%" y="1300" width="1.6409%" height="15" fill="rgb(218,134,0)" fg:x="6192" fg:w="106"/><text x="96.1014%" y="1310.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:995) (106 samples, 1.64%)</title><rect x="95.8514%" y="1316" width="1.6409%" height="15" fill="rgb(213,212,33)" fg:x="6192" fg:w="106"/><text x="96.1014%" y="1326.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:488) (106 samples, 1.64%)</title><rect x="95.8514%" y="1332" width="1.6409%" height="15" fill="rgb(252,106,18)" fg:x="6192" fg:w="106"/><text x="96.1014%" y="1342.50"></text></g><g><title>&lt;module&gt; (torch/_higher_order_ops/map.py:6) (106 samples, 1.64%)</title><rect x="95.8514%" y="1348" width="1.6409%" height="15" fill="rgb(208,126,42)" fg:x="6192" fg:w="106"/><text x="96.1014%" y="1358.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:1360) (106 samples, 1.64%)</title><rect x="95.8514%" y="1364" width="1.6409%" height="15" fill="rgb(246,175,29)" fg:x="6192" fg:w="106"/><text x="96.1014%" y="1374.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:1331) (106 samples, 1.64%)</title><rect x="95.8514%" y="1380" width="1.6409%" height="15" fill="rgb(215,13,50)" fg:x="6192" fg:w="106"/><text x="96.1014%" y="1390.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:935) (106 samples, 1.64%)</title><rect x="95.8514%" y="1396" width="1.6409%" height="15" fill="rgb(216,172,15)" fg:x="6192" fg:w="106"/><text x="96.1014%" y="1406.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:995) (106 samples, 1.64%)</title><rect x="95.8514%" y="1412" width="1.6409%" height="15" fill="rgb(212,103,13)" fg:x="6192" fg:w="106"/><text x="96.1014%" y="1422.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:488) (106 samples, 1.64%)</title><rect x="95.8514%" y="1428" width="1.6409%" height="15" fill="rgb(231,171,36)" fg:x="6192" fg:w="106"/><text x="96.1014%" y="1438.50"></text></g><g><title>&lt;module&gt; (torch/_dynamo/polyfills/builtins.py:30) (116 samples, 1.80%)</title><rect x="95.7585%" y="1156" width="1.7957%" height="15" fill="rgb(250,123,20)" fg:x="6186" fg:w="116"/><text x="96.0085%" y="1166.50">&lt;..</text></g><g><title>wrapper (torch/_dynamo/decorators.py:427) (114 samples, 1.76%)</title><rect x="95.7895%" y="1172" width="1.7647%" height="15" fill="rgb(212,53,50)" fg:x="6188" fg:w="114"/><text x="96.0395%" y="1182.50"></text></g><g><title>get_torch_obj_rule_map (torch/_dynamo/trace_rules.py:2870) (114 samples, 1.76%)</title><rect x="95.7895%" y="1188" width="1.7647%" height="15" fill="rgb(243,54,12)" fg:x="6188" fg:w="114"/><text x="96.0395%" y="1198.50"></text></g><g><title>&lt;module&gt; (torchvision/models/__init__.py:2) (531 samples, 8.22%)</title><rect x="89.3963%" y="308" width="8.2198%" height="15" fill="rgb(234,101,34)" fg:x="5775" fg:w="531"/><text x="89.6463%" y="318.50">&lt;module&gt; (t..</text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:1360) (531 samples, 8.22%)</title><rect x="89.3963%" y="324" width="8.2198%" height="15" fill="rgb(254,67,22)" fg:x="5775" fg:w="531"/><text x="89.6463%" y="334.50">_find_and_l..</text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:1331) (531 samples, 8.22%)</title><rect x="89.3963%" y="340" width="8.2198%" height="15" fill="rgb(250,35,47)" fg:x="5775" fg:w="531"/><text x="89.6463%" y="350.50">_find_and_l..</text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:935) (531 samples, 8.22%)</title><rect x="89.3963%" y="356" width="8.2198%" height="15" fill="rgb(226,126,38)" fg:x="5775" fg:w="531"/><text x="89.6463%" y="366.50">_load_unloc..</text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:995) (531 samples, 8.22%)</title><rect x="89.3963%" y="372" width="8.2198%" height="15" fill="rgb(216,138,53)" fg:x="5775" fg:w="531"/><text x="89.6463%" y="382.50">exec_module..</text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:488) (531 samples, 8.22%)</title><rect x="89.3963%" y="388" width="8.2198%" height="15" fill="rgb(246,199,43)" fg:x="5775" fg:w="531"/><text x="89.6463%" y="398.50">_call_with_..</text></g><g><title>&lt;module&gt; (torchvision/models/convnext.py:8) (531 samples, 8.22%)</title><rect x="89.3963%" y="404" width="8.2198%" height="15" fill="rgb(232,125,11)" fg:x="5775" fg:w="531"/><text x="89.6463%" y="414.50">&lt;module&gt; (t..</text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:1360) (531 samples, 8.22%)</title><rect x="89.3963%" y="420" width="8.2198%" height="15" fill="rgb(218,219,45)" fg:x="5775" fg:w="531"/><text x="89.6463%" y="430.50">_find_and_l..</text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:1310) (531 samples, 8.22%)</title><rect x="89.3963%" y="436" width="8.2198%" height="15" fill="rgb(216,102,54)" fg:x="5775" fg:w="531"/><text x="89.6463%" y="446.50">_find_and_l..</text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:488) (531 samples, 8.22%)</title><rect x="89.3963%" y="452" width="8.2198%" height="15" fill="rgb(250,228,7)" fg:x="5775" fg:w="531"/><text x="89.6463%" y="462.50">_call_with_..</text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:1360) (531 samples, 8.22%)</title><rect x="89.3963%" y="468" width="8.2198%" height="15" fill="rgb(226,125,25)" fg:x="5775" fg:w="531"/><text x="89.6463%" y="478.50">_find_and_l..</text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:1331) (531 samples, 8.22%)</title><rect x="89.3963%" y="484" width="8.2198%" height="15" fill="rgb(224,165,27)" fg:x="5775" fg:w="531"/><text x="89.6463%" y="494.50">_find_and_l..</text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:935) (531 samples, 8.22%)</title><rect x="89.3963%" y="500" width="8.2198%" height="15" fill="rgb(233,86,3)" fg:x="5775" fg:w="531"/><text x="89.6463%" y="510.50">_load_unloc..</text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:995) (531 samples, 8.22%)</title><rect x="89.3963%" y="516" width="8.2198%" height="15" fill="rgb(228,116,20)" fg:x="5775" fg:w="531"/><text x="89.6463%" y="526.50">exec_module..</text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:488) (531 samples, 8.22%)</title><rect x="89.3963%" y="532" width="8.2198%" height="15" fill="rgb(209,192,17)" fg:x="5775" fg:w="531"/><text x="89.6463%" y="542.50">_call_with_..</text></g><g><title>&lt;module&gt; (torchvision/ops/__init__.py:23) (489 samples, 7.57%)</title><rect x="90.0464%" y="548" width="7.5697%" height="15" fill="rgb(224,88,34)" fg:x="5817" fg:w="489"/><text x="90.2964%" y="558.50">&lt;module&gt; (..</text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:1360) (489 samples, 7.57%)</title><rect x="90.0464%" y="564" width="7.5697%" height="15" fill="rgb(233,38,6)" fg:x="5817" fg:w="489"/><text x="90.2964%" y="574.50">_find_and_..</text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:1331) (489 samples, 7.57%)</title><rect x="90.0464%" y="580" width="7.5697%" height="15" fill="rgb(212,59,30)" fg:x="5817" fg:w="489"/><text x="90.2964%" y="590.50">_find_and_..</text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:935) (489 samples, 7.57%)</title><rect x="90.0464%" y="596" width="7.5697%" height="15" fill="rgb(213,80,3)" fg:x="5817" fg:w="489"/><text x="90.2964%" y="606.50">_load_unlo..</text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:995) (489 samples, 7.57%)</title><rect x="90.0464%" y="612" width="7.5697%" height="15" fill="rgb(251,178,7)" fg:x="5817" fg:w="489"/><text x="90.2964%" y="622.50">exec_modul..</text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:488) (489 samples, 7.57%)</title><rect x="90.0464%" y="628" width="7.5697%" height="15" fill="rgb(213,154,26)" fg:x="5817" fg:w="489"/><text x="90.2964%" y="638.50">_call_with..</text></g><g><title>&lt;module&gt; (torchvision/ops/poolers.py:10) (489 samples, 7.57%)</title><rect x="90.0464%" y="644" width="7.5697%" height="15" fill="rgb(238,165,49)" fg:x="5817" fg:w="489"/><text x="90.2964%" y="654.50">&lt;module&gt; (..</text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:1360) (489 samples, 7.57%)</title><rect x="90.0464%" y="660" width="7.5697%" height="15" fill="rgb(248,91,46)" fg:x="5817" fg:w="489"/><text x="90.2964%" y="670.50">_find_and_..</text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:1331) (489 samples, 7.57%)</title><rect x="90.0464%" y="676" width="7.5697%" height="15" fill="rgb(244,21,52)" fg:x="5817" fg:w="489"/><text x="90.2964%" y="686.50">_find_and_..</text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:935) (489 samples, 7.57%)</title><rect x="90.0464%" y="692" width="7.5697%" height="15" fill="rgb(247,122,20)" fg:x="5817" fg:w="489"/><text x="90.2964%" y="702.50">_load_unlo..</text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:995) (489 samples, 7.57%)</title><rect x="90.0464%" y="708" width="7.5697%" height="15" fill="rgb(218,27,9)" fg:x="5817" fg:w="489"/><text x="90.2964%" y="718.50">exec_modul..</text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:488) (489 samples, 7.57%)</title><rect x="90.0464%" y="724" width="7.5697%" height="15" fill="rgb(246,7,6)" fg:x="5817" fg:w="489"/><text x="90.2964%" y="734.50">_call_with..</text></g><g><title>&lt;module&gt; (torchvision/ops/roi_align.py:7) (489 samples, 7.57%)</title><rect x="90.0464%" y="740" width="7.5697%" height="15" fill="rgb(227,135,54)" fg:x="5817" fg:w="489"/><text x="90.2964%" y="750.50">&lt;module&gt; (..</text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:1360) (489 samples, 7.57%)</title><rect x="90.0464%" y="756" width="7.5697%" height="15" fill="rgb(247,14,11)" fg:x="5817" fg:w="489"/><text x="90.2964%" y="766.50">_find_and_..</text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:1310) (489 samples, 7.57%)</title><rect x="90.0464%" y="772" width="7.5697%" height="15" fill="rgb(206,149,34)" fg:x="5817" fg:w="489"/><text x="90.2964%" y="782.50">_find_and_..</text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:488) (489 samples, 7.57%)</title><rect x="90.0464%" y="788" width="7.5697%" height="15" fill="rgb(227,228,4)" fg:x="5817" fg:w="489"/><text x="90.2964%" y="798.50">_call_with..</text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:1360) (489 samples, 7.57%)</title><rect x="90.0464%" y="804" width="7.5697%" height="15" fill="rgb(238,218,28)" fg:x="5817" fg:w="489"/><text x="90.2964%" y="814.50">_find_and_..</text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:1331) (489 samples, 7.57%)</title><rect x="90.0464%" y="820" width="7.5697%" height="15" fill="rgb(252,86,40)" fg:x="5817" fg:w="489"/><text x="90.2964%" y="830.50">_find_and_..</text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:935) (489 samples, 7.57%)</title><rect x="90.0464%" y="836" width="7.5697%" height="15" fill="rgb(251,225,11)" fg:x="5817" fg:w="489"/><text x="90.2964%" y="846.50">_load_unlo..</text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:995) (489 samples, 7.57%)</title><rect x="90.0464%" y="852" width="7.5697%" height="15" fill="rgb(206,46,49)" fg:x="5817" fg:w="489"/><text x="90.2964%" y="862.50">exec_modul..</text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:488) (489 samples, 7.57%)</title><rect x="90.0464%" y="868" width="7.5697%" height="15" fill="rgb(245,128,24)" fg:x="5817" fg:w="489"/><text x="90.2964%" y="878.50">_call_with..</text></g><g><title>&lt;module&gt; (torch/_dynamo/__init__.py:53) (121 samples, 1.87%)</title><rect x="95.7430%" y="884" width="1.8731%" height="15" fill="rgb(219,177,34)" fg:x="6185" fg:w="121"/><text x="95.9930%" y="894.50">&lt;..</text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;:1415) (121 samples, 1.87%)</title><rect x="95.7430%" y="900" width="1.8731%" height="15" fill="rgb(218,60,48)" fg:x="6185" fg:w="121"/><text x="95.9930%" y="910.50">_..</text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:488) (121 samples, 1.87%)</title><rect x="95.7430%" y="916" width="1.8731%" height="15" fill="rgb(221,11,5)" fg:x="6185" fg:w="121"/><text x="95.9930%" y="926.50">_..</text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:1360) (121 samples, 1.87%)</title><rect x="95.7430%" y="932" width="1.8731%" height="15" fill="rgb(220,148,13)" fg:x="6185" fg:w="121"/><text x="95.9930%" y="942.50">_..</text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:1331) (121 samples, 1.87%)</title><rect x="95.7430%" y="948" width="1.8731%" height="15" fill="rgb(210,16,3)" fg:x="6185" fg:w="121"/><text x="95.9930%" y="958.50">_..</text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:935) (121 samples, 1.87%)</title><rect x="95.7430%" y="964" width="1.8731%" height="15" fill="rgb(236,80,2)" fg:x="6185" fg:w="121"/><text x="95.9930%" y="974.50">_..</text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:995) (121 samples, 1.87%)</title><rect x="95.7430%" y="980" width="1.8731%" height="15" fill="rgb(239,129,19)" fg:x="6185" fg:w="121"/><text x="95.9930%" y="990.50">e..</text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:488) (121 samples, 1.87%)</title><rect x="95.7430%" y="996" width="1.8731%" height="15" fill="rgb(220,106,35)" fg:x="6185" fg:w="121"/><text x="95.9930%" y="1006.50">_..</text></g><g><title>&lt;module&gt; (torch/_dynamo/polyfills/loader.py:25) (121 samples, 1.87%)</title><rect x="95.7430%" y="1012" width="1.8731%" height="15" fill="rgb(252,139,45)" fg:x="6185" fg:w="121"/><text x="95.9930%" y="1022.50">&lt;..</text></g><g><title>&lt;genexpr&gt; (torch/_dynamo/polyfills/loader.py:26) (121 samples, 1.87%)</title><rect x="95.7430%" y="1028" width="1.8731%" height="15" fill="rgb(229,8,36)" fg:x="6185" fg:w="121"/><text x="95.9930%" y="1038.50">&lt;..</text></g><g><title>import_module (importlib/__init__.py:90) (121 samples, 1.87%)</title><rect x="95.7430%" y="1044" width="1.8731%" height="15" fill="rgb(230,126,33)" fg:x="6185" fg:w="121"/><text x="95.9930%" y="1054.50">i..</text></g><g><title>_gcd_import (&lt;frozen importlib._bootstrap&gt;:1387) (121 samples, 1.87%)</title><rect x="95.7430%" y="1060" width="1.8731%" height="15" fill="rgb(239,140,21)" fg:x="6185" fg:w="121"/><text x="95.9930%" y="1070.50">_..</text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:1360) (121 samples, 1.87%)</title><rect x="95.7430%" y="1076" width="1.8731%" height="15" fill="rgb(254,104,9)" fg:x="6185" fg:w="121"/><text x="95.9930%" y="1086.50">_..</text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:1331) (121 samples, 1.87%)</title><rect x="95.7430%" y="1092" width="1.8731%" height="15" fill="rgb(239,52,14)" fg:x="6185" fg:w="121"/><text x="95.9930%" y="1102.50">_..</text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:935) (121 samples, 1.87%)</title><rect x="95.7430%" y="1108" width="1.8731%" height="15" fill="rgb(208,227,44)" fg:x="6185" fg:w="121"/><text x="95.9930%" y="1118.50">_..</text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:995) (120 samples, 1.86%)</title><rect x="95.7585%" y="1124" width="1.8576%" height="15" fill="rgb(246,18,19)" fg:x="6186" fg:w="120"/><text x="96.0085%" y="1134.50">e..</text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:488) (120 samples, 1.86%)</title><rect x="95.7585%" y="1140" width="1.8576%" height="15" fill="rgb(235,228,25)" fg:x="6186" fg:w="120"/><text x="96.0085%" y="1150.50">_..</text></g><g><title>&lt;module&gt; (torchvision/__init__.py:10) (555 samples, 8.59%)</title><rect x="89.0557%" y="180" width="8.5913%" height="15" fill="rgb(240,156,20)" fg:x="5753" fg:w="555"/><text x="89.3057%" y="190.50">&lt;module&gt; (to..</text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;:1415) (555 samples, 8.59%)</title><rect x="89.0557%" y="196" width="8.5913%" height="15" fill="rgb(224,8,20)" fg:x="5753" fg:w="555"/><text x="89.3057%" y="206.50">_handle_from..</text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:488) (555 samples, 8.59%)</title><rect x="89.0557%" y="212" width="8.5913%" height="15" fill="rgb(214,12,52)" fg:x="5753" fg:w="555"/><text x="89.3057%" y="222.50">_call_with_f..</text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:1360) (555 samples, 8.59%)</title><rect x="89.0557%" y="228" width="8.5913%" height="15" fill="rgb(211,220,47)" fg:x="5753" fg:w="555"/><text x="89.3057%" y="238.50">_find_and_lo..</text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:1331) (555 samples, 8.59%)</title><rect x="89.0557%" y="244" width="8.5913%" height="15" fill="rgb(250,173,5)" fg:x="5753" fg:w="555"/><text x="89.3057%" y="254.50">_find_and_lo..</text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:935) (555 samples, 8.59%)</title><rect x="89.0557%" y="260" width="8.5913%" height="15" fill="rgb(250,125,52)" fg:x="5753" fg:w="555"/><text x="89.3057%" y="270.50">_load_unlock..</text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:995) (555 samples, 8.59%)</title><rect x="89.0557%" y="276" width="8.5913%" height="15" fill="rgb(209,133,18)" fg:x="5753" fg:w="555"/><text x="89.3057%" y="286.50">exec_module ..</text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:488) (555 samples, 8.59%)</title><rect x="89.0557%" y="292" width="8.5913%" height="15" fill="rgb(216,173,22)" fg:x="5753" fg:w="555"/><text x="89.3057%" y="302.50">_call_with_f..</text></g><g><title>&lt;module&gt; (pytorch-sample.py:4) (559 samples, 8.65%)</title><rect x="89.0557%" y="84" width="8.6533%" height="15" fill="rgb(205,3,22)" fg:x="5753" fg:w="559"/><text x="89.3057%" y="94.50">&lt;module&gt; (py..</text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:1360) (559 samples, 8.65%)</title><rect x="89.0557%" y="100" width="8.6533%" height="15" fill="rgb(248,22,20)" fg:x="5753" fg:w="559"/><text x="89.3057%" y="110.50">_find_and_lo..</text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:1331) (559 samples, 8.65%)</title><rect x="89.0557%" y="116" width="8.6533%" height="15" fill="rgb(233,6,29)" fg:x="5753" fg:w="559"/><text x="89.3057%" y="126.50">_find_and_lo..</text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:935) (559 samples, 8.65%)</title><rect x="89.0557%" y="132" width="8.6533%" height="15" fill="rgb(240,22,54)" fg:x="5753" fg:w="559"/><text x="89.3057%" y="142.50">_load_unlock..</text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:995) (559 samples, 8.65%)</title><rect x="89.0557%" y="148" width="8.6533%" height="15" fill="rgb(231,133,32)" fg:x="5753" fg:w="559"/><text x="89.3057%" y="158.50">exec_module ..</text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:488) (559 samples, 8.65%)</title><rect x="89.0557%" y="164" width="8.6533%" height="15" fill="rgb(248,193,4)" fg:x="5753" fg:w="559"/><text x="89.3057%" y="174.50">_call_with_f..</text></g><g><title>&lt;module&gt; (pytorch-sample.py:7) (10 samples, 0.15%)</title><rect x="97.7090%" y="84" width="0.1548%" height="15" fill="rgb(211,178,46)" fg:x="6312" fg:w="10"/><text x="97.9590%" y="94.50"></text></g><g><title>wrapper (torchvision/models/_utils.py:142) (10 samples, 0.15%)</title><rect x="97.7090%" y="100" width="0.1548%" height="15" fill="rgb(224,5,42)" fg:x="6312" fg:w="10"/><text x="97.9590%" y="110.50"></text></g><g><title>inner_wrapper (torchvision/models/_utils.py:228) (10 samples, 0.15%)</title><rect x="97.7090%" y="116" width="0.1548%" height="15" fill="rgb(239,176,25)" fg:x="6312" fg:w="10"/><text x="97.9590%" y="126.50"></text></g><g><title>resnet18 (torchvision/models/resnet.py:705) (10 samples, 0.15%)</title><rect x="97.7090%" y="132" width="0.1548%" height="15" fill="rgb(245,187,50)" fg:x="6312" fg:w="10"/><text x="97.9590%" y="142.50"></text></g><g><title>_resnet (torchvision/models/resnet.py:298) (10 samples, 0.15%)</title><rect x="97.7090%" y="148" width="0.1548%" height="15" fill="rgb(248,24,15)" fg:x="6312" fg:w="10"/><text x="97.9590%" y="158.50"></text></g><g><title>0x77d25282a1ca (libc.so.6) (6,332 samples, 98.02%)</title><rect x="0.0000%" y="68" width="98.0186%" height="15" fill="rgb(205,166,13)" fg:x="0" fg:w="6332"/><text x="0.2500%" y="78.50">0x77d25282a1ca (libc.so.6)</text></g><g><title>_forward_impl (torchvision/models/resnet.py:275) (9 samples, 0.14%)</title><rect x="98.0495%" y="148" width="0.1393%" height="15" fill="rgb(208,114,23)" fg:x="6334" fg:w="9"/><text x="98.2995%" y="158.50"></text></g><g><title>_wrapped_call_impl (torch/nn/modules/module.py:1751) (9 samples, 0.14%)</title><rect x="98.0495%" y="164" width="0.1393%" height="15" fill="rgb(239,127,18)" fg:x="6334" fg:w="9"/><text x="98.2995%" y="174.50"></text></g><g><title>_call_impl (torch/nn/modules/module.py:1762) (9 samples, 0.14%)</title><rect x="98.0495%" y="180" width="0.1393%" height="15" fill="rgb(219,154,28)" fg:x="6334" fg:w="9"/><text x="98.2995%" y="190.50"></text></g><g><title>forward (torch/nn/modules/container.py:240) (9 samples, 0.14%)</title><rect x="98.0495%" y="196" width="0.1393%" height="15" fill="rgb(225,157,23)" fg:x="6334" fg:w="9"/><text x="98.2995%" y="206.50"></text></g><g><title>_wrapped_call_impl (torch/nn/modules/module.py:1751) (9 samples, 0.14%)</title><rect x="98.0495%" y="212" width="0.1393%" height="15" fill="rgb(219,8,6)" fg:x="6334" fg:w="9"/><text x="98.2995%" y="222.50"></text></g><g><title>_call_impl (torch/nn/modules/module.py:1762) (9 samples, 0.14%)</title><rect x="98.0495%" y="228" width="0.1393%" height="15" fill="rgb(212,47,6)" fg:x="6334" fg:w="9"/><text x="98.2995%" y="238.50"></text></g><g><title>forward (torchvision/models/resnet.py:100) (9 samples, 0.14%)</title><rect x="98.0495%" y="244" width="0.1393%" height="15" fill="rgb(224,190,4)" fg:x="6334" fg:w="9"/><text x="98.2995%" y="254.50"></text></g><g><title>_wrapped_call_impl (torch/nn/modules/module.py:1751) (9 samples, 0.14%)</title><rect x="98.0495%" y="260" width="0.1393%" height="15" fill="rgb(239,183,29)" fg:x="6334" fg:w="9"/><text x="98.2995%" y="270.50"></text></g><g><title>_call_impl (torch/nn/modules/module.py:1762) (9 samples, 0.14%)</title><rect x="98.0495%" y="276" width="0.1393%" height="15" fill="rgb(213,57,7)" fg:x="6334" fg:w="9"/><text x="98.2995%" y="286.50"></text></g><g><title>forward (torch/nn/modules/container.py:240) (9 samples, 0.14%)</title><rect x="98.0495%" y="292" width="0.1393%" height="15" fill="rgb(216,148,1)" fg:x="6334" fg:w="9"/><text x="98.2995%" y="302.50"></text></g><g><title>_wrapped_call_impl (torch/nn/modules/module.py:1751) (9 samples, 0.14%)</title><rect x="98.0495%" y="308" width="0.1393%" height="15" fill="rgb(236,182,29)" fg:x="6334" fg:w="9"/><text x="98.2995%" y="318.50"></text></g><g><title>_call_impl (torch/nn/modules/module.py:1762) (9 samples, 0.14%)</title><rect x="98.0495%" y="324" width="0.1393%" height="15" fill="rgb(244,120,48)" fg:x="6334" fg:w="9"/><text x="98.2995%" y="334.50"></text></g><g><title>forward (torch/nn/modules/conv.py:554) (9 samples, 0.14%)</title><rect x="98.0495%" y="340" width="0.1393%" height="15" fill="rgb(206,71,34)" fg:x="6334" fg:w="9"/><text x="98.2995%" y="350.50"></text></g><g><title>_conv_forward (torch/nn/modules/conv.py:550) (9 samples, 0.14%)</title><rect x="98.0495%" y="356" width="0.1393%" height="15" fill="rgb(242,32,6)" fg:x="6334" fg:w="9"/><text x="98.2995%" y="366.50"></text></g><g><title>run_model (pytorch-sample.py:16) (16 samples, 0.25%)</title><rect x="98.0186%" y="84" width="0.2477%" height="15" fill="rgb(241,35,3)" fg:x="6332" fg:w="16"/><text x="98.2686%" y="94.50"></text></g><g><title>_wrapped_call_impl (torch/nn/modules/module.py:1751) (16 samples, 0.25%)</title><rect x="98.0186%" y="100" width="0.2477%" height="15" fill="rgb(222,62,19)" fg:x="6332" fg:w="16"/><text x="98.2686%" y="110.50"></text></g><g><title>_call_impl (torch/nn/modules/module.py:1762) (16 samples, 0.25%)</title><rect x="98.0186%" y="116" width="0.2477%" height="15" fill="rgb(223,110,41)" fg:x="6332" fg:w="16"/><text x="98.2686%" y="126.50"></text></g><g><title>forward (torchvision/models/resnet.py:285) (16 samples, 0.25%)</title><rect x="98.0186%" y="132" width="0.2477%" height="15" fill="rgb(208,224,4)" fg:x="6332" fg:w="16"/><text x="98.2686%" y="142.50"></text></g><g><title>all (6,460 samples, 100%)</title><rect x="0.0000%" y="52" width="100.0000%" height="15" fill="rgb(241,137,19)" fg:x="0" fg:w="6460"/><text x="0.2500%" y="62.50"></text></g><g><title>&lt;module&gt; (pytorch-sample.py:23) (128 samples, 1.98%)</title><rect x="98.0186%" y="68" width="1.9814%" height="15" fill="rgb(244,24,17)" fg:x="6332" fg:w="128"/><text x="98.2686%" y="78.50">&lt;..</text></g><g><title>run_model (pytorch-sample.py:19) (112 samples, 1.73%)</title><rect x="98.2663%" y="84" width="1.7337%" height="15" fill="rgb(245,178,49)" fg:x="6348" fg:w="112"/><text x="98.5163%" y="94.50"></text></g><g><title>backward (torch/_tensor.py:648) (112 samples, 1.73%)</title><rect x="98.2663%" y="100" width="1.7337%" height="15" fill="rgb(219,160,38)" fg:x="6348" fg:w="112"/><text x="98.5163%" y="110.50"></text></g><g><title>backward (torch/autograd/__init__.py:353) (112 samples, 1.73%)</title><rect x="98.2663%" y="116" width="1.7337%" height="15" fill="rgb(228,137,14)" fg:x="6348" fg:w="112"/><text x="98.5163%" y="126.50"></text></g><g><title>_engine_run_backward (torch/autograd/graph.py:824) (112 samples, 1.73%)</title><rect x="98.2663%" y="132" width="1.7337%" height="15" fill="rgb(237,134,11)" fg:x="6348" fg:w="112"/><text x="98.5163%" y="142.50"></text></g></svg></svg>